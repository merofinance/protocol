{"abi": [{"inputs": [{"internalType": "address", "name": "vault_", "type": "address"}, {"internalType": "address", "name": "strategist_", "type": "address"}, {"internalType": "uint256", "name": "convexPid_", "type": "uint256"}, {"internalType": "address", "name": "curvePool_", "type": "address"}, {"internalType": "uint256", "name": "curveIndex_", "type": "uint256"}, {"internalType": "address", "name": "curveHopPool_", "type": "address"}, {"internalType": "uint256", "name": "curveHopIndex_", "type": "uint256"}, {"internalType": "contract IAddressProvider", "name": "addressProvider_", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "token", "type": "address"}], "name": "AddRewardToken", "type": "event"}, {"anonymous": false, "inputs": [], "name": "Deposit", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Harvest", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "token", "type": "address"}], "name": "RemoveRewardToken", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "reserve", "type": "address"}], "name": "SetCommunityReserve", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetCrvCommunityReserveShare", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetCvxCommunityReserveShare", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetHopImbalanceToleranceIn", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetHopImbalanceToleranceOut", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetImbalanceToleranceIn", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "SetImbalanceToleranceOut", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "strategist", "type": "address"}], "name": "SetStrategist", "type": "event"}, {"anonymous": false, "inputs": [], "name": "Shutdown", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Withdraw", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "WithdrawAll", "type": "event"}, {"inputs": [{"internalType": "address", "name": "token_", "type": "address"}], "name": "addRewardToken", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "balance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "convexPid_", "type": "uint256"}, {"internalType": "address", "name": "curvePool_", "type": "address"}, {"internalType": "uint256", "name": "curveIndex_", "type": "uint256"}], "name": "changeConvexPool", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "communityReserve", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "convexPid", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "crvCommunityReserveShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "curveHopIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "curveHopPool", "outputs": [{"internalType": "contract ICurveSwapEth", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "curveIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "curvePool", "outputs": [{"internalType": "contract ICurveSwapEth", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "cvxCommunityReserveShare", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimalMultiplier", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "deposit", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "crvEarned", "type": "uint256"}], "name": "getCvxMintAmount", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "harvest", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "harvestable", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "hasPendingFunds", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "pure", "type": "function"}, {"inputs": [], "name": "hopImbalanceToleranceIn", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "hopImbalanceToleranceOut", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "hopLp", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "imbalanceToleranceIn", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "imbalanceToleranceOut", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "isShutdown", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "lp", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "address", "name": "token_", "type": "address"}], "name": "removeRewardToken", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "rewardTokens", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "rewards", "outputs": [{"internalType": "contract IRewardStaking", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "roleManager", "outputs": [{"internalType": "contract IRoleManager", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_communityReserve", "type": "address"}], "name": "setCommunityReserve", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "crvCommunityReserveShare_", "type": "uint256"}], "name": "setCrvCommunityReserveShare", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "cvxCommunityReserveShare_", "type": "uint256"}], "name": "setCvxCommunityReserveShare", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_hopImbalanceToleranceIn", "type": "uint256"}], "name": "setHopImbalanceToleranceIn", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_hopImbalanceToleranceOut", "type": "uint256"}], "name": "setHopImbalanceToleranceOut", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "imbalanceToleranceIn_", "type": "uint256"}], "name": "setImbalanceToleranceIn", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "imbalanceToleranceOut_", "type": "uint256"}], "name": "setImbalanceToleranceOut", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "strategist_", "type": "address"}], "name": "setStrategist", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "shutdown", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "strategist", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "underlying", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "vault", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount_", "type": "uint256"}], "name": "withdraw", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "withdrawAll", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"107": "contracts/utils/CvxMintAmount.sol", "116": "interfaces/IAddressProvider.sol", "121": "interfaces/IERC20Full.sol", "128": "interfaces/IStakerVault.sol", "130": "interfaces/IVault.sol", "143": "interfaces/pool/ILiquidityPool.sol", "145": "interfaces/strategies/IConvexStrategyBase.sol", "146": "interfaces/strategies/IMeroTriHopCvx.sol", "147": "interfaces/strategies/IStrategy.sol", "169": "interfaces/vendor/ICurveSwapEth.sol", "17": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol", "174": "interfaces/vendor/IRewardStaking.sol", "188": "libraries/Errors.sol", "19": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol", "190": "libraries/ScaledMath.sol", "191": "libraries/UncheckedMath.sol", "20": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol", "39": "contracts/access/Authorization.sol", "40": "contracts/access/AuthorizationBase.sol", "59": "contracts/strategies/ConvexStrategyBase.sol", "61": "contracts/strategies/MeroTriHopCvx.sol"}, "ast": {"absolutePath": "contracts/strategies/MeroTriHopCvx.sol", "exportedSymbols": {"Address": [37332], "AddressProviderHelpers": [34461], "AddressProviderKeys": [32219], "AddressProviderMeta": [32299], "Authorization": [5500], "AuthorizationBase": [5607], "ConvexStrategyBase": [16486], "CvxMintAmount": [28615], "EnumerableExtensions": [32724], "EnumerableMapping": [33549], "EnumerableSet": [38055], "Error": [35631], "IAction": [33739], "IAddressProvider": [31927], "IBooster": [41968], "IController": [33646], "IConvexStrategyBase": [41900], "ICurveRegistry": [41978], "ICurveSwapEth": [42100], "IERC20": [34600], "IERC20Full": [36621], "IFeeBurner": [36599], "IGasBank": [31977], "IInflationManager": [34231], "ILiquidityPool": [33980], "IMeroToken": [43040], "IMeroTriHopCvx": [42122], "IOracleProvider": [32180], "IRewardStaking": [35291], "IRoleManager": [36932], "IStakerVault": [32153], "IStrategy": [40861], "ISwapperRouter": [41854], "IVault": [36776], "IVaultReserve": [43341], "MeroTriHopCvx": [17890], "Roles": [33585], "SafeERC20": [34824], "ScaledMath": [36376], "UncheckedMath": [34522]}, "id": 17891, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 16959, "literals": ["solidity", "0.8", ".10"], "nodeType": "PragmaDirective", "src": "45:23:61"}, {"absolutePath": "contracts/strategies/ConvexStrategyBase.sol", "file": "./ConvexStrategyBase.sol", "id": 16960, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17891, "sourceUnit": 16487, "src": "70:34:61", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IERC20Full.sol", "file": "../../interfaces/IERC20Full.sol", "id": 16961, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17891, "sourceUnit": 36622, "src": "105:41:61", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/strategies/IMeroTriHopCvx.sol", "file": "../../interfaces/strategies/IMeroTriHopCvx.sol", "id": 16962, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17891, "sourceUnit": 42123, "src": "147:56:61", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/UncheckedMath.sol", "file": "../../libraries/UncheckedMath.sol", "id": 16963, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 17891, "sourceUnit": 34523, "src": "204:43:61", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 16965, "name": "ConvexStrategyBase", "nodeType": "IdentifierPath", "referencedDeclaration": 16486, "src": "910:18:61"}, "id": 16966, "nodeType": "InheritanceSpecifier", "src": "910:18:61"}, {"baseName": {"id": 16967, "name": "IMeroTriHopCvx", "nodeType": "IdentifierPath", "referencedDeclaration": 42122, "src": "930:14:61"}, "id": 16968, "nodeType": "InheritanceSpecifier", "src": "930:14:61"}], "canonicalName": "MeroTriHopCvx", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 16964, "nodeType": "StructuredDocumentation", "src": "249:634:61", "text": " This is the MeroTriHopCvx strategy, which is designed to be used by a Mero ERC20 Vault.\n The strategy holds a given ERC20 underlying and allocates liquidity to Convex via a given Curve Pool.\n The Curve Pools used are Meta Pools which first require getting an LP Token from another Curve Pool.\n The strategy does a 'Hop' when depositing and withdrawing, by first getting the required LP Token, and then the final LP Token for Convex.\n Rewards received on Convex (CVX, CRV), are sold in part for the underlying.\n A share of earned CVX & CRV are retained on behalf of the Mero community to participate in governance."}, "fullyImplemented": true, "id": 17890, "linearizedBaseContracts": [17890, 42122, 16486, 28615, 5500, 5607, 41900, 40861], "name": "MeroTriHopCvx", "nameLocation": "893:13:61", "nodeType": "ContractDefinition", "nodes": [{"id": 16971, "libraryName": {"id": 16969, "name": "ScaledMath", "nodeType": "IdentifierPath", "referencedDeclaration": 36376, "src": "957:10:61"}, "nodeType": "UsingForDirective", "src": "951:29:61", "typeName": {"id": 16970, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "972:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 16974, "libraryName": {"id": 16972, "name": "UncheckedMath", "nodeType": "IdentifierPath", "referencedDeclaration": 34522, "src": "991:13:61"}, "nodeType": "UsingForDirective", "src": "985:32:61", "typeName": {"id": 16973, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1009:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 16978, "libraryName": {"id": 16975, "name": "SafeERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 34824, "src": "1028:9:61"}, "nodeType": "UsingForDirective", "src": "1022:27:61", "typeName": {"id": 16977, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 16976, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 34600, "src": "1042:6:61"}, "referencedDeclaration": 34600, "src": "1042:6:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}}, {"constant": false, "functionSelector": "283f3b56", "id": 16981, "mutability": "immutable", "name": "curveHopPool", "nameLocation": "1086:12:61", "nodeType": "VariableDeclaration", "scope": 17890, "src": "1055:43:61", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}, "typeName": {"id": 16980, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 16979, "name": "ICurveSwapEth", "nodeType": "IdentifierPath", "referencedDeclaration": 42100, "src": "1055:13:61"}, "referencedDeclaration": 42100, "src": "1055:13:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "visibility": "public"}, {"constant": false, "functionSelector": "44d32ee9", "id": 16984, "mutability": "immutable", "name": "hopLp", "nameLocation": "1158:5:61", "nodeType": "VariableDeclaration", "scope": 17890, "src": "1134:29:61", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}, "typeName": {"id": 16983, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 16982, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 34600, "src": "1134:6:61"}, "referencedDeclaration": 34600, "src": "1134:6:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "visibility": "public"}, {"constant": false, "functionSelector": "69cbb00d", "id": 16986, "mutability": "immutable", "name": "curveHopIndex", "nameLocation": "1221:13:61", "nodeType": "VariableDeclaration", "scope": 17890, "src": "1196:38:61", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16985, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1196:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "b6ed67a8", "id": 16988, "mutability": "mutable", "name": "hopImbalanceToleranceIn", "nameLocation": "1290:23:61", "nodeType": "VariableDeclaration", "scope": 17890, "src": "1275:38:61", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16987, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1275:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "fdc0bfca", "id": 16990, "mutability": "mutable", "name": "hopImbalanceToleranceOut", "nameLocation": "1407:24:61", "nodeType": "VariableDeclaration", "scope": 17890, "src": "1392:39:61", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16989, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1392:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "3082538f", "id": 16992, "mutability": "mutable", "name": "decimalMultiplier", "nameLocation": "1526:17:61", "nodeType": "VariableDeclaration", "scope": 17890, "src": "1511:32:61", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16991, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1511:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"anonymous": false, "id": 16996, "name": "SetHopImbalanceToleranceIn", "nameLocation": "1605:26:61", "nodeType": "EventDefinition", "parameters": {"id": 16995, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16994, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "1640:5:61", "nodeType": "VariableDeclaration", "scope": 16996, "src": "1632:13:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16993, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1632:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1631:15:61"}, "src": "1599:48:61"}, {"anonymous": false, "id": 17000, "name": "SetHopImbalanceToleranceOut", "nameLocation": "1726:27:61", "nodeType": "EventDefinition", "parameters": {"id": 16999, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16998, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "1762:5:61", "nodeType": "VariableDeclaration", "scope": 17000, "src": "1754:13:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16997, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1754:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1753:15:61"}, "src": "1720:49:61"}, {"body": {"id": 17156, "nodeType": "Block", "src": "2295:1092:61", "statements": [{"expression": {"arguments": [{"id": 17029, "name": "curveHopPool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17012, "src": "2374:13:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17028, "name": "_validateCurvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16473, "src": "2355:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$", "typeString": "function (address) view"}}, "id": 17030, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2355:33:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17031, "nodeType": "ExpressionStatement", "src": "2355:33:61"}, {"assignments": [17033, null, null, null, null, 17035], "declarations": [{"constant": false, "id": 17033, "mutability": "mutable", "name": "lp_", "nameLocation": "2407:3:61", "nodeType": "VariableDeclaration", "scope": 17156, "src": "2399:11:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17032, "name": "address", "nodeType": "ElementaryTypeName", "src": "2399:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, null, null, null, null, {"constant": false, "id": 17035, "mutability": "mutable", "name": "shutdown", "nameLocation": "2425:8:61", "nodeType": "VariableDeclaration", "scope": 17156, "src": "2420:13:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 17034, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2420:4:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 17040, "initialValue": {"arguments": [{"id": 17038, "name": "convexPid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17006, "src": "2455:10:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17036, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15334, "src": "2437:8:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}}, "id": 17037, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "poolInfo", "nodeType": "MemberAccess", "referencedDeclaration": 41967, "src": "2437:17:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$", "typeString": "function (uint256) view external returns (address,address,address,address,address,bool)"}}, "id": 17039, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2437:29:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$", "typeString": "tuple(address,address,address,address,address,bool)"}}, "nodeType": "VariableDeclarationStatement", "src": "2398:68:61"}, {"expression": {"arguments": [{"id": 17043, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "2484:9:61", "subExpression": {"id": 17042, "name": "shutdown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17035, "src": "2485:8:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 17044, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "2495:5:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 17045, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "POOL_SHUTDOWN", "nodeType": "MemberAccess", "referencedDeclaration": 35558, "src": "2495:19:61", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 17041, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2476:7:61", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17046, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2476:39:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17047, "nodeType": "ExpressionStatement", "src": "2476:39:61"}, {"assignments": [17049], "declarations": [{"constant": false, "id": 17049, "mutability": "mutable", "name": "hopLp_", "nameLocation": "2533:6:61", "nodeType": "VariableDeclaration", "scope": 17156, "src": "2525:14:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17048, "name": "address", "nodeType": "ElementaryTypeName", "src": "2525:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 17056, "initialValue": {"arguments": [{"id": 17054, "name": "curveIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17010, "src": "2574:11:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17051, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17008, "src": "2556:10:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17050, "name": "ICurveSwapEth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42100, "src": "2542:13:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwapEth_$42100_$", "typeString": "type(contract ICurveSwapEth)"}}, "id": 17052, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2542:25:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "coins", "nodeType": "MemberAccess", "referencedDeclaration": 42048, "src": "2542:31:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view external returns (address)"}}, "id": 17055, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2542:44:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2525:61:61"}, {"expression": {"id": 17061, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17057, "name": "hopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16984, "src": "2596:5:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 17059, "name": "hopLp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17049, "src": "2611:6:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17058, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "2604:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17060, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2604:14:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "src": "2596:22:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17062, "nodeType": "ExpressionStatement", "src": "2596:22:61"}, {"expression": {"id": 17067, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17063, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16981, "src": "2628:12:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 17065, "name": "curveHopPool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17012, "src": "2657:13:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17064, "name": "ICurveSwapEth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42100, "src": "2643:13:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwapEth_$42100_$", "typeString": "type(contract ICurveSwapEth)"}}, "id": 17066, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2643:28:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "src": "2628:43:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17068, "nodeType": "ExpressionStatement", "src": "2628:43:61"}, {"assignments": [17070], "declarations": [{"constant": false, "id": 17070, "mutability": "mutable", "name": "underlying_", "nameLocation": "2689:11:61", "nodeType": "VariableDeclaration", "scope": 17156, "src": "2681:19:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17069, "name": "address", "nodeType": "ElementaryTypeName", "src": "2681:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 17077, "initialValue": {"arguments": [{"id": 17075, "name": "curveHopIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17014, "src": "2738:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17072, "name": "curveHopPool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17012, "src": "2717:13:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17071, "name": "ICurveSwapEth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42100, "src": "2703:13:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwapEth_$42100_$", "typeString": "type(contract ICurveSwapEth)"}}, "id": 17073, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2703:28:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "coins", "nodeType": "MemberAccess", "referencedDeclaration": 42048, "src": "2703:34:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view external returns (address)"}}, "id": 17076, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2703:50:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2681:72:61"}, {"expression": {"id": 17082, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17078, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15375, "src": "2763:10:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 17080, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17070, "src": "2783:11:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17079, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "2776:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17081, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2776:19:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "src": "2763:32:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17083, "nodeType": "ExpressionStatement", "src": "2763:32:61"}, {"expression": {"id": 17095, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17084, "name": "decimalMultiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16992, "src": "2805:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17094, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 17085, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2825:2:61", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 17092, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3138", "id": 17086, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2830:2:61", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 17088, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17070, "src": "2846:11:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17087, "name": "IERC20Full", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36621, "src": "2835:10:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20Full_$36621_$", "typeString": "type(contract IERC20Full)"}}, "id": 17089, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2835:23:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20Full_$36621", "typeString": "contract IERC20Full"}}, "id": 17090, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "decimals", "nodeType": "MemberAccess", "referencedDeclaration": 36620, "src": "2835:32:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$", "typeString": "function () view external returns (uint8)"}}, "id": 17091, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2835:34:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "2830:39:61", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "id": 17093, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2829:41:61", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "2825:45:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2805:65:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17096, "nodeType": "ExpressionStatement", "src": "2805:65:61"}, {"expression": {"id": 17099, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17097, "name": "curveHopIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16986, "src": "2907:13:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17098, "name": "curveHopIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17014, "src": "2923:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2907:30:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17100, "nodeType": "ExpressionStatement", "src": "2907:30:61"}, {"expression": {"id": 17103, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17101, "name": "imbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15387, "src": "2982:20:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e303031653138", "id": 17102, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3005:8:61", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000_by_1", "typeString": "int_const 1000000000000000"}, "value": "0.001e18"}, "src": "2982:31:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17104, "nodeType": "ExpressionStatement", "src": "2982:31:61"}, {"expression": {"id": 17107, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17105, "name": "imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15389, "src": "3023:21:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e303438653138", "id": 17106, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3047:8:61", "typeDescriptions": {"typeIdentifier": "t_rational_48000000000000000_by_1", "typeString": "int_const 48000000000000000"}, "value": "0.048e18"}, "src": "3023:32:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17108, "nodeType": "ExpressionStatement", "src": "3023:32:61"}, {"expression": {"id": 17111, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17109, "name": "hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16988, "src": "3065:23:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e303031653138", "id": 17110, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3091:8:61", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000_by_1", "typeString": "int_const 1000000000000000"}, "value": "0.001e18"}, "src": "3065:34:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17112, "nodeType": "ExpressionStatement", "src": "3065:34:61"}, {"expression": {"id": 17115, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17113, "name": "hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16990, "src": "3109:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e30303135653138", "id": 17114, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3136:9:61", "typeDescriptions": {"typeIdentifier": "t_rational_1500000000000000_by_1", "typeString": "int_const 1500000000000000"}, "value": "0.0015e18"}, "src": "3109:36:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17116, "nodeType": "ExpressionStatement", "src": "3109:36:61"}, {"expression": {"arguments": [{"id": 17121, "name": "curveHopPool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17012, "src": "3209:13:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 17124, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3229:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 17123, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3229:7:61", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 17122, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "3224:4:61", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 17125, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3224:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 17126, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "3224:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17118, "name": "underlying_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17070, "src": "3184:11:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17117, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "3177:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17119, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3177:19:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17120, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 34701, "src": "3177:31:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17127, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3177:65:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17128, "nodeType": "ExpressionStatement", "src": "3177:65:61"}, {"expression": {"arguments": [{"id": 17133, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17008, "src": "3279:10:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 17136, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3296:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 17135, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3296:7:61", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 17134, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "3291:4:61", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 17137, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3291:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 17138, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "3291:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17130, "name": "hopLp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17049, "src": "3259:6:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17129, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "3252:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17131, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3252:14:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 34701, "src": "3252:26:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17139, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3252:57:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17140, "nodeType": "ExpressionStatement", "src": "3252:57:61"}, {"expression": {"arguments": [{"arguments": [{"id": 17147, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15334, "src": "3351:8:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}], "id": 17146, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3343:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17145, "name": "address", "nodeType": "ElementaryTypeName", "src": "3343:7:61", "typeDescriptions": {}}}, "id": 17148, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3343:17:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 17151, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3367:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 17150, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3367:7:61", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 17149, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "3362:4:61", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 17152, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3362:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 17153, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "3362:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17142, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17033, "src": "3326:3:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17141, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "3319:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17143, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3319:11:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17144, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 34701, "src": "3319:23:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17154, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3319:61:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17155, "nodeType": "ExpressionStatement", "src": "3319:61:61"}]}, "id": 17157, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 17020, "name": "vault_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17002, "src": "2146:6:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17021, "name": "strategist_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17004, "src": "2166:11:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17022, "name": "convexPid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17006, "src": "2191:10:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 17023, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17008, "src": "2215:10:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17024, "name": "curveIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17010, "src": "2239:11:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 17025, "name": "addressProvider_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17017, "src": "2264:16:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}], "id": 17026, "kind": "baseConstructorSpecifier", "modifierName": {"id": 17019, "name": "ConvexStrategyBase", "nodeType": "IdentifierPath", "referencedDeclaration": 16486, "src": "2114:18:61"}, "nodeType": "ModifierInvocation", "src": "2114:176:61"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 17018, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17002, "mutability": "mutable", "name": "vault_", "nameLocation": "1873:6:61", "nodeType": "VariableDeclaration", "scope": 17157, "src": "1865:14:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17001, "name": "address", "nodeType": "ElementaryTypeName", "src": "1865:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17004, "mutability": "mutable", "name": "strategist_", "nameLocation": "1897:11:61", "nodeType": "VariableDeclaration", "scope": 17157, "src": "1889:19:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17003, "name": "address", "nodeType": "ElementaryTypeName", "src": "1889:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17006, "mutability": "mutable", "name": "convexPid_", "nameLocation": "1926:10:61", "nodeType": "VariableDeclaration", "scope": 17157, "src": "1918:18:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17005, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1918:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 17008, "mutability": "mutable", "name": "curvePool_", "nameLocation": "1954:10:61", "nodeType": "VariableDeclaration", "scope": 17157, "src": "1946:18:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17007, "name": "address", "nodeType": "ElementaryTypeName", "src": "1946:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17010, "mutability": "mutable", "name": "curveIndex_", "nameLocation": "1982:11:61", "nodeType": "VariableDeclaration", "scope": 17157, "src": "1974:19:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17009, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1974:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 17012, "mutability": "mutable", "name": "curveHopPool_", "nameLocation": "2011:13:61", "nodeType": "VariableDeclaration", "scope": 17157, "src": "2003:21:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17011, "name": "address", "nodeType": "ElementaryTypeName", "src": "2003:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17014, "mutability": "mutable", "name": "curveHopIndex_", "nameLocation": "2042:14:61", "nodeType": "VariableDeclaration", "scope": 17157, "src": "2034:22:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17013, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2034:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 17017, "mutability": "mutable", "name": "addressProvider_", "nameLocation": "2083:16:61", "nodeType": "VariableDeclaration", "scope": 17157, "src": "2066:33:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}, "typeName": {"id": 17016, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 17015, "name": "IAddressProvider", "nodeType": "IdentifierPath", "referencedDeclaration": 31927, "src": "2066:16:61"}, "referencedDeclaration": 31927, "src": "2066:16:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "visibility": "internal"}], "src": "1855:250:61"}, "returnParameters": {"id": 17027, "nodeType": "ParameterList", "parameters": [], "src": "2295:0:61"}, "scope": 17890, "src": "1844:1543:61", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [42107], "body": {"id": 17174, "nodeType": "Block", "src": "3745:134:61", "statements": [{"expression": {"id": 17168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17166, "name": "hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16988, "src": "3755:23:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17167, "name": "_hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17160, "src": "3781:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3755:50:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17169, "nodeType": "ExpressionStatement", "src": "3755:50:61"}, {"eventCall": {"arguments": [{"id": 17171, "name": "_hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17160, "src": "3847:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17170, "name": "SetHopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16996, "src": "3820:26:61", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 17172, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3820:52:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17173, "nodeType": "EmitStatement", "src": "3815:57:61"}]}, "documentation": {"id": 17158, "nodeType": "StructuredDocumentation", "src": "3393:216:61", "text": " @notice Set hop imbalance tolerance for Curve Hop Pool deposits.\n @dev Stored as a percent, e.g. 1% would be set as 0.01\n @param _hopImbalanceToleranceIn New hop imbalance tolerance in."}, "functionSelector": "938511a7", "id": 17175, "implemented": true, "kind": "function", "modifiers": [{"id": 17164, "kind": "modifierInvocation", "modifierName": {"id": 17163, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 5543, "src": "3726:14:61"}, "nodeType": "ModifierInvocation", "src": "3726:14:61"}], "name": "setHopImbalanceToleranceIn", "nameLocation": "3623:26:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17162, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3709:8:61"}, "parameters": {"id": 17161, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17160, "mutability": "mutable", "name": "_hopImbalanceToleranceIn", "nameLocation": "3658:24:61", "nodeType": "VariableDeclaration", "scope": 17175, "src": "3650:32:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17159, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3650:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3649:34:61"}, "returnParameters": {"id": 17165, "nodeType": "ParameterList", "parameters": [], "src": "3745:0:61"}, "scope": 17890, "src": "3614:265:61", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [42112], "body": {"id": 17192, "nodeType": "Block", "src": "4244:138:61", "statements": [{"expression": {"id": 17186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17184, "name": "hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16990, "src": "4254:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17185, "name": "_hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17178, "src": "4281:25:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4254:52:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17187, "nodeType": "ExpressionStatement", "src": "4254:52:61"}, {"eventCall": {"arguments": [{"id": 17189, "name": "_hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17178, "src": "4349:25:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17188, "name": "SetHopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17000, "src": "4321:27:61", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 17190, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4321:54:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17191, "nodeType": "EmitStatement", "src": "4316:59:61"}]}, "documentation": {"id": 17176, "nodeType": "StructuredDocumentation", "src": "3885:221:61", "text": " @notice Set hop imbalance tolerance for Curve Hop Pool withdrawals.\n @dev Stored as a percent, e.g. 1% would be set as 0.01\n @param _hopImbalanceToleranceOut New hop imbalance tolerance out."}, "functionSelector": "aa6a8caf", "id": 17193, "implemented": true, "kind": "function", "modifiers": [{"id": 17182, "kind": "modifierInvocation", "modifierName": {"id": 17181, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 5543, "src": "4225:14:61"}, "nodeType": "ModifierInvocation", "src": "4225:14:61"}], "name": "setHopImbalanceToleranceOut", "nameLocation": "4120:27:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17180, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4208:8:61"}, "parameters": {"id": 17179, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17178, "mutability": "mutable", "name": "_hopImbalanceToleranceOut", "nameLocation": "4156:25:61", "nodeType": "VariableDeclaration", "scope": 17193, "src": "4148:33:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17177, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4148:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4147:35:61"}, "returnParameters": {"id": 17183, "nodeType": "ParameterList", "parameters": [], "src": "4244:0:61"}, "scope": 17890, "src": "4111:271:61", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [42121], "body": {"id": 17313, "nodeType": "Block", "src": "4997:717:61", "statements": [{"expression": {"arguments": [{"id": 17207, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17198, "src": "5026:10:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17206, "name": "_validateCurvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16473, "src": "5007:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$", "typeString": "function (address) view"}}, "id": 17208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5007:30:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17209, "nodeType": "ExpressionStatement", "src": "5007:30:61"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17210, "name": "_harvest", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16308, "src": "5047:8:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$", "typeString": "function () returns (uint256)"}}, "id": 17211, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5047:10:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17212, "nodeType": "ExpressionStatement", "src": "5047:10:61"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17213, "name": "_withdrawAllToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17889, "src": "5067:19:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 17214, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5067:21:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17215, "nodeType": "ExpressionStatement", "src": "5067:21:61"}, {"expression": {"id": 17218, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17216, "name": "convexPid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15400, "src": "5098:9:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17217, "name": "convexPid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17196, "src": "5110:10:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5098:22:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17219, "nodeType": "ExpressionStatement", "src": "5098:22:61"}, {"expression": {"id": 17222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17220, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15402, "src": "5130:10:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17221, "name": "curveIndex_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17200, "src": "5143:11:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5130:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17223, "nodeType": "ExpressionStatement", "src": "5130:24:61"}, {"assignments": [17225, null, null, 17227, null, 17229], "declarations": [{"constant": false, "id": 17225, "mutability": "mutable", "name": "lp_", "nameLocation": "5173:3:61", "nodeType": "VariableDeclaration", "scope": 17313, "src": "5165:11:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17224, "name": "address", "nodeType": "ElementaryTypeName", "src": "5165:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, null, null, {"constant": false, "id": 17227, "mutability": "mutable", "name": "rewards_", "nameLocation": "5190:8:61", "nodeType": "VariableDeclaration", "scope": 17313, "src": "5182:16:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17226, "name": "address", "nodeType": "ElementaryTypeName", "src": "5182:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, null, {"constant": false, "id": 17229, "mutability": "mutable", "name": "shutdown", "nameLocation": "5207:8:61", "nodeType": "VariableDeclaration", "scope": 17313, "src": "5202:13:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 17228, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5202:4:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 17234, "initialValue": {"arguments": [{"id": 17232, "name": "convexPid_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17196, "src": "5237:10:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17230, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15334, "src": "5219:8:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}}, "id": 17231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "poolInfo", "nodeType": "MemberAccess", "referencedDeclaration": 41967, "src": "5219:17:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$", "typeString": "function (uint256) view external returns (address,address,address,address,address,bool)"}}, "id": 17233, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5219:29:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$", "typeString": "tuple(address,address,address,address,address,bool)"}}, "nodeType": "VariableDeclarationStatement", "src": "5164:84:61"}, {"expression": {"arguments": [{"id": 17237, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5266:9:61", "subExpression": {"id": 17236, "name": "shutdown", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17229, "src": "5267:8:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 17238, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "5277:5:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 17239, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "POOL_SHUTDOWN", "nodeType": "MemberAccess", "referencedDeclaration": 35558, "src": "5277:19:61", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 17235, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5258:7:61", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17240, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5258:39:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17241, "nodeType": "ExpressionStatement", "src": "5258:39:61"}, {"expression": {"id": 17246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17242, "name": "lp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15395, "src": "5307:2:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 17244, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17225, "src": "5319:3:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17243, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "5312:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5312:11:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "src": "5307:16:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17247, "nodeType": "ExpressionStatement", "src": "5307:16:61"}, {"expression": {"id": 17252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17248, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15392, "src": "5333:7:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$35291", "typeString": "contract IRewardStaking"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 17250, "name": "rewards_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17227, "src": "5358:8:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17249, "name": "IRewardStaking", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35291, "src": "5343:14:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IRewardStaking_$35291_$", "typeString": "type(contract IRewardStaking)"}}, "id": 17251, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5343:24:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$35291", "typeString": "contract IRewardStaking"}}, "src": "5333:34:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$35291", "typeString": "contract IRewardStaking"}}, "id": 17253, "nodeType": "ExpressionStatement", "src": "5333:34:61"}, {"expression": {"id": 17258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17254, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15398, "src": "5377:9:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 17256, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17198, "src": "5403:10:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17255, "name": "ICurveSwapEth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42100, "src": "5389:13:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICurveSwapEth_$42100_$", "typeString": "type(contract ICurveSwapEth)"}}, "id": 17257, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5389:25:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "src": "5377:37:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17259, "nodeType": "ExpressionStatement", "src": "5377:37:61"}, {"expression": {"arguments": [{"id": 17264, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17198, "src": "5450:10:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "30", "id": 17265, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5462:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "expression": {"arguments": [{"id": 17261, "name": "hopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16984, "src": "5431:5:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}], "id": 17260, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "5424:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17262, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5424:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 34701, "src": "5424:25:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17266, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5424:40:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17267, "nodeType": "ExpressionStatement", "src": "5424:40:61"}, {"expression": {"arguments": [{"id": 17272, "name": "curvePool_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17198, "src": "5500:10:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 17275, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5517:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 17274, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5517:7:61", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 17273, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "5512:4:61", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 17276, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5512:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 17277, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "5512:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17269, "name": "hopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16984, "src": "5481:5:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}], "id": 17268, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "5474:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5474:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17271, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 34701, "src": "5474:25:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5474:56:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17279, "nodeType": "ExpressionStatement", "src": "5474:56:61"}, {"expression": {"arguments": [{"arguments": [{"id": 17286, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15334, "src": "5572:8:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}], "id": 17285, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5564:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17284, "name": "address", "nodeType": "ElementaryTypeName", "src": "5564:7:61", "typeDescriptions": {}}}, "id": 17287, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5564:17:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "30", "id": 17288, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5583:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "expression": {"arguments": [{"id": 17281, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17225, "src": "5547:3:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17280, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "5540:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17282, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5540:11:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17283, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 34701, "src": "5540:23:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5540:45:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17290, "nodeType": "ExpressionStatement", "src": "5540:45:61"}, {"expression": {"arguments": [{"arguments": [{"id": 17297, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15334, "src": "5627:8:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}], "id": 17296, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5619:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17295, "name": "address", "nodeType": "ElementaryTypeName", "src": "5619:7:61", "typeDescriptions": {}}}, "id": 17298, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5619:17:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"arguments": [{"id": 17301, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5643:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 17300, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5643:7:61", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 17299, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "5638:4:61", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 17302, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5638:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 17303, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "5638:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17292, "name": "lp_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17225, "src": "5602:3:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 17291, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "5595:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 17293, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5595:11:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeApprove", "nodeType": "MemberAccess", "referencedDeclaration": 34701, "src": "5595:23:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17304, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5595:61:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17305, "nodeType": "ExpressionStatement", "src": "5595:61:61"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 17307, "name": "_deposit", "nodeType": "Identifier", "overloadedDeclarations": [17444], "referencedDeclaration": 17444, "src": "5674:8:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$", "typeString": "function () returns (bool)"}}, "id": 17308, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5674:10:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 17309, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "5686:5:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 17310, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "DEPOSIT_FAILED", "nodeType": "MemberAccess", "referencedDeclaration": 35534, "src": "5686:20:61", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 17306, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5666:7:61", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5666:41:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17312, "nodeType": "ExpressionStatement", "src": "5666:41:61"}]}, "documentation": {"id": 17194, "nodeType": "StructuredDocumentation", "src": "4388:454:61", "text": " @notice Changes the Convex Pool used for farming yield, e.g. from FRAX to MIM.\n @dev First withdraws all funds, then harvests any rewards, then changes pool, then deposits again.\n @param convexPid_ The PID for the new Convex Pool.\n @param curvePool_ The Curve Pool to deposit into to get the required LP Token for Convex staking.\n @param curveIndex_ The index of the new Convex Pool Token in the new Curve Pool."}, "functionSelector": "df22a747", "id": 17314, "implemented": true, "kind": "function", "modifiers": [{"id": 17204, "kind": "modifierInvocation", "modifierName": {"id": 17203, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 5543, "src": "4982:14:61"}, "nodeType": "ModifierInvocation", "src": "4982:14:61"}], "name": "changeConvexPool", "nameLocation": "4856:16:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17202, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4973:8:61"}, "parameters": {"id": 17201, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17196, "mutability": "mutable", "name": "convexPid_", "nameLocation": "4890:10:61", "nodeType": "VariableDeclaration", "scope": 17314, "src": "4882:18:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17195, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4882:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 17198, "mutability": "mutable", "name": "curvePool_", "nameLocation": "4918:10:61", "nodeType": "VariableDeclaration", "scope": 17314, "src": "4910:18:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 17197, "name": "address", "nodeType": "ElementaryTypeName", "src": "4910:7:61", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17200, "mutability": "mutable", "name": "curveIndex_", "nameLocation": "4946:11:61", "nodeType": "VariableDeclaration", "scope": 17314, "src": "4938:19:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17199, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4938:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4872:91:61"}, "returnParameters": {"id": 17205, "nodeType": "ParameterList", "parameters": [], "src": "4997:0:61"}, "scope": 17890, "src": "4847:867:61", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [16166], "body": {"id": 17336, "nodeType": "Block", "src": "5778:152:61", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17334, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17320, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [17632], "referencedDeclaration": 17632, "src": "5807:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17321, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5807:20:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17332, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17328, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17324, "name": "_stakedBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16439, "src": "5872:14:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17325, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5872:16:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17326, "name": "_lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16424, "src": "5891:10:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17327, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5891:12:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5872:31:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17323, "name": "_lpToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17820, "src": "5861:10:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5861:43:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17330, "name": "_hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17647, "src": "5907:13:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17331, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5907:15:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5861:61:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17322, "name": "_hopLpToUnderlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17799, "src": "5842:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17333, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5842:81:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5807:116:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17319, "id": 17335, "nodeType": "Return", "src": "5788:135:61"}]}, "functionSelector": "b69ef8a8", "id": 17337, "implemented": true, "kind": "function", "modifiers": [], "name": "balance", "nameLocation": "5729:7:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17316, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5751:8:61"}, "parameters": {"id": 17315, "nodeType": "ParameterList", "parameters": [], "src": "5736:2:61"}, "returnParameters": {"id": 17319, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17318, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17337, "src": "5769:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17317, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5769:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5768:9:61"}, "scope": 17890, "src": "5720:210:61", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [16173], "body": {"id": 17345, "nodeType": "Block", "src": "5997:39:61", "statements": [{"expression": {"hexValue": "4d65726f547269486f70437678", "id": 17343, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6014:15:61", "typeDescriptions": {"typeIdentifier": "t_stringliteral_152fe3f5670684728c4eec08312e416d23d0d7a83dbbb4ad6ae7189990dc1932", "typeString": "literal_string \"MeroTriHopCvx\""}, "value": "MeroTriHopCvx"}, "functionReturnParameters": 17342, "id": 17344, "nodeType": "Return", "src": "6007:22:61"}]}, "functionSelector": "06fdde03", "id": 17346, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "5945:4:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17339, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5964:8:61"}, "parameters": {"id": 17338, "nodeType": "ParameterList", "parameters": [], "src": "5949:2:61"}, "returnParameters": {"id": 17342, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17341, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17346, "src": "5982:13:61", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 17340, "name": "string", "nodeType": "ElementaryTypeName", "src": "5982:6:61", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "5981:15:61"}, "scope": 17890, "src": "5936:100:61", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"baseFunctions": [16188], "body": {"id": 17443, "nodeType": "Block", "src": "6095:881:61", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17353, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6113:3:61", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 17354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "6113:9:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 17355, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6126:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6113:14:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 17357, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "6129:5:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 17358, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_VALUE", "nodeType": "MemberAccess", "referencedDeclaration": 35348, "src": "6129:19:61", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 17352, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6105:7:61", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 17359, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6105:44:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17360, "nodeType": "ExpressionStatement", "src": "6105:44:61"}, {"assignments": [17362], "declarations": [{"constant": false, "id": 17362, "mutability": "mutable", "name": "underlyingBalance", "nameLocation": "6210:17:61", "nodeType": "VariableDeclaration", "scope": 17443, "src": "6202:25:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6202:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17365, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 17363, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [17632], "referencedDeclaration": 17632, "src": "6230:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17364, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6230:20:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6202:48:61"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17368, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17366, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17362, "src": "6264:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 17367, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6284:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6264:21:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17392, "nodeType": "IfStatement", "src": "6260:240:61", "trueBody": {"id": 17391, "nodeType": "Block", "src": "6287:213:61", "statements": [{"assignments": [17374], "declarations": [{"constant": false, "id": 17374, "mutability": "mutable", "name": "hopAmounts", "nameLocation": "6319:10:61", "nodeType": "VariableDeclaration", "scope": 17391, "src": "6301:28:61", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3]"}, "typeName": {"baseType": {"id": 17372, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6301:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17373, "length": {"hexValue": "33", "id": 17371, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6309:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "nodeType": "ArrayTypeName", "src": "6301:10:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr", "typeString": "uint256[3]"}}, "visibility": "internal"}], "id": 17375, "nodeType": "VariableDeclarationStatement", "src": "6301:28:61"}, {"expression": {"id": 17380, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 17376, "name": "hopAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17374, "src": "6343:10:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}}, "id": 17378, "indexExpression": {"id": 17377, "name": "curveHopIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16986, "src": "6354:13:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6343:25:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17379, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17362, "src": "6371:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6343:45:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17381, "nodeType": "ExpressionStatement", "src": "6343:45:61"}, {"expression": {"arguments": [{"id": 17385, "name": "hopAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17374, "src": "6429:10:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}}, {"arguments": [{"id": 17387, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17362, "src": "6470:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17386, "name": "_minHopLpAcceptedFromDeposit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17723, "src": "6441:28:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17388, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6441:47:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17382, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16981, "src": "6402:12:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add_liquidity", "nodeType": "MemberAccess", "referencedDeclaration": 42003, "src": "6402:26:61", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_array$_t_uint256_$3_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[3] memory,uint256) payable external"}}, "id": 17389, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6402:87:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17390, "nodeType": "ExpressionStatement", "src": "6402:87:61"}]}}, {"assignments": [17394], "declarations": [{"constant": false, "id": 17394, "mutability": "mutable", "name": "hopLpBalance", "nameLocation": "6556:12:61", "nodeType": "VariableDeclaration", "scope": 17443, "src": "6548:20:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17393, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6548:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17397, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 17395, "name": "_hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17647, "src": "6571:13:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17396, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6571:15:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6548:38:61"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17400, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17398, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17394, "src": "6600:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 17399, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6615:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6600:16:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17424, "nodeType": "IfStatement", "src": "6596:196:61", "trueBody": {"id": 17423, "nodeType": "Block", "src": "6618:174:61", "statements": [{"assignments": [17406], "declarations": [{"constant": false, "id": 17406, "mutability": "mutable", "name": "amounts", "nameLocation": "6650:7:61", "nodeType": "VariableDeclaration", "scope": 17423, "src": "6632:25:61", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 17404, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6632:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17405, "length": {"hexValue": "32", "id": 17403, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6640:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "6632:10:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 17407, "nodeType": "VariableDeclarationStatement", "src": "6632:25:61"}, {"expression": {"id": 17412, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 17408, "name": "amounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17406, "src": "6671:7:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 17410, "indexExpression": {"id": 17409, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15402, "src": "6679:10:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6671:19:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17411, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17394, "src": "6693:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6671:34:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17413, "nodeType": "ExpressionStatement", "src": "6671:34:61"}, {"expression": {"arguments": [{"id": 17417, "name": "amounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17406, "src": "6743:7:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"arguments": [{"id": 17419, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17394, "src": "6767:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17418, "name": "_minLpAccepted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17666, "src": "6752:14:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17420, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6752:28:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17414, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15398, "src": "6719:9:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17416, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add_liquidity", "nodeType": "MemberAccess", "referencedDeclaration": 41994, "src": "6719:23:61", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[2] memory,uint256) payable external"}}, "id": 17421, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6719:62:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17422, "nodeType": "ExpressionStatement", "src": "6719:62:61"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17425, "name": "_lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16424, "src": "6852:10:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17426, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6852:12:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 17427, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6868:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6852:17:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17431, "nodeType": "IfStatement", "src": "6848:35:61", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 17429, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6878:5:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 17351, "id": 17430, "nodeType": "Return", "src": "6871:12:61"}}, {"condition": {"id": 17437, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "6897:37:61", "subExpression": {"arguments": [{"id": 17434, "name": "convexPid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15400, "src": "6918:9:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 17435, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6929:4:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 17432, "name": "_BOOSTER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15334, "src": "6898:8:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$41968", "typeString": "contract IBooster"}}, "id": 17433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "depositAll", "nodeType": "MemberAccess", "referencedDeclaration": 41950, "src": "6898:19:61", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$", "typeString": "function (uint256,bool) external returns (bool)"}}, "id": 17436, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6898:36:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17440, "nodeType": "IfStatement", "src": "6893:55:61", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 17438, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6943:5:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 17351, "id": 17439, "nodeType": "Return", "src": "6936:12:61"}}, {"expression": {"hexValue": "74727565", "id": 17441, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6965:4:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 17351, "id": 17442, "nodeType": "Return", "src": "6958:11:61"}]}, "id": 17444, "implemented": true, "kind": "function", "modifiers": [], "name": "_deposit", "nameLocation": "6051:8:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17348, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6071:8:61"}, "parameters": {"id": 17347, "nodeType": "ParameterList", "parameters": [], "src": "6059:2:61"}, "returnParameters": {"id": 17351, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17350, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17444, "src": "6089:4:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 17349, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6089:4:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "6088:6:61"}, "scope": 17890, "src": "6042:934:61", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [16193], "body": {"id": 17560, "nodeType": "Block", "src": "7035:1347:61", "statements": [{"assignments": [17451], "declarations": [{"constant": false, "id": 17451, "mutability": "mutable", "name": "underlyingBalance", "nameLocation": "7105:17:61", "nodeType": "VariableDeclaration", "scope": 17560, "src": "7097:25:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17450, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7097:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17454, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 17452, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [17632], "referencedDeclaration": 17632, "src": "7125:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17453, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7125:20:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7097:48:61"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17457, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17455, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17451, "src": "7159:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 17456, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17446, "src": "7180:6:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7159:27:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17471, "nodeType": "IfStatement", "src": "7155:151:61", "trueBody": {"id": 17470, "nodeType": "Block", "src": "7188:118:61", "statements": [{"expression": {"arguments": [{"id": 17461, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15381, "src": "7226:5:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17462, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17446, "src": "7233:6:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17458, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15375, "src": "7202:10:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 34631, "src": "7202:23:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17463, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7202:38:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17464, "nodeType": "ExpressionStatement", "src": "7202:38:61"}, {"eventCall": {"arguments": [{"id": 17466, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17446, "src": "7268:6:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17465, "name": "Withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15408, "src": "7259:8:61", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 17467, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7259:16:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17468, "nodeType": "EmitStatement", "src": "7254:21:61"}, {"functionReturnParameters": 17449, "id": 17469, "nodeType": "Return", "src": "7289:7:61"}]}}, {"assignments": [17473], "declarations": [{"constant": false, "id": 17473, "mutability": "mutable", "name": "requiredUnderlyingAmount", "nameLocation": "7379:24:61", "nodeType": "VariableDeclaration", "scope": 17560, "src": "7371:32:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17472, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7371:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17478, "initialValue": {"arguments": [{"id": 17476, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17451, "src": "7426:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17474, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17446, "src": "7406:6:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "uncheckedSub", "nodeType": "MemberAccess", "referencedDeclaration": 34506, "src": "7406:19:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17477, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7406:38:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7371:73:61"}, {"assignments": [17480], "declarations": [{"constant": false, "id": 17480, "mutability": "mutable", "name": "maxHopLpBurned", "nameLocation": "7462:14:61", "nodeType": "VariableDeclaration", "scope": 17560, "src": "7454:22:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17479, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7454:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17484, "initialValue": {"arguments": [{"id": 17482, "name": "requiredUnderlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17473, "src": "7495:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17481, "name": "_maxHopLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17742, "src": "7479:15:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17483, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7479:41:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7454:66:61"}, {"assignments": [17486], "declarations": [{"constant": false, "id": 17486, "mutability": "mutable", "name": "requiredHopLpAmount", "nameLocation": "7538:19:61", "nodeType": "VariableDeclaration", "scope": 17560, "src": "7530:27:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17485, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7530:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17491, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17487, "name": "maxHopLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17480, "src": "7560:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17488, "name": "_hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17647, "src": "7577:13:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17489, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7577:15:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7560:32:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7530:62:61"}, {"assignments": [17493], "declarations": [{"constant": false, "id": 17493, "mutability": "mutable", "name": "maxLpBurned", "nameLocation": "7610:11:61", "nodeType": "VariableDeclaration", "scope": 17560, "src": "7602:19:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17492, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7602:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17497, "initialValue": {"arguments": [{"id": 17495, "name": "requiredHopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17486, "src": "7637:19:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17494, "name": "_maxLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17685, "src": "7624:12:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17496, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7624:33:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7602:55:61"}, {"assignments": [17499], "declarations": [{"constant": false, "id": 17499, "mutability": "mutable", "name": "requiredLpAmount", "nameLocation": "7675:16:61", "nodeType": "VariableDeclaration", "scope": 17560, "src": "7667:24:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17498, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7667:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17504, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17503, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17500, "name": "maxLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17493, "src": "7694:11:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17501, "name": "_lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16424, "src": "7708:10:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17502, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7708:12:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7694:26:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7667:53:61"}, {"condition": {"id": 17510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "7785:51:61", "subExpression": {"arguments": [{"id": 17507, "name": "requiredLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17499, "src": "7812:16:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 17508, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7830:5:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 17505, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15392, "src": "7786:7:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$35291", "typeString": "contract IRewardStaking"}}, "id": 17506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "withdrawAndUnwrap", "nodeType": "MemberAccess", "referencedDeclaration": 35249, "src": "7786:25:61", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$", "typeString": "function (uint256,bool) external returns (bool)"}}, "id": 17509, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7786:50:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17512, "nodeType": "IfStatement", "src": "7781:64:61", "trueBody": {"functionReturnParameters": 17449, "id": 17511, "nodeType": "Return", "src": "7838:7:61"}}, {"assignments": [17518], "declarations": [{"constant": false, "id": 17518, "mutability": "mutable", "name": "amounts", "nameLocation": "7926:7:61", "nodeType": "VariableDeclaration", "scope": 17560, "src": "7908:25:61", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2]"}, "typeName": {"baseType": {"id": 17516, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7908:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17517, "length": {"hexValue": "32", "id": 17515, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7916:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "ArrayTypeName", "src": "7908:10:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr", "typeString": "uint256[2]"}}, "visibility": "internal"}], "id": 17519, "nodeType": "VariableDeclarationStatement", "src": "7908:25:61"}, {"expression": {"id": 17524, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 17520, "name": "amounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17518, "src": "7943:7:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, "id": 17522, "indexExpression": {"id": 17521, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15402, "src": "7951:10:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7943:19:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17523, "name": "requiredHopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17486, "src": "7965:19:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7943:41:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17525, "nodeType": "ExpressionStatement", "src": "7943:41:61"}, {"expression": {"arguments": [{"id": 17529, "name": "amounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17518, "src": "8031:7:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}}, {"id": 17530, "name": "maxLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17493, "src": "8040:11:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr", "typeString": "uint256[2] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17526, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15398, "src": "7994:9:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "remove_liquidity_imbalance", "nodeType": "MemberAccess", "referencedDeclaration": 42021, "src": "7994:36:61", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[2] memory,uint256) external"}}, "id": 17531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7994:58:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17532, "nodeType": "ExpressionStatement", "src": "7994:58:61"}, {"assignments": [17538], "declarations": [{"constant": false, "id": 17538, "mutability": "mutable", "name": "hopAmounts", "nameLocation": "8138:10:61", "nodeType": "VariableDeclaration", "scope": 17560, "src": "8120:28:61", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3]"}, "typeName": {"baseType": {"id": 17536, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8120:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17537, "length": {"hexValue": "33", "id": 17535, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8128:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "nodeType": "ArrayTypeName", "src": "8120:10:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr", "typeString": "uint256[3]"}}, "visibility": "internal"}], "id": 17539, "nodeType": "VariableDeclarationStatement", "src": "8120:28:61"}, {"expression": {"id": 17544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 17540, "name": "hopAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17538, "src": "8158:10:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}}, "id": 17542, "indexExpression": {"id": 17541, "name": "curveHopIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16986, "src": "8169:13:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8158:25:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 17543, "name": "requiredUnderlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17473, "src": "8186:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8158:52:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17545, "nodeType": "ExpressionStatement", "src": "8158:52:61"}, {"expression": {"arguments": [{"id": 17549, "name": "hopAmounts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17538, "src": "8260:10:61", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}}, {"id": 17550, "name": "maxHopLpBurned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17480, "src": "8272:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr", "typeString": "uint256[3] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17546, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16981, "src": "8220:12:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17548, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "remove_liquidity_imbalance", "nodeType": "MemberAccess", "referencedDeclaration": 42012, "src": "8220:39:61", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$3_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (uint256[3] memory,uint256) external"}}, "id": 17551, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8220:67:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17552, "nodeType": "ExpressionStatement", "src": "8220:67:61"}, {"expression": {"arguments": [{"id": 17556, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15381, "src": "8361:5:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17557, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17446, "src": "8368:6:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17553, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15375, "src": "8337:10:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 34631, "src": "8337:23:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17558, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8337:38:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17559, "nodeType": "ExpressionStatement", "src": "8337:38:61"}]}, "id": 17561, "implemented": true, "kind": "function", "modifiers": [], "name": "_withdraw", "nameLocation": "6991:9:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17448, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7026:8:61"}, "parameters": {"id": 17447, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17446, "mutability": "mutable", "name": "amount", "nameLocation": "7009:6:61", "nodeType": "VariableDeclaration", "scope": 17561, "src": "7001:14:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17445, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7001:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7000:16:61"}, "returnParameters": {"id": 17449, "nodeType": "ParameterList", "parameters": [], "src": "7035:0:61"}, "scope": 17890, "src": "6982:1400:61", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [16198], "body": {"id": 17616, "nodeType": "Block", "src": "8448:689:61", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 17567, "name": "_withdrawAllToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17889, "src": "8528:19:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 17568, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8528:21:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17569, "nodeType": "ExpressionStatement", "src": "8528:21:61"}, {"assignments": [17571], "declarations": [{"constant": false, "id": 17571, "mutability": "mutable", "name": "hopLpBalance", "nameLocation": "8618:12:61", "nodeType": "VariableDeclaration", "scope": 17616, "src": "8610:20:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17570, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8610:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17574, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 17572, "name": "_hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17647, "src": "8633:13:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17573, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8633:15:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8610:38:61"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17577, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17575, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17571, "src": "8662:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 17576, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8677:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8662:16:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17595, "nodeType": "IfStatement", "src": "8658:231:61", "trueBody": {"id": 17594, "nodeType": "Block", "src": "8680:209:61", "statements": [{"expression": {"arguments": [{"id": 17581, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17571, "src": "8750:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"arguments": [{"id": 17586, "name": "curveHopIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16986, "src": "8795:13:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17585, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8787:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 17584, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "8787:7:61", "typeDescriptions": {}}}, "id": 17587, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8787:22:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 17583, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8780:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_int128_$", "typeString": "type(int128)"}, "typeName": {"id": 17582, "name": "int128", "nodeType": "ElementaryTypeName", "src": "8780:6:61", "typeDescriptions": {}}}, "id": 17588, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8780:30:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int128", "typeString": "int128"}}, {"arguments": [{"id": 17590, "name": "hopLpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17571, "src": "8851:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17589, "name": "_minUnderlyingAccepted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17761, "src": "8828:22:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17591, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8828:36:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int128", "typeString": "int128"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17578, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16981, "src": "8694:12:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17580, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "remove_liquidity_one_coin", "nodeType": "MemberAccess", "referencedDeclaration": 42099, "src": "8694:38:61", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int128_$_t_uint256_$returns$__$", "typeString": "function (uint256,int128,uint256) external"}}, "id": 17592, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8694:184:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17593, "nodeType": "ExpressionStatement", "src": "8694:184:61"}]}}, {"assignments": [17597], "declarations": [{"constant": false, "id": 17597, "mutability": "mutable", "name": "underlyingBalance", "nameLocation": "8951:17:61", "nodeType": "VariableDeclaration", "scope": 17616, "src": "8943:25:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17596, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8943:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17600, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 17598, "name": "_underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [17632], "referencedDeclaration": 17632, "src": "8971:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17599, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8971:20:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8943:48:61"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17601, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17597, "src": "9005:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 17602, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9026:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9005:22:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17606, "nodeType": "IfStatement", "src": "9001:36:61", "trueBody": {"expression": {"hexValue": "30", "id": 17604, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9036:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 17566, "id": 17605, "nodeType": "Return", "src": "9029:8:61"}}, {"expression": {"arguments": [{"id": 17610, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15381, "src": "9071:5:61", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 17611, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17597, "src": "9078:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17607, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15375, "src": "9047:10:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17609, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 34631, "src": "9047:23:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 17612, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9047:49:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17613, "nodeType": "ExpressionStatement", "src": "9047:49:61"}, {"expression": {"id": 17614, "name": "underlyingBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17597, "src": "9113:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17566, "id": 17615, "nodeType": "Return", "src": "9106:24:61"}]}, "id": 17617, "implemented": true, "kind": "function", "modifiers": [], "name": "_withdrawAll", "nameLocation": "8397:12:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17563, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8421:8:61"}, "parameters": {"id": 17562, "nodeType": "ParameterList", "parameters": [], "src": "8409:2:61"}, "returnParameters": {"id": 17566, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17565, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17617, "src": "8439:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17564, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8439:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8438:9:61"}, "scope": 17890, "src": "8388:749:61", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [16409], "body": {"id": 17631, "nodeType": "Block", "src": "9214:59:61", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 17627, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "9260:4:61", "typeDescriptions": {"typeIdentifier": "t_contract$_MeroTriHopCvx_$17890", "typeString": "contract MeroTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MeroTriHopCvx_$17890", "typeString": "contract MeroTriHopCvx"}], "id": 17626, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9252:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17625, "name": "address", "nodeType": "ElementaryTypeName", "src": "9252:7:61", "typeDescriptions": {}}}, "id": 17628, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9252:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 17623, "name": "underlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15375, "src": "9231:10:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17624, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 34539, "src": "9231:20:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 17629, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9231:35:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17622, "id": 17630, "nodeType": "Return", "src": "9224:42:61"}]}, "id": 17632, "implemented": true, "kind": "function", "modifiers": [], "name": "_underlyingBalance", "nameLocation": "9152:18:61", "nodeType": "FunctionDefinition", "overrides": {"id": 17619, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9187:8:61"}, "parameters": {"id": 17618, "nodeType": "ParameterList", "parameters": [], "src": "9170:2:61"}, "returnParameters": {"id": 17622, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17621, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17632, "src": "9205:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17620, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9205:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9204:9:61"}, "scope": 17890, "src": "9143:130:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17646, "nodeType": "Block", "src": "9395:54:61", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 17642, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "9436:4:61", "typeDescriptions": {"typeIdentifier": "t_contract$_MeroTriHopCvx_$17890", "typeString": "contract MeroTriHopCvx"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MeroTriHopCvx_$17890", "typeString": "contract MeroTriHopCvx"}], "id": 17641, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9428:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 17640, "name": "address", "nodeType": "ElementaryTypeName", "src": "9428:7:61", "typeDescriptions": {}}}, "id": 17643, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9428:13:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 17638, "name": "hopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16984, "src": "9412:5:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 17639, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 34539, "src": "9412:15:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 17644, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9412:30:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17637, "id": 17645, "nodeType": "Return", "src": "9405:37:61"}]}, "documentation": {"id": 17633, "nodeType": "StructuredDocumentation", "src": "9279:54:61", "text": " @dev Get the balance of the hop lp."}, "id": 17647, "implemented": true, "kind": "function", "modifiers": [], "name": "_hopLpBalance", "nameLocation": "9347:13:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17634, "nodeType": "ParameterList", "parameters": [], "src": "9360:2:61"}, "returnParameters": {"id": 17637, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17636, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17647, "src": "9386:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17635, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9386:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9385:9:61"}, "scope": 17890, "src": "9338:111:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17665, "nodeType": "Block", "src": "9778:97:61", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17662, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17659, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36376, "src": "9830:10:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$36376_$", "typeString": "type(library ScaledMath)"}}, "id": 17660, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 36297, "src": "9830:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 17661, "name": "imbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15387, "src": "9847:20:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9830:37:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17656, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17650, "src": "9806:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17655, "name": "_hopLpToLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17841, "src": "9795:10:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17657, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9795:24:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "9795:34:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17663, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9795:73:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17654, "id": 17664, "nodeType": "Return", "src": "9788:80:61"}]}, "documentation": {"id": 17648, "nodeType": "StructuredDocumentation", "src": "9455:240:61", "text": " @notice Calculates the minimum LP to accept when depositing underlying into Curve Pool.\n @param _hopLpAmount Amount of Hop LP that is being deposited into Curve Pool.\n @return The minimum LP balance to accept."}, "id": 17666, "implemented": true, "kind": "function", "modifiers": [], "name": "_minLpAccepted", "nameLocation": "9709:14:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17651, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17650, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "9732:12:61", "nodeType": "VariableDeclaration", "scope": 17666, "src": "9724:20:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17649, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9724:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9723:22:61"}, "returnParameters": {"id": 17654, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17653, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17666, "src": "9769:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17652, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9769:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9768:9:61"}, "scope": 17890, "src": "9700:175:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17684, "nodeType": "Block", "src": "10215:98:61", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17681, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17678, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36376, "src": "10267:10:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$36376_$", "typeString": "type(library ScaledMath)"}}, "id": 17679, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 36297, "src": "10267:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 17680, "name": "imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15389, "src": "10284:21:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10267:38:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17675, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17669, "src": "10243:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17674, "name": "_hopLpToLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17841, "src": "10232:10:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17676, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10232:24:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17677, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "10232:34:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17682, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10232:74:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17673, "id": 17683, "nodeType": "Return", "src": "10225:81:61"}]}, "documentation": {"id": 17667, "nodeType": "StructuredDocumentation", "src": "9881:253:61", "text": " @notice Calculates the maximum LP to accept burning when withdrawing amount from Curve Pool.\n @param _hopLpAmount Amount of Hop LP that is being withdrawn from Curve Pool.\n @return The maximum LP balance to accept burning."}, "id": 17685, "implemented": true, "kind": "function", "modifiers": [], "name": "_maxLpBurned", "nameLocation": "10148:12:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17670, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17669, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "10169:12:61", "nodeType": "VariableDeclaration", "scope": 17685, "src": "10161:20:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17668, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10161:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10160:22:61"}, "returnParameters": {"id": 17673, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17672, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17685, "src": "10206:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17671, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10206:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10205:9:61"}, "scope": 17890, "src": "10139:174:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17703, "nodeType": "Block", "src": "10671:95:61", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17700, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17697, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36376, "src": "10720:10:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$36376_$", "typeString": "type(library ScaledMath)"}}, "id": 17698, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 36297, "src": "10720:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 17699, "name": "imbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15389, "src": "10737:21:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10720:38:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17694, "name": "_lpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17688, "src": "10699:9:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17693, "name": "_lpToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17820, "src": "10688:10:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17695, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10688:21:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17696, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "10688:31:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17701, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10688:71:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17692, "id": 17702, "nodeType": "Return", "src": "10681:78:61"}]}, "documentation": {"id": 17686, "nodeType": "StructuredDocumentation", "src": "10319:257:61", "text": " @notice Calculates the minimum Hop LP to accept when burning LP tokens to withdraw from Curve Pool.\n @param _lpAmount Amount of LP tokens being burned to withdraw from Curve Pool.\n @return The minimum Hop LP balance to accept."}, "id": 17704, "implemented": true, "kind": "function", "modifiers": [], "name": "_minHopLpAcceptedFromWithdraw", "nameLocation": "10590:29:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17689, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17688, "mutability": "mutable", "name": "_lpAmount", "nameLocation": "10628:9:61", "nodeType": "VariableDeclaration", "scope": 17704, "src": "10620:17:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17687, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10620:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10619:19:61"}, "returnParameters": {"id": 17692, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17691, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17704, "src": "10662:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17690, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10662:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10661:9:61"}, "scope": 17890, "src": "10581:185:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17722, "nodeType": "Block", "src": "11167:155:61", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17719, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17716, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36376, "src": "11261:10:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$36376_$", "typeString": "type(library ScaledMath)"}}, "id": 17717, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 36297, "src": "11261:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 17718, "name": "hopImbalanceToleranceIn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16988, "src": "11278:23:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11261:40:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17713, "name": "_underlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17707, "src": "11215:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17712, "name": "_underlyingToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17780, "src": "11196:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17714, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11196:37:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "11196:47:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17720, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11196:119:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17711, "id": 17721, "nodeType": "Return", "src": "11177:138:61"}]}, "documentation": {"id": 17705, "nodeType": "StructuredDocumentation", "src": "10772:265:61", "text": " @notice Calculates the minimum Hop LP to accept when depositing underlying into Curve Hop Pool.\n @param _underlyingAmount Amount of underlying that is being deposited into Curve Hop Pool.\n @return The minimum Hop LP balance to accept."}, "id": 17723, "implemented": true, "kind": "function", "modifiers": [], "name": "_minHopLpAcceptedFromDeposit", "nameLocation": "11051:28:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17708, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17707, "mutability": "mutable", "name": "_underlyingAmount", "nameLocation": "11088:17:61", "nodeType": "VariableDeclaration", "scope": 17723, "src": "11080:25:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17706, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11080:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11079:27:61"}, "returnParameters": {"id": 17711, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17710, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17723, "src": "11154:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17709, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11154:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11153:9:61"}, "scope": 17890, "src": "11042:280:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17741, "nodeType": "Block", "src": "11695:156:61", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17735, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36376, "src": "11789:10:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$36376_$", "typeString": "type(library ScaledMath)"}}, "id": 17736, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 36297, "src": "11789:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 17737, "name": "hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16990, "src": "11806:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11789:41:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17732, "name": "_underlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17726, "src": "11743:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17731, "name": "_underlyingToHopLp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17780, "src": "11724:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17733, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11724:37:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "11724:47:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17739, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11724:120:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17730, "id": 17740, "nodeType": "Return", "src": "11705:139:61"}]}, "documentation": {"id": 17724, "nodeType": "StructuredDocumentation", "src": "11328:278:61", "text": " @notice Calculates the maximum Hop LP to accept burning when withdrawing amount from Curve Hop Pool.\n @param _underlyingAmount Amount of underlying that is being withdrawn from Curve Hop Pool.\n @return The maximum Hop LP balance to accept burning."}, "id": 17742, "implemented": true, "kind": "function", "modifiers": [], "name": "_maxHopLpBurned", "nameLocation": "11620:15:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17727, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17726, "mutability": "mutable", "name": "_underlyingAmount", "nameLocation": "11644:17:61", "nodeType": "VariableDeclaration", "scope": 17742, "src": "11636:25:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17725, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11636:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11635:27:61"}, "returnParameters": {"id": 17730, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17729, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17742, "src": "11686:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17728, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11686:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11685:9:61"}, "scope": 17890, "src": "11611:240:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17760, "nodeType": "Block", "src": "12232:121:61", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17757, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 17754, "name": "ScaledMath", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36376, "src": "12304:10:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ScaledMath_$36376_$", "typeString": "type(library ScaledMath)"}}, "id": 17755, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ONE", "nodeType": "MemberAccess", "referencedDeclaration": 36297, "src": "12304:14:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 17756, "name": "hopImbalanceToleranceOut", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16990, "src": "12321:24:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12304:41:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 17751, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17745, "src": "12280:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17750, "name": "_hopLpToUnderlying", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17799, "src": "12261:18:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17752, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12261:32:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17753, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "12261:42:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17758, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12261:85:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17749, "id": 17759, "nodeType": "Return", "src": "12242:104:61"}]}, "documentation": {"id": 17743, "nodeType": "StructuredDocumentation", "src": "11857:284:61", "text": " @notice Calculates the minimum underlying to accept when burning Hop LP tokens to withdraw from Curve Hop Pool.\n @param _hopLpAmount Amount of Hop LP tokens being burned to withdraw from Curve Hop Pool.\n @return The minimum underlying balance to accept."}, "id": 17761, "implemented": true, "kind": "function", "modifiers": [], "name": "_minUnderlyingAccepted", "nameLocation": "12155:22:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17746, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17745, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "12186:12:61", "nodeType": "VariableDeclaration", "scope": 17761, "src": "12178:20:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17744, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12178:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12177:22:61"}, "returnParameters": {"id": 17749, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17748, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17761, "src": "12223:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17747, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12223:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12222:9:61"}, "scope": 17890, "src": "12146:207:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17779, "nodeType": "Block", "src": "12804:107:61", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 17774, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16981, "src": "12871:12:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17775, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 41985, "src": "12871:30:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 17776, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12871:32:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17771, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17769, "name": "_underlyingAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17764, "src": "12822:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 17770, "name": "decimalMultiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16992, "src": "12842:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12822:37:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 17772, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "12821:39:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17773, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledDiv", "nodeType": "MemberAccess", "referencedDeclaration": 36333, "src": "12821:49:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17777, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12821:83:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17768, "id": 17778, "nodeType": "Return", "src": "12814:90:61"}]}, "documentation": {"id": 17762, "nodeType": "StructuredDocumentation", "src": "12359:353:61", "text": " @notice Converts an amount of underlying into their estimated Hop LP value.\n @dev Uses get_virtual_price which is less susceptible to manipulation.\n  But is also less accurate to how much could be withdrawn.\n @param _underlyingAmount Amount of underlying to convert.\n @return The estimated value in the Hop LP."}, "id": 17780, "implemented": true, "kind": "function", "modifiers": [], "name": "_underlyingToHopLp", "nameLocation": "12726:18:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17765, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17764, "mutability": "mutable", "name": "_underlyingAmount", "nameLocation": "12753:17:61", "nodeType": "VariableDeclaration", "scope": 17780, "src": "12745:25:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17763, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12745:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12744:27:61"}, "returnParameters": {"id": 17768, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17767, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17780, "src": "12795:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17766, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12795:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12794:9:61"}, "scope": 17890, "src": "12717:194:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17798, "nodeType": "Block", "src": "13352:102:61", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 17793, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16981, "src": "13414:12:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17794, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 41985, "src": "13414:30:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 17795, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13414:32:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17790, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17788, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17783, "src": "13370:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 17789, "name": "decimalMultiplier", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16992, "src": "13385:17:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13370:32:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 17791, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "13369:34:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17792, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "13369:44:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17796, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13369:78:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17787, "id": 17797, "nodeType": "Return", "src": "13362:85:61"}]}, "documentation": {"id": 17781, "nodeType": "StructuredDocumentation", "src": "12917:348:61", "text": " @notice Converts an amount of Hop LP into their estimated underlying value.\n @dev Uses get_virtual_price which is less susceptible to manipulation.\n  But is also less accurate to how much could be withdrawn.\n @param _hopLpAmount Amount of Hop LP to convert.\n @return The estimated value in the underlying."}, "id": 17799, "implemented": true, "kind": "function", "modifiers": [], "name": "_hopLpToUnderlying", "nameLocation": "13279:18:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17784, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17783, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "13306:12:61", "nodeType": "VariableDeclaration", "scope": 17799, "src": "13298:20:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17782, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13298:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13297:22:61"}, "returnParameters": {"id": 17787, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17786, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17799, "src": "13343:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17785, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13343:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13342:9:61"}, "scope": 17890, "src": "13270:184:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17819, "nodeType": "Block", "src": "13873:160:61", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 17814, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16981, "src": "13980:12:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17815, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 41985, "src": "13980:30:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 17816, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13980:32:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 17809, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15398, "src": "13922:9:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17810, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 41985, "src": "13922:27:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 17811, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13922:29:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17807, "name": "_lpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17802, "src": "13902:9:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17808, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "13902:19:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17812, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13902:50:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17813, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledDiv", "nodeType": "MemberAccess", "referencedDeclaration": 36333, "src": "13902:60:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17817, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13902:124:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17806, "id": 17818, "nodeType": "Return", "src": "13883:143:61"}]}, "documentation": {"id": 17800, "nodeType": "StructuredDocumentation", "src": "13460:337:61", "text": " @notice Converts an amount of LP into their estimated Hop LP value.\n @dev Uses get_virtual_price which is less susceptible to manipulation.\n  But is also less accurate to how much could be withdrawn.\n @param _lpAmount Amount of underlying to convert.\n @return The estimated value in the Hop LP."}, "id": 17820, "implemented": true, "kind": "function", "modifiers": [], "name": "_lpToHopLp", "nameLocation": "13811:10:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17803, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17802, "mutability": "mutable", "name": "_lpAmount", "nameLocation": "13830:9:61", "nodeType": "VariableDeclaration", "scope": 17820, "src": "13822:17:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17801, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13822:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13821:19:61"}, "returnParameters": {"id": 17806, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17805, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17820, "src": "13864:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17804, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13864:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13863:9:61"}, "scope": 17890, "src": "13802:231:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17840, "nodeType": "Block", "src": "14450:163:61", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 17835, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15398, "src": "14563:9:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17836, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 41985, "src": "14563:27:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 17837, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14563:29:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 17830, "name": "curveHopPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16981, "src": "14502:12:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17831, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "get_virtual_price", "nodeType": "MemberAccess", "referencedDeclaration": 41985, "src": "14502:30:61", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 17832, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14502:32:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17828, "name": "_hopLpAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17823, "src": "14479:12:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17829, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledMul", "nodeType": "MemberAccess", "referencedDeclaration": 36315, "src": "14479:22:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17833, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14479:56:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 17834, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "scaledDiv", "nodeType": "MemberAccess", "referencedDeclaration": 36333, "src": "14479:66:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 17838, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14479:127:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 17827, "id": 17839, "nodeType": "Return", "src": "14460:146:61"}]}, "documentation": {"id": 17821, "nodeType": "StructuredDocumentation", "src": "14039:332:61", "text": " @notice Converts an amount of Hop LP into their estimated LP value.\n @dev Uses get_virtual_price which is less susceptible to manipulation.\n  But is also less accurate to how much could be withdrawn.\n @param _hopLpAmount Amount of Hop LP to convert.\n @return The estimated value in the LP."}, "id": 17841, "implemented": true, "kind": "function", "modifiers": [], "name": "_hopLpToLp", "nameLocation": "14385:10:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17824, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17823, "mutability": "mutable", "name": "_hopLpAmount", "nameLocation": "14404:12:61", "nodeType": "VariableDeclaration", "scope": 17841, "src": "14396:20:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17822, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14396:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "14395:22:61"}, "returnParameters": {"id": 17827, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17826, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 17841, "src": "14441:7:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17825, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14441:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "14440:9:61"}, "scope": 17890, "src": "14376:237:61", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 17888, "nodeType": "Block", "src": "14743:536:61", "statements": [{"assignments": [17846], "declarations": [{"constant": false, "id": 17846, "mutability": "mutable", "name": "stakedBalance", "nameLocation": "14815:13:61", "nodeType": "VariableDeclaration", "scope": 17888, "src": "14807:21:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17845, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14807:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17849, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 17847, "name": "_stakedBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16439, "src": "14831:14:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17848, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14831:16:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14807:40:61"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17852, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17850, "name": "stakedBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17846, "src": "14861:13:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 17851, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14877:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "14861:17:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17861, "nodeType": "IfStatement", "src": "14857:95:61", "trueBody": {"id": 17860, "nodeType": "Block", "src": "14880:72:61", "statements": [{"expression": {"arguments": [{"id": 17856, "name": "stakedBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17846, "src": "14920:13:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 17857, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "14935:5:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 17853, "name": "rewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15392, "src": "14894:7:61", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewardStaking_$35291", "typeString": "contract IRewardStaking"}}, "id": 17855, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "withdrawAndUnwrap", "nodeType": "MemberAccess", "referencedDeclaration": 35249, "src": "14894:25:61", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$", "typeString": "function (uint256,bool) external returns (bool)"}}, "id": 17858, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14894:47:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17859, "nodeType": "ExpressionStatement", "src": "14894:47:61"}]}}, {"assignments": [17863], "declarations": [{"constant": false, "id": 17863, "mutability": "mutable", "name": "lpBalance", "nameLocation": "15016:9:61", "nodeType": "VariableDeclaration", "scope": 17888, "src": "15008:17:61", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17862, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15008:7:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17866, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 17864, "name": "_lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16424, "src": "15028:10:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 17865, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15028:12:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "15008:32:61"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 17869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 17867, "name": "lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17863, "src": "15054:9:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 17868, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15066:1:61", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15054:13:61", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 17887, "nodeType": "IfStatement", "src": "15050:223:61", "trueBody": {"id": 17886, "nodeType": "Block", "src": "15069:204:61", "statements": [{"expression": {"arguments": [{"id": 17873, "name": "lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17863, "src": "15136:9:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"arguments": [{"id": 17878, "name": "curveIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15402, "src": "15178:10:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17877, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15170:7:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 17876, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "15170:7:61", "typeDescriptions": {}}}, "id": 17879, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15170:19:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 17875, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15163:6:61", "typeDescriptions": {"typeIdentifier": "t_type$_t_int128_$", "typeString": "type(int128)"}, "typeName": {"id": 17874, "name": "int128", "nodeType": "ElementaryTypeName", "src": "15163:6:61", "typeDescriptions": {}}}, "id": 17880, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15163:27:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int128", "typeString": "int128"}}, {"arguments": [{"id": 17882, "name": "lpBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17863, "src": "15238:9:61", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 17881, "name": "_minHopLpAcceptedFromWithdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17704, "src": "15208:29:61", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 17883, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15208:40:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int128", "typeString": "int128"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 17870, "name": "curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15398, "src": "15083:9:61", "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveSwapEth_$42100", "typeString": "contract ICurveSwapEth"}}, "id": 17872, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "remove_liquidity_one_coin", "nodeType": "MemberAccess", "referencedDeclaration": 42099, "src": "15083:35:61", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int128_$_t_uint256_$returns$__$", "typeString": "function (uint256,int128,uint256) external"}}, "id": 17884, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15083:179:61", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 17885, "nodeType": "ExpressionStatement", "src": "15083:179:61"}]}}]}, "documentation": {"id": 17842, "nodeType": "StructuredDocumentation", "src": "14619:80:61", "text": " @dev Withdraw all underlying and convert to the Hop LP Token."}, "id": 17889, "implemented": true, "kind": "function", "modifiers": [], "name": "_withdrawAllToHopLp", "nameLocation": "14713:19:61", "nodeType": "FunctionDefinition", "parameters": {"id": 17843, "nodeType": "ParameterList", "parameters": [], "src": "14732:2:61"}, "returnParameters": {"id": 17844, "nodeType": "ParameterList", "parameters": [], "src": "14743:0:61"}, "scope": 17890, "src": "14704:575:61", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}], "scope": 17891, "src": "884:14397:61", "usedErrors": []}], "src": "45:15237:61"}, "bytecode": "", "bytecodeSha1": "05c39b98a0c39297c84e6c1affdfb1f359b29525", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "MeroTriHopCvx", "coverageMap": {"branches": {"107": {"CvxMintAmount.getCvxMintAmount": {"177": [934, 962, false], "178": [1368, 1393, false]}}, "116": {}, "121": {}, "128": {}, "130": {}, "143": {}, "145": {}, "146": {}, "147": {}, "169": {}, "17": {}, "174": {}, "188": {}, "19": {"SafeERC20._callOptionalReturn": {"179": [3735, 3756, false], "180": [3819, 3849, true]}}, "190": {}, "191": {}, "20": {"Address.functionCallWithValue": {"152": [5145, 5175, true]}, "Address.verifyCallResult": {"153": [7735, 7742, false], "154": [7876, 7897, false]}}, "39": {}, "40": {"Authorization._roleManager": {"155": [666, 718, true]}}, "59": {"ConvexStrategyBase._sendCommunityReserveShare": {"172": [15867, 15898, false], "173": [15990, 16019, false], "174": [16136, 16151, false], "175": [16423, 16452, false], "176": [16569, 16584, false]}, "ConvexStrategyBase.addRewardToken": {"156": [11303, 11326, false], "157": [11330, 11359, false], "158": [11363, 11386, true]}, "ConvexStrategyBase.deposit": {"166": [6073, 6084, true], "167": [6125, 6135, false]}, "ConvexStrategyBase.harvestable": {"168": [12578, 12593, false]}, "ConvexStrategyBase.removeRewardToken": {"160": [12063, 12091, false]}, "ConvexStrategyBase.setCommunityReserve": {"164": [8171, 8202, true]}, "ConvexStrategyBase.setCrvCommunityReserveShare": {"161": [8671, 8714, true]}, "ConvexStrategyBase.setCvxCommunityReserveShare": {"169": [9287, 9330, true]}, "ConvexStrategyBase.setStrategist": {"165": [10739, 10764, true]}, "ConvexStrategyBase.shutdown": {"170": [4478, 4497, true], "171": [7699, 7710, true]}, "ConvexStrategyBase.withdraw": {"159": [6576, 6588, false]}, "ConvexStrategyBase.withdrawAll": {"162": [7010, 7029, true], "163": [7122, 7143, false]}}, "61": {"MeroTriHopCvx._deposit": {"146": [6113, 6127, true], "147": [6264, 6285, false], "148": [6600, 6616, false], "149": [6898, 6934, false]}, "MeroTriHopCvx._withdraw": {"142": [7159, 7186, false], "143": [7786, 7836, false]}, "MeroTriHopCvx._withdrawAll": {"144": [8662, 8678, false], "145": [9005, 9027, false]}, "MeroTriHopCvx._withdrawAllToHopLp": {"150": [14861, 14878, false], "151": [15054, 15067, false]}, "MeroTriHopCvx.changeConvexPool": {"140": [5266, 5275, true], "141": [5674, 5684, true]}}}, "statements": {"107": {"CvxMintAmount.getCvxMintAmount": {"15": [964, 972], "17": [1395, 1420], "18": [1430, 1446]}}, "116": {}, "121": {}, "128": {}, "130": {}, "143": {}, "145": {}, "146": {}, "147": {}, "169": {}, "17": {}, "174": {}, "188": {}, "19": {"SafeERC20._callOptionalReturn": {"120": [3811, 3896]}, "SafeERC20.safeApprove": {"75": [1746, 1909], "76": [1919, 2009]}, "SafeERC20.safeTransfer": {"125": [813, 899]}}, "190": {"ScaledMath.scaledDiv": {"132": [956, 986]}, "ScaledMath.scaledMul": {"115": [752, 782]}}, "191": {"UncheckedMath.uncheckedDiv": {"88": [632, 644]}, "UncheckedMath.uncheckedInc": {"50": [197, 209]}, "UncheckedMath.uncheckedSub": {"16": [487, 499]}}, "20": {"Address.functionCall": {"77": [4018, 4077]}, "Address.functionCallWithValue": {"121": [5137, 5218], "123": [5228, 5288], "124": [5382, 5440]}, "Address.isContract": {"122": [1458, 1488]}, "Address.verifyCallResult": {"136": [7758, 7775], "137": [8202, 8222]}}, "39": {"Authorization._roleManager": {"0": [375, 395]}}, "40": {"AuthorizationBase.roleManager": {"3": [1476, 1497]}}, "59": {"ConvexStrategyBase._harvest": {"89": [14811, 14830], "90": [14887, 14915], "91": [15013, 15066], "92": [15106, 15159], "93": [15324, 15383], "94": [15440, 15499], "95": [15579, 15603], "96": [15613, 15630]}, "ConvexStrategyBase._lpBalance": {"102": [17043, 17077]}, "ConvexStrategyBase._sendCommunityReserveShare": {"128": [15900, 15907], "129": [16171, 16315], "130": [16604, 16748]}, "ConvexStrategyBase._stakedBalance": {"103": [17246, 17285]}, "ConvexStrategyBase._swapperRouter": {"78": [17831, 17873]}, "ConvexStrategyBase._underlyingAmountOut": {"116": [17403, 17477]}, "ConvexStrategyBase._validateCurvePool": {"117": [17631, 17664]}, "ConvexStrategyBase.addRewardToken": {"4": [11282, 11436], "5": [11482, 11494], "6": [11504, 11529], "7": [11599, 11644], "8": [11654, 11715], "9": [11725, 11752], "10": [11762, 11773]}, "ConvexStrategyBase.deposit": {"44": [6065, 6110], "45": [6137, 6149], "46": [6159, 6173]}, "ConvexStrategyBase.harvest": {"21": [7527, 7544]}, "ConvexStrategyBase.harvestable": {"47": [12595, 12603], "48": [13266, 13274], "49": [13288, 13375], "51": [13395, 13414]}, "ConvexStrategyBase.removeRewardToken": {"19": [12093, 12105], "20": [12115, 12145]}, "ConvexStrategyBase.rewardTokens": {"37": [13895, 13925]}, "ConvexStrategyBase.setCommunityReserve": {"38": [8163, 8235], "39": [8245, 8281], "40": [8291, 8334]}, "ConvexStrategyBase.setCrvCommunityReserveShare": {"24": [8663, 8737], "25": [8747, 8819], "26": [8829, 8881], "27": [8891, 8950]}, "ConvexStrategyBase.setCvxCommunityReserveShare": {"68": [9279, 9353], "69": [9363, 9435], "70": [9445, 9497], "71": [9507, 9566]}, "ConvexStrategyBase.setImbalanceToleranceIn": {"22": [9920, 9964], "23": [9974, 10025]}, "ConvexStrategyBase.setImbalanceToleranceOut": {"66": [10386, 10432], "67": [10442, 10495]}, "ConvexStrategyBase.setStrategist": {"41": [10731, 10792], "42": [10802, 10827], "43": [10837, 10868]}, "ConvexStrategyBase.shutdown": {"72": [7691, 7736], "73": [7746, 7763], "74": [7773, 7788]}, "ConvexStrategyBase.strategist": {"2": [13620, 13638]}, "ConvexStrategyBase.withdraw": {"11": [6590, 6602], "12": [6612, 6630], "13": [6640, 6662], "14": [6672, 6683]}, "ConvexStrategyBase.withdrawAll": {"28": [7002, 7057], "29": [7145, 7153], "30": [7163, 7197], "31": [7207, 7230]}}, "61": {"MeroTriHopCvx._deposit": {"107": [6105, 6149], "108": [6343, 6388], "109": [6402, 6489], "110": [6671, 6705], "111": [6719, 6781], "112": [6871, 6883], "113": [6936, 6948], "114": [6958, 6969]}, "MeroTriHopCvx._hopLpBalance": {"101": [9405, 9442]}, "MeroTriHopCvx._hopLpToLp": {"139": [14460, 14606]}, "MeroTriHopCvx._hopLpToUnderlying": {"105": [13362, 13447]}, "MeroTriHopCvx._lpToHopLp": {"104": [13883, 14026]}, "MeroTriHopCvx._maxHopLpBurned": {"126": [11705, 11844]}, "MeroTriHopCvx._maxLpBurned": {"127": [10225, 10306]}, "MeroTriHopCvx._minHopLpAcceptedFromDeposit": {"133": [11177, 11315]}, "MeroTriHopCvx._minHopLpAcceptedFromWithdraw": {"135": [10681, 10759]}, "MeroTriHopCvx._minLpAccepted": {"134": [9788, 9868]}, "MeroTriHopCvx._minUnderlyingAccepted": {"131": [12242, 12346]}, "MeroTriHopCvx._underlyingBalance": {"106": [9224, 9266]}, "MeroTriHopCvx._underlyingToHopLp": {"138": [12814, 12904]}, "MeroTriHopCvx._withdraw": {"79": [7202, 7240], "80": [7254, 7275], "81": [7289, 7296], "82": [7838, 7845], "83": [7943, 7984], "84": [7994, 8052], "85": [8158, 8210], "86": [8220, 8287], "87": [8337, 8375]}, "MeroTriHopCvx._withdrawAll": {"97": [8528, 8549], "98": [8694, 8878], "99": [9029, 9037], "100": [9047, 9096]}, "MeroTriHopCvx._withdrawAllToHopLp": {"118": [14894, 14941], "119": [15083, 15262]}, "MeroTriHopCvx.balance": {"36": [5788, 5923]}, "MeroTriHopCvx.changeConvexPool": {"52": [5007, 5037], "53": [5047, 5057], "54": [5067, 5088], "55": [5098, 5120], "56": [5130, 5154], "57": [5258, 5297], "58": [5307, 5323], "59": [5333, 5367], "60": [5377, 5414], "61": [5424, 5464], "62": [5474, 5530], "63": [5540, 5585], "64": [5595, 5656], "65": [5666, 5707]}, "MeroTriHopCvx.name": {"1": [6007, 6029]}, "MeroTriHopCvx.setHopImbalanceToleranceIn": {"32": [3755, 3805], "33": [3815, 3872]}, "MeroTriHopCvx.setHopImbalanceToleranceOut": {"34": [4254, 4306], "35": [4316, 4375]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.5.0/Address", "Authorization", "AuthorizationBase", "ConvexStrategyBase", "CvxMintAmount", "Error", "IAddressProvider", "IConvexStrategyBase", "ICurveSwapEth", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20", "IERC20Full", "ILiquidityPool", "IMeroTriHopCvx", "IRewardStaking", "IStakerVault", "IStrategy", "IVault", "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20", "ScaledMath", "UncheckedMath"], "deployedBytecode": "60806040526004361061025b5760003560e01c80637bdcdaff11610144578063c2bddf31116100b6578063e9eb50881161007a578063e9eb50881461070f578063ecf8db0a1461072f578063fbfa77cf1461074f578063fc0e74d114610783578063fdc0bfca14610798578063ff0af85b146107ae57600080fd5b8063c2bddf3114610692578063c7b9d530146106b2578063d0e30db0146106d2578063dbbd47d4146106da578063df22a747146106ef57600080fd5b80639ec5a894116101085780639ec5a894146105e4578063aa6a8caf14610604578063b69ef8a814610624578063b6ed67a814610639578063bf86d6901461064f578063c2b18aa01461067057600080fd5b80637bdcdaff1461056d578063853828b61461058357806386993bef14610598578063938511a7146105ae5780639b61a924146105ce57600080fd5b80633778851e116101dd57806356be5f71116101a157806356be5f71146104af57806361240eea146104c5578063621e8fe1146104d957806369cbb00d146104f95780636f307dc31461052d57806370aa17261461054d57600080fd5b80633778851e146104045780633d509c971461042457806344d32ee9146104445780634641257d1461047857806349cabcdf1461048d57600080fd5b8063218751b211610224578063218751b21461035a578063283f3b561461037a5780632e1a7d4d146103ae5780633082538f146103ce578063313c06a0146103e457600080fd5b8062435da51461026057806306fdde03146102ac5780631a55820d146102e85780631c03e6cc1461030c5780631fe4a6861461033c575b600080fd5b34801561026c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102b857600080fd5b50604080518082018252600d81526c09acae4dea8e4d290dee086ecf609b1b602082015290516102a39190613a71565b3480156102f457600080fd5b506102fe60085481565b6040519081526020016102a3565b34801561031857600080fd5b5061032c610327366004613abc565b6107c9565b60405190151581526020016102a3565b34801561034857600080fd5b506000546001600160a01b031661028f565b34801561036657600080fd5b50600b5461028f906001600160a01b031681565b34801561038657600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ba57600080fd5b5061032c6103c9366004613ad9565b610a15565b3480156103da57600080fd5b506102fe60105481565b3480156103f057600080fd5b50600a5461028f906001600160a01b031681565b34801561041057600080fd5b506102fe61041f366004613ad9565b610ad6565b34801561043057600080fd5b5061032c61043f366004613abc565b610bcb565b34801561045057600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561048457600080fd5b506102fe610cfe565b34801561049957600080fd5b506104ad6104a8366004613ad9565b610d75565b005b3480156104bb57600080fd5b506102fe60075481565b3480156104d157600080fd5b50600061032c565b3480156104e557600080fd5b5060045461028f906001600160a01b031681565b34801561050557600080fd5b506102fe7f000000000000000000000000000000000000000000000000000000000000000081565b34801561053957600080fd5b5060035461028f906001600160a01b031681565b34801561055957600080fd5b506104ad610568366004613ad9565b610e92565b34801561057957600080fd5b506102fe600d5481565b34801561058f57600080fd5b506102fe61104f565b3480156105a457600080fd5b506102fe600c5481565b3480156105ba57600080fd5b506104ad6105c9366004613ad9565b61110f565b3480156105da57600080fd5b506102fe60065481565b3480156105f057600080fd5b5060095461028f906001600160a01b031681565b34801561061057600080fd5b506104ad61061f366004613ad9565b611225565b34801561063057600080fd5b506102fe61133b565b34801561064557600080fd5b506102fe600e5481565b34801561065b57600080fd5b5060035461032c90600160a01b900460ff1681565b34801561067c57600080fd5b5061068561138b565b6040516102a39190613af2565b34801561069e57600080fd5b506104ad6106ad366004613abc565b611397565b3480156106be57600080fd5b506104ad6106cd366004613abc565b611522565b61032c6115bf565b3480156106e657600080fd5b506102fe6116c4565b3480156106fb57600080fd5b506104ad61070a366004613b3f565b61196d565b34801561071b57600080fd5b506104ad61072a366004613ad9565b611c88565b34801561073b57600080fd5b506104ad61074a366004613ad9565b611d9e565b34801561075b57600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561078f57600080fd5b506104ad611f5b565b3480156107a457600080fd5b506102fe600f5481565b3480156107ba57600080fd5b506102fe60055481565b905090565b60007f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015610845573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108699190613b87565b604051806040016040528060138152602001600080516020613dc5833981519152815250906108b45760405162461bcd60e51b81526004016108ab9190613a71565b60405180910390fd5b506001600160a01b038216734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b148015906108f057506003546001600160a01b03838116911614155b801561091957506001600160a01b03821673d533a949740bb3306d119cc777fa900ba034cd5214155b60405180604001604052806014815260200173125b9d985b1a59081d1bdad95b881d1bc818591960621b815250906109645760405162461bcd60e51b81526004016108ab9190613a71565b506001600160a01b0382166000908152600260205260409020541561098b57506000919050565b610996600183612282565b5060006109a1612297565b90506109b86001600160a01b03841682600061211c565b6109ce6001600160a01b0384168260001961211c565b6040516001600160a01b03841681527f851bbb4304bf0768ed98b97e429b5bd1dcc1f194b36cd1650f40293e951ae3939060200160405180910390a160019150505b919050565b6040805180820190915260138152600080516020613dc58339815191526020820152600090336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a835760405162461bcd60e51b81526004016108ab9190613a71565b5081610a9157506000919050565b610a9a826122cb565b6040518281527f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d906020015b60405180910390a1506001919050565b600080734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f9190613ba2565b90506000610b678269152d02c7e14af68000006125a0565b90506103e88110610b7c575060009392505050565b6103e881810390600090610b908388613bd1565b610b9a9190613c06565b90506000610bb3856a52b7d2dcc80cd2e4000000613c28565b905080821115610bc1578091505b5095945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b9190613b87565b604051806040016040528060138152602001600080516020613dc583398151915281525090610cad5760405162461bcd60e51b81526004016108ab9190613a71565b50610cb96001836125b9565b610cc557506000919050565b6040516001600160a01b03831681527f36bd04094fa067bb9471a8fbdb0a6e8a43424a2566ad3a740c88973fa40a311890602001610ac6565b6040805180820190915260138152600080516020613dc58339815191526020820152600090336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d6c5760405162461bcd60e51b81526004016108ab9190613a71565b506107c46125ce565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015610def573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e139190613b87565b604051806040016040528060138152602001600080516020613dc583398151915281525090610e555760405162461bcd60e51b81526004016108ab9190613a71565b5060078190556040518181527f4ede3e4e9f7997fda6ff4a12d6c43d5c9e1e2055065cbc15f902f504f72dc8c0906020015b60405180910390a150565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015610f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f309190613b87565b604051806040016040528060138152602001600080516020613dc583398151915281525090610f725760405162461bcd60e51b81526004016108ab9190613a71565b5060408051808201909152600e81526d1a5b9d985b1a5908185b5bdd5b9d60921b6020820152670de0b6b3a7640000821115610fc15760405162461bcd60e51b81526004016108ab9190613a71565b506004546001600160a01b031661101a5760405162461bcd60e51b815260206004820152601d60248201527f436f6d6d756e6974792072657365727665206d7573742062652073657400000060448201526064016108ab565b60058190556040518181527f1a8542dffa4956932e66916113e6a123e123956172fbc0e2e59df92b8a87d8e690602001610e87565b6040805180820190915260138152600080516020613dc58339815191526020820152600090336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110bd5760405162461bcd60e51b81526004016108ab9190613a71565b5060006110c861292e565b9050806110d757600091505090565b6040518181527f3d5a341dc6a12221fcf31279cef3771f8fad757b2d9261f97605ccc17c2574249060200160405180910390a1919050565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015611189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ad9190613b87565b604051806040016040528060138152602001600080516020613dc5833981519152815250906111ef5760405162461bcd60e51b81526004016108ab9190613a71565b50600e8190556040518181527fe6b4374e594cac6d717f89735f722a01c53affe6a4603ed44e09004666b7a6f390602001610e87565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa15801561129f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c39190613b87565b604051806040016040528060138152602001600080516020613dc5833981519152815250906113055760405162461bcd60e51b81526004016108ab9190613a71565b50600f8190556040518181527f8b8ad8032596ef90599a67881aed48dba49c88dd982cd479440bfcee796dcf8b90602001610e87565b6000611379611348612a57565b61136a611353612ae3565b61135b612b14565b6113659190613c3f565b612b45565b6113749190613c3f565b612c48565b611381612cdc565b6107c49190613c3f565b60606107c46001612d0d565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015611411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114359190613b87565b604051806040016040528060138152602001600080516020613dc5833981519152815250906114775760405162461bcd60e51b81526004016108ab9190613a71565b5060408051808201909152601881527f7a65726f2061646472657373206e6f7420616c6c6f776564000000000000000060208201526001600160a01b0382166114d35760405162461bcd60e51b81526004016108ab9190613a71565b50600480546001600160a01b0319166001600160a01b0383169081179091556040519081527f17d7ba6682f162782054b119192f8e5b98fe7090b4bec7a55fc7075d9cd859ee90602001610e87565b6000546040805180820190915260138152600080516020613dc58339815191526020820152906001600160a01b031633146115705760405162461bcd60e51b81526004016108ab9190613a71565b50600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f46d58e3fa07bf19b1d27240f0e286b27e9f7c1b0d88933333fe833b60eec541290602001610e87565b6040805180820190915260138152600080516020613dc58339815191526020820152600090336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461162d5760405162461bcd60e51b81526004016108ab9190613a71565b5060035460408051808201909152601481527329ba3930ba32b3bc9034b99039b43aba3237bbb760611b602082015290600160a01b900460ff16156116855760405162461bcd60e51b81526004016108ab9190613a71565b5061168e612db2565b6116985750600090565b6040517fed21248cb703b524cc0029bb8669df941baca560163a3bc6ad184e7e9c26807090600090a190565b6009546040516246613160e11b81523060048201526000916001600160a01b03169082908290628cc26290602401602060405180830381865afa15801561170f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117339190613ba2565b9050806117435760009250505090565b600061178a734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b611785600654670de0b6b3a76400006117769190613c28565b61177f86610ad6565b90613025565b613044565b6117c273d533a949740bb3306d119cc777fa900ba034cd52611785600554670de0b6b3a76400006117bb9190613c28565b8690613025565b6117cc9190613c3f565b905060006117da60016130ca565b905060005b8181101561196357604051632061aa2360e11b8152600481018290526000906001600160a01b038716906340c3544690602401602060405180830381865afa15801561182f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118539190613c57565b90506000816001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b99190613c57565b6001600160a01b0381166000908152600260205260409020549091506118e057505061195b565b6040516246613160e11b815230600482015261194c9082906001600160a01b03851690628cc26290602401602060405180830381865afa158015611928573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117859190613ba2565b6119569086613c3f565b945050505b6001016117df565b5090949350505050565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa1580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b9190613b87565b604051806040016040528060138152602001600080516020613dc583398151915281525090611a4d5760405162461bcd60e51b81526004016108ab9190613a71565b50611a57826130d4565b611a5f6125ce565b50611a68613154565b600c839055600d819055604051631526fe2760e01b8152600481018490526000908190819073f403c135812408bfbe8713b5a23a04b3d48aae3190631526fe279060240160c060405180830381865afa158015611ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aed9190613c74565b95505094505050925080156040518060400160405280601081526020016f2837b7b61034b99039b43aba3237bbb760811b81525090611b3f5760405162461bcd60e51b81526004016108ab9190613a71565b50600a80546001600160a01b038086166001600160a01b03199283161790925560098054858416908316179055600b80548884169216919091179055611ba9907f00000000000000000000000000000000000000000000000000000000000000001686600061211c565b611bdf6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168660001961211c565b611c086001600160a01b03841673f403c135812408bfbe8713b5a23a04b3d48aae31600061211c565b611c326001600160a01b03841673f403c135812408bfbe8713b5a23a04b3d48aae3160001961211c565b611c3a612db2565b6040518060400160405280600e81526020016d19195c1bdcda5d0819985a5b195960921b81525090611c7f5760405162461bcd60e51b81526004016108ab9190613a71565b50505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015611d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d269190613b87565b604051806040016040528060138152602001600080516020613dc583398151915281525090611d685760405162461bcd60e51b81526004016108ab9190613a71565b5060088190556040518181527fb2861fed34a4613f8f25f46553a23408a3364ee9ddc4ef6714f0a81d856e41a790602001610e87565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015611e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3c9190613b87565b604051806040016040528060138152602001600080516020613dc583398151915281525090611e7e5760405162461bcd60e51b81526004016108ab9190613a71565b5060408051808201909152600e81526d1a5b9d985b1a5908185b5bdd5b9d60921b6020820152670de0b6b3a7640000821115611ecd5760405162461bcd60e51b81526004016108ab9190613a71565b506004546001600160a01b0316611f265760405162461bcd60e51b815260206004820152601d60248201527f436f6d6d756e6974792072657365727665206d7573742062652073657400000060448201526064016108ab565b60068190556040518181527f2c3c7d70a1dfbfaf74447753b8a73e1323aa10b32b9209742db563671e14b13c90602001610e87565b6040805180820190915260138152600080516020613dc58339815191526020820152336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611fc65760405162461bcd60e51b81526004016108ab9190613a71565b5060035460408051808201909152601481527329ba3930ba32b3bc9034b99039b43aba3237bbb760611b602082015290600160a01b900460ff161561201e5760405162461bcd60e51b81526004016108ab9190613a71565b506003805460ff60a01b1916600160a01b1790556040517f4426aa1fb73e391071491fcfe21a88b5c38a0a0333a1f6e77161470439704cf890600090a1565b6040516321f8a72160e01b81526a3937b632a6b0b730b3b2b960a91b60048201526000906001600160a01b038316906321f8a721906024015b602060405180830381865afa1580156120b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d79190613c57565b92915050565b6040516321f8a72160e01b81526c39bbb0b83832b92937baba32b960991b60048201526000906001600160a01b038316906321f8a72190602401612096565b8015806121965750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612170573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121949190613ba2565b155b6122015760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016108ab565b6040516001600160a01b03831660248201526044810182905261226490849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613278565b505050565b6060612278848460008561334a565b90505b9392505050565b600061227b836001600160a01b03841661347b565b60006107c47f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166120dd565b60006122d5612cdc565b905081811061234c57600354612315906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000846134ca565b6040518281527f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d9060200160405180910390a15050565b808203600061235a826134fa565b90506000612366612a57565b6123709083613c28565b9050600061237d8261351e565b90506000612389612ae3565b6123939083613c28565b600954604051636197390160e11b815260048101839052600060248201529192506001600160a01b03169063c32e7202906044016020604051808303816000875af11580156123e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240a9190613b87565b6124175750505050505050565b61241f613a05565b8381600d546002811061243457612434613cf6565b6020020152600b5460405163e310327360e01b81526001600160a01b039091169063e31032739061246b9084908790600401613d0c565b600060405180830381600087803b15801561248557600080fd5b505af1158015612499573d6000803e3d6000fd5b505050506124a5613a23565b86817f0000000000000000000000000000000000000000000000000000000000000000600381106124d8576124d8613cf6565b60200201526040516327f6ba8360e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639fdaea0c9061252b9084908a90600401613d44565b600060405180830381600087803b15801561254557600080fd5b505af1158015612559573d6000803e3d6000fd5b505060035461259592506001600160a01b031690507f00000000000000000000000000000000000000000000000000000000000000008b6134ca565b505050505050505050565b60008183816125b1576125b1613bf0565b049392505050565b600061227b836001600160a01b038416613542565b6000806125d9612cdc565b9050600960009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561262b57600080fd5b505af115801561263f573d6000803e3d6000fd5b5050505061264b613635565b6000612655612297565b604051633ff37e8f60e01b8152734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b600482015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260248201529091506001600160a01b03821690633ff37e8f906044016020604051808303816000875af11580156126cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f09190613ba2565b50604051633ff37e8f60e01b815273d533a949740bb3306d119cc777fa900ba034cd52600482015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260248201526001600160a01b03821690633ff37e8f906044016020604051808303816000875af1158015612765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127899190613ba2565b50600061279660016130ca565b905060005b8181101561284a576001600160a01b038316633ff37e8f6127bd600184613792565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260248201526044016020604051808303816000875af115801561281d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128419190613ba2565b5060010161279b565b50600354604051633ff37e8f60e01b815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260048201526001600160a01b03918216602482015290831690633ff37e8f906044016020604051808303816000875af11580156128b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128d59190613ba2565b506000836128e1612cdc565b6128eb9190613c28565b90507f80f97f878e16410266694f134ddf012f2be424f54f8b5cafa107eccc51d00d588160405161291e91815260200190565b60405180910390a1949350505050565b6000612938613154565b6000612942612a57565b90508015612a06577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631a4d01d2827f00000000000000000000000000000000000000000000000000000000000000006129a48561379e565b6040516001600160e01b031960e086901b1681526004810193909352600f9190910b60248301526044820152606401600060405180830381600087803b1580156129ed57600080fd5b505af1158015612a01573d6000803e3d6000fd5b505050505b6000612a10612cdc565b905080612a205760009250505090565b6003546120d7906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000836134ca565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a08231906024015b602060405180830381865afa158015612abf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c49190613ba2565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401612aa2565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401612aa2565b60006120d77f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bcc9190613ba2565b600b5460408051630176f71760e71b81529051612c42926001600160a01b03169163bb7b8b809160048083019260209291908290030181865afa158015612c17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c3b9190613ba2565b8590613025565b906137c2565b60006120d77f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ccf9190613ba2565b60105461177f9085613c06565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401612aa2565b60606000612d1a836130ca565b905060008167ffffffffffffffff811115612d3757612d37613d7c565b604051908082528060200260200182016040528015612d60578160200160208202803683370190505b50905060005b82811015612daa57612d788582613792565b828281518110612d8a57612d8a613cf6565b6001600160a01b0390921660209283029190910190910152600101612d66565b509392505050565b604080518082019091526011815270696e76616c6964206d73672e76616c756560781b60208201526000903415612dfc5760405162461bcd60e51b81526004016108ab9190613a71565b506000612e07612cdc565b90508015612ed957612e17613a23565b81817f000000000000000000000000000000000000000000000000000000000000000060038110612e4a57612e4a613cf6565b60200201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016634515cef382612e88856137d7565b6040518363ffffffff1660e01b8152600401612ea5929190613d44565b600060405180830381600087803b158015612ebf57600080fd5b505af1158015612ed3573d6000803e3d6000fd5b50505050505b6000612ee3612a57565b90508015612f7957612ef3613a05565b8181600d5460028110612f0857612f08613cf6565b6020020152600b546001600160a01b0316630b4c7e4d82612f28856137f2565b6040518363ffffffff1660e01b8152600401612f45929190613d0c565b600060405180830381600087803b158015612f5f57600080fd5b505af1158015612f73573d6000803e3d6000fd5b50505050505b612f81612ae3565b612f8e5760009250505090565b600c5460405163303acfe760e11b815260048101919091526001602482015273f403c135812408bfbe8713b5a23a04b3d48aae31906360759fce906044016020604051808303816000875af1158015612feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300f9190613b87565b61301c5760009250505090565b60019250505090565b6000670de0b6b3a764000061303a8385613bd1565b61227b9190613c06565b600061304e612297565b600354604051632550332960e11b81526001600160a01b038681166004830152918216602482015260448101859052911690634aa0665290606401602060405180830381865afa1580156130a6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227b9190613ba2565b60006120d7825490565b6040516355b30b1960e01b81526001600160a01b03821660048201527390e00ace148ca3b23ac1bc8c240c2a7dd9c2d7f5906355b30b1990602401602060405180830381865afa15801561312c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131509190613ba2565b5050565b600061315e612b14565b905080156131de57600954604051636197390160e11b815260048101839052600060248201526001600160a01b039091169063c32e7202906044016020604051808303816000875af11580156131b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131dc9190613b87565b505b60006131e8612ae3565b9050801561315057600b54600d546001600160a01b0390911690631a4d01d29083906132138261380d565b6040516001600160e01b031960e086901b1681526004810193909352600f9190910b60248301526044820152606401600060405180830381600087803b15801561325c57600080fd5b505af1158015613270573d6000803e3d6000fd5b505050505050565b60006132cd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122699092919063ffffffff16565b80519091501561226457808060200190518101906132eb9190613b87565b6122645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108ab565b6060824710156133ab5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108ab565b6001600160a01b0385163b6134025760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108ab565b600080866001600160a01b0316858760405161341e9190613d92565b60006040518083038185875af1925050503d806000811461345b576040519150601f19603f3d011682016040523d82523d6000602084013e613460565b606091505b5091509150613470828286613831565b979650505050505050565b60008181526001830160205260408120546134c2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556120d7565b5060006120d7565b6040516001600160a01b03831660248201526044810182905261226490849063a9059cbb60e01b9060640161222d565b60006120d7600f54670de0b6b3a76400006135159190613c3f565b61177f8461386a565b60006120d7600854670de0b6b3a76400006135399190613c3f565b61177f846138fe565b6000818152600183016020526040812054801561362b576000613566600183613c28565b855490915060009061357a90600190613c28565b90508181146135df57600086600001828154811061359a5761359a613cf6565b90600052602060002001549050808760000184815481106135bd576135bd613cf6565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806135f0576135f0613dae565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506120d7565b60009150506120d7565b6004546001600160a01b0316806136495750565b60065480156136f4576040516370a0823160e01b8152306004820152734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b9060009082906370a0823190602401602060405180830381865afa1580156136a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136ca9190613ba2565b905080156136f1576136f1846136e08386613025565b6001600160a01b03851691906134ca565b50505b6005548015612264576040516370a0823160e01b815230600482015273d533a949740bb3306d119cc777fa900ba034cd529060009082906370a0823190602401602060405180830381865afa158015613751573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137759190613ba2565b9050801561378b5761378b856136e08386613025565b5050505050565b600061227b83836139db565b60006120d7600f54670de0b6b3a76400006137b99190613c28565b61177f84612c48565b60008161303a670de0b6b3a764000085613bd1565b60006120d7600e54670de0b6b3a76400006135159190613c28565b60006120d7600754670de0b6b3a76400006135399190613c28565b60006120d7600854670de0b6b3a76400006138289190613c28565b61177f84612b45565b6060831561384057508161227b565b8251156138505782518084602001fd5b8160405162461bcd60e51b81526004016108ab9190613a71565b60006120d77f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138f19190613ba2565b601054612c429085613bd1565b60006120d7600b60009054906101000a90046001600160a01b03166001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015613956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061397a9190613ba2565b612c427f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c17573d6000803e3d6000fd5b60008260000182815481106139f2576139f2613cf6565b9060005260206000200154905092915050565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60005b83811015613a5c578181015183820152602001613a44565b83811115613a6b576000848401525b50505050565b6020815260008251806020840152613a90816040850160208701613a41565b601f01601f19169190910160400192915050565b6001600160a01b0381168114613ab957600080fd5b50565b600060208284031215613ace57600080fd5b813561227b81613aa4565b600060208284031215613aeb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015613b335783516001600160a01b031683529284019291840191600101613b0e565b50909695505050505050565b600080600060608486031215613b5457600080fd5b833592506020840135613b6681613aa4565b929592945050506040919091013590565b80518015158114610a1057600080fd5b600060208284031215613b9957600080fd5b61227b82613b77565b600060208284031215613bb457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613beb57613beb613bbb565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613c2357634e487b7160e01b600052601260045260246000fd5b500490565b600082821015613c3a57613c3a613bbb565b500390565b60008219821115613c5257613c52613bbb565b500190565b600060208284031215613c6957600080fd5b815161227b81613aa4565b60008060008060008060c08789031215613c8d57600080fd5b8651613c9881613aa4565b6020880151909650613ca981613aa4565b6040880151909550613cba81613aa4565b6060880151909450613ccb81613aa4565b6080880151909350613cdc81613aa4565b9150613cea60a08801613b77565b90509295509295509295565b634e487b7160e01b600052603260045260246000fd5b60608101818460005b6002811015613d34578151835260209283019290910190600101613d15565b5050508260408301529392505050565b60808101818460005b6003811015613d6c578151835260209283019290910190600101613d4d565b5050508260608301529392505050565b634e487b7160e01b600052604160045260246000fd5b60008251613da4818460208701613a41565b9190910192915050565b634e487b7160e01b600052603160045260246000fdfe756e617574686f72697a65642061636365737300000000000000000000000000a2646970667358221220bb517ece7b44df8df7518e0672eff8afb20b6b90638a7706435dc05887a68cb164736f6c634300080a0033", "deployedSourceMap": "884:14397:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:106:40;;;;;;;;;;-1:-1:-1;382:13:39;1398:106:40;;;-1:-1:-1;;;;;200:32:203;;;182:51;;170:2;155:18;1398:106:40;;;;;;;;5936:100:61;;;;;;;;;;-1:-1:-1;6007:22:61;;;;;;;;;;;-1:-1:-1;;;6007:22:61;;;;5936:100;;;;6007:22;5936:100;:::i;2787:36:59:-;;;;;;;;;;;;;;;;;;;1041:25:203;;;1029:2;1014:18;2787:36:59;895:177:203;11184:596:59;;;;;;;;;;-1:-1:-1;11184:596:59;;;;;:::i;:::-;;:::i;:::-;;;1630:14:203;;1623:22;1605:41;;1593:2;1578:18;11184:596:59;1465:187:203;13547:98:59;;;;;;;;;;-1:-1:-1;13601:7:59;13627:11;-1:-1:-1;;;;;13627:11:59;13547:98;;3027:30;;;;;;;;;;-1:-1:-1;3027:30:59;;;;-1:-1:-1;;;;;3027:30:59;;;1055:43:61;;;;;;;;;;;;;;;6484:206:59;;;;;;;;;;-1:-1:-1;6484:206:59;;;;;:::i;:::-;;:::i;1511:32:61:-;;;;;;;;;;;;;;;;2982:16:59;;;;;;;;;;-1:-1:-1;2982:16:59;;;;-1:-1:-1;;;;;2982:16:59;;;606:847:107;;;;;;;;;;-1:-1:-1;606:847:107;;;;;:::i;:::-;;:::i;11957:216:59:-;;;;;;;;;;-1:-1:-1;11957:216:59;;;;;:::i;:::-;;:::i;1134:29:61:-;;;;;;;;;;;;;;;7452:99:59;;;;;;;;;;;;;:::i;9785:247::-;;;;;;;;;;-1:-1:-1;9785:247:59;;;;;:::i;:::-;;:::i;:::-;;2677:35;;;;;;;;;;;;;;;;14383:94;;;;;;;;;;-1:-1:-1;14442:4:59;14383:94;;2359:31;;;;;;;;;;-1:-1:-1;2359:31:59;;;;-1:-1:-1;;;;;2359:31:59;;;1196:38:61;;;;;;;;;;;;;;;2227:24:59;;;;;;;;;;-1:-1:-1;2227:24:59;;;;-1:-1:-1;;;;;2227:24:59;;;8520:437;;;;;;;;;;-1:-1:-1;8520:437:59;;;;;:::i;:::-;;:::i;3151:25::-;;;;;;;;;;;;;;;;6933:304;;;;;;;;;;;;;:::i;3077:24::-;;;;;;;;;;;;;;;;3614:265:61;;;;;;;;;;-1:-1:-1;3614:265:61;;;;;:::i;:::-;;:::i;2590:39:59:-;;;;;;;;;;;;;;;;2899:29;;;;;;;;;;-1:-1:-1;2899:29:59;;;;-1:-1:-1;;;;;2899:29:59;;;4111:271:61;;;;;;;;;;-1:-1:-1;4111:271:61;;;;;:::i;:::-;;:::i;5720:210::-;;;;;;;;;;;;;:::i;1275:38::-;;;;;;;;;;;;;;;;2280:22:59;;;;;;;;;;-1:-1:-1;2280:22:59;;;;-1:-1:-1;;;2280:22:59;;;;;;13811:121;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8064:277::-;;;;;;;;;;-1:-1:-1;8064:277:59;;;;;:::i;:::-;;:::i;10659:216::-;;;;;;;;;;-1:-1:-1;10659:216:59;;;;;:::i;:::-;;:::i;5985:195::-;;;:::i;12396:1025::-;;;;;;;;;;;;;:::i;4847:867:61:-;;;;;;;;;;-1:-1:-1;4847:867:61;;;;;:::i;:::-;;:::i;10249:253:59:-;;;;;;;;;;-1:-1:-1;10249:253:59;;;;;:::i;:::-;;:::i;9136:437::-;;;;;;;;;;-1:-1:-1;9136:437:59;;;;;:::i;:::-;;:::i;2453:30::-;;;;;;;;;;;;;;;7633:162;;;;;;;;;;;;;:::i;1392:39:61:-;;;;;;;;;;;;;;;;2503::59;;;;;;;;;;;;;;;;1483:14:40;1476:21;;1398:106;:::o;11184:596:59:-;11266:4;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;11303:23:59;::::1;1468:42;11303:23;::::0;::::1;::::0;:56:::1;;-1:-1:-1::0;11348:10:59::1;::::0;-1:-1:-1;;;;;11330:29:59;;::::1;11348:10:::0;::::1;11330:29;;11303:56;:83;;;;-1:-1:-1::0;;;;;;11363:23:59;::::1;1373:42;11363:23;;11303:83;11400:26;;;;;;;;;;;;;-1:-1:-1::0;;;11400:26:59::1;;::::0;11282:154:::1;;;;;-1:-1:-1::0;;;11282:154:59::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;8300:23:25;;8247:4;3834:19;;;:12;:19;;;;;;:24;11446:48:59::1;;-1:-1:-1::0;11489:5:59::1;11184:596:::0;;;:::o;11446:48::-:1;11504:25;:13;11522:6:::0;11504:17:::1;:25::i;:::-;;11539:22;11572:16;:14;:16::i;:::-;11539:50:::0;-1:-1:-1;11599:45:59::1;-1:-1:-1::0;;;;;11599:26:59;::::1;11539:50:::0;11642:1:::1;11599:26;:45::i;:::-;11654:61;-1:-1:-1::0;;;;;11654:26:59;::::1;11681:14:::0;-1:-1:-1;;11654:26:59::1;:61::i;:::-;11730:22;::::0;-1:-1:-1;;;;;200:32:203;;182:51;;11730:22:59::1;::::0;170:2:203;155:18;11730:22:59::1;;;;;;;11769:4;11762:11;;;756:1:40;11184:596:59::0;;;:::o;6484:206::-;4499:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4499:25:59;;;;6556:4;;4478:10;-1:-1:-1;;;;;4492:5:59;4478:19;;4470:55;;;;-1:-1:-1;;;4470:55:59;;;;;;;;:::i;:::-;-1:-1:-1;6576:12:59;6572:30:::1;;-1:-1:-1::0;6597:5:59::1;11184:596:::0;;;:::o;6572:30::-:1;6612:18;6622:7;6612:9;:18::i;:::-;6645:17;::::0;1041:25:203;;;6645:17:59::1;::::0;1029:2:203;1014:18;6645:17:59::1;;;;;;;;-1:-1:-1::0;6679:4:59::1;6484:206:::0;;;:::o;606:847:107:-;672:7;724:22;542:42;-1:-1:-1;;;;;749:22:107;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;724:49;-1:-1:-1;812:20:107;835:40;724:49;287:10;835:27;:40::i;:::-;812:63;;376:4;934:12;:28;930:42;;-1:-1:-1;971:1:107;;606:847;-1:-1:-1;;;606:847:107:o;930:42::-;376:4;494:5:191;;;;1014:17:107;;1194:21;494:5:191;1194:9:107;:21;:::i;:::-;1193:38;;;;:::i;:::-;1173:58;-1:-1:-1;1302:21:107;1326:28;1340:14;441;1326:28;:::i;:::-;1302:52;;1380:13;1368:9;:25;1364:56;;;1407:13;1395:25;;1364:56;-1:-1:-1;1437:9:107;606:847;-1:-1:-1;;;;;606:847:107:o;11957:216:59:-;12042:4;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;12063:28:59::1;:13;12084:6:::0;12063:20:::1;:28::i;:::-;12058:47;;-1:-1:-1::0;12100:5:59::1;11184:596:::0;;;:::o;12058:47::-:1;12120:25;::::0;-1:-1:-1;;;;;200:32:203;;182:51;;12120:25:59::1;::::0;170:2:203;155:18;12120:25:59::1;14:225:203::0;7452:99:59;4499:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4499:25:59;;;;7508:7;;4478:10;-1:-1:-1;;;;;4492:5:59;4478:19;;4470:55;;;;-1:-1:-1;;;4470:55:59;;;;;;;;:::i;:::-;;7534:10:::1;:8;:10::i;9785:247::-:0;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;9920:20:59::1;:44:::0;;;9979:46:::1;::::0;1041:25:203;;;9979:46:59::1;::::0;1029:2:203;1014:18;9979:46:59::1;;;;;;;;9785:247:::0;:::o;8520:437::-;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;8716:20:59::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;8716:20:59::1;::::0;::::1;::::0;574:4:190::1;8671:43:59::0;::::1;;8663:74;;;;-1:-1:-1::0;;;8663:74:59::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8755:16:59::1;::::0;-1:-1:-1;;;;;8755:16:59::1;8747:72;;;::::0;-1:-1:-1;;;8747:72:59;;5623:2:203;8747:72:59::1;::::0;::::1;5605:21:203::0;5662:2;5642:18;;;5635:30;5701:31;5681:18;;;5674:59;5750:18;;8747:72:59::1;5421:353:203::0;8747:72:59::1;8829:24;:52:::0;;;8896:54:::1;::::0;1041:25:203;;;8896:54:59::1;::::0;1029:2:203;1014:18;8896:54:59::1;895:177:203::0;6933:304:59;7031:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7031:25:59;;;;6983:7;;7010:10;-1:-1:-1;;;;;7024:5:59;7010:19;;7002:55;;;;-1:-1:-1;;;7002:55:59;;;;;;;;:::i;:::-;;7067:24;7094:14;:12;:14::i;:::-;7067:41;-1:-1:-1;7122:21:59;7118:35;;7152:1;7145:8;;;6933:304;:::o;7118:35::-;7168:29;;1041:25:203;;;7168:29:59;;1029:2:203;1014:18;7168:29:59;;;;;;;7214:16;6933:304;-1:-1:-1;6933:304:59:o;3614:265:61:-;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;3755:23:61::1;:50:::0;;;3820:52:::1;::::0;1041:25:203;;;3820:52:61::1;::::0;1029:2:203;1014:18;3820:52:61::1;895:177:203::0;4111:271:61;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;4254:24:61::1;:52:::0;;;4321:54:::1;::::0;1041:25:203;;;4321:54:61::1;::::0;1029:2:203;1014:18;4321:54:61::1;895:177:203::0;5720:210:61;5769:7;5842:81;5907:15;:13;:15::i;:::-;5861:43;5891:12;:10;:12::i;:::-;5872:16;:14;:16::i;:::-;:31;;;;:::i;:::-;5861:10;:43::i;:::-;:61;;;;:::i;:::-;5842:18;:81::i;:::-;5807:20;:18;:20::i;:::-;:116;;;;:::i;13811:121:59:-;13867:16;13902:23;:13;:21;:23::i;8064:277::-;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;8204:30:59::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;-1:-1:-1;;;;;8171:31:59;::::1;8163:72;;;;-1:-1:-1::0;;;8163:72:59::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8245:16:59::1;:36:::0;;-1:-1:-1;;;;;;8245:36:59::1;-1:-1:-1::0;;;;;8245:36:59;::::1;::::0;;::::1;::::0;;;8296:38:::1;::::0;182:51:203;;;8296:38:59::1;::::0;170:2:203;155:18;8296:38:59::1;14:225:203::0;10659:216:59;10753:11;;10766:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10766:25:59;;;;;-1:-1:-1;;;;;10753:11:59;10739:10;:25;10731:61;;;;-1:-1:-1;;;10731:61:59;;;;;;;;:::i;:::-;-1:-1:-1;10802:11:59;:25;;-1:-1:-1;;;;;;10802:25:59;-1:-1:-1;;;;;10802:25:59;;;;;;;;10842:26;;182:51:203;;;10842:26:59;;170:2:203;155:18;10842:26:59;14:225:203;5985:195:59;4499:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4499:25:59;;;;6049:4;;4478:10;-1:-1:-1;;;;;4492:5:59;4478:19;;4470:55;;;;-1:-1:-1;;;4470:55:59;;;;;;;;:::i;:::-;-1:-1:-1;6074:10:59::1;::::0;6086:23:::1;::::0;;;;::::1;::::0;;;6074:10:::1;6086:23:::0;;-1:-1:-1;;;6086:23:59::1;::::0;::::1;::::0;;-1:-1:-1;;;6074:10:59;::::1;;;6073:11;6065:45;;;;-1:-1:-1::0;;;6065:45:59::1;;;;;;;;:::i;:::-;;6125:10;:8;:10::i;:::-;6120:29;;-1:-1:-1::0;6144:5:59::1;7452:99:::0;:::o;6120:29::-:1;6164:9;::::0;::::1;::::0;;;::::1;5985:195:::0;:::o;12396:1025::-;12496:7;;12534:30;;-1:-1:-1;;;12534:30:59;;12558:4;12534:30;;;182:51:203;12451:7:59;;-1:-1:-1;;;;;12496:7:59;;12451;;12496;;12534:15;;155:18:203;;12534:30:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12513:51;-1:-1:-1;12578:15:59;12574:29;;12602:1;12595:8;;;;12396:1025;:::o;12574:29::-;12613:20;12785:164;1468:42;12854:81;12910:24;;574:4:190;12893:41:59;;;;:::i;:::-;12854:28;12871:10;12854:16;:28::i;:::-;:38;;:81::i;:::-;12785:20;:164::i;:::-;12636:134;1373:42;12697:63;12735:24;;574:4:190;12718:41:59;;;;:::i;:::-;12697:10;;:20;:63::i;12636:134::-;:313;;;;:::i;:::-;12613:336;;12959:15;12977:22;:13;:20;:22::i;:::-;12959:40;;13014:9;13009:377;13029:7;13025:1;:11;13009:377;;;13120:24;;-1:-1:-1;;;13120:24:59;;;;;1041:25:203;;;13074:28:59;;-1:-1:-1;;;;;13120:21:59;;;;;1014:18:203;;13120:24:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13074:71;;13159:20;13182:13;-1:-1:-1;;;;;13182:25:59;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8300:23:25;;8247:4;3834:19;;;:12;:19;;;;;;13159:50:59;;-1:-1:-1;13223:51:59;;13266:8;;;;13223:51;13339:35;;-1:-1:-1;;;13339:35:59;;13368:4;13339:35;;;182:51:203;13304:71:59;;13325:12;;-1:-1:-1;;;;;13339:20:59;;;;;155:18:203;;13339:35:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13304:71::-;13288:87;;;;:::i;:::-;;;13060:326;;13009:377;208:1:191;204:5;13009:377:59;;;-1:-1:-1;13402:12:59;;12396:1025;-1:-1:-1;;;;12396:1025:59:o;4847:867:61:-;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;;5007:30:61::1;5026:10;5007:18;:30::i;:::-;5047:10;:8;:10::i;:::-;;5067:21;:19;:21::i;:::-;5098:9;:22:::0;;;5130:10:::1;:24:::0;;;5219:29:::1;::::0;-1:-1:-1;;;5219:29:61;;::::1;::::0;::::1;1041:25:203::0;;;-1:-1:-1;;;;;;1258:42:59::1;::::0;5219:17:61::1;::::0;1014:18:203;;5219:29:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5164:84;;;;;;;;;5267:8;5266:9;5277:19;;;;;;;;;;;;;-1:-1:-1::0;;;5277:19:61::1;;::::0;5258:39:::1;;;;;-1:-1:-1::0;;;5258:39:61::1;;;;;;;;:::i;:::-;-1:-1:-1::0;5307:2:61::1;:16:::0;;-1:-1:-1;;;;;5307:16:61;;::::1;-1:-1:-1::0;;;;;;5307:16:61;;::::1;;::::0;;;5333:7:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;5377:9:::1;:37:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;5424:40:::1;::::0;5431:5:::1;5424:25;5403:10:::0;5307:2:::1;5424:25;:40::i;:::-;5474:56;-1:-1:-1::0;;;;;5481:5:61::1;5474:25;5500:10:::0;-1:-1:-1;;5474:25:61::1;:56::i;:::-;5540:45;-1:-1:-1::0;;;;;5540:23:61;::::1;1258:42:59;5583:1:61;5540:23;:45::i;:::-;5595:61;-1:-1:-1::0;;;;;5595:23:61;::::1;1258:42:59;-1:-1:-1::0;;5595:23:61::1;:61::i;:::-;5674:10;:8;:10::i;:::-;5686:20;;;;;;;;;;;;;-1:-1:-1::0;;;5686:20:61::1;;::::0;5666:41:::1;;;;;-1:-1:-1::0;;;5666:41:61::1;;;;;;;;:::i;:::-;;4997:717;;;4847:867:::0;;;:::o;10249:253:59:-;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;10386:21:59::1;:46:::0;;;10447:48:::1;::::0;1041:25:203;;;10447:48:59::1;::::0;1029:2:203;1014:18;10447:48:59::1;895:177:203::0;9136:437:59;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;3962:25:203;707:10:40;4003:18:203;;;3996:60;-1:-1:-1;;;;;666:22:40;;;;;;;3935:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;9332:20:59::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;9332:20:59::1;::::0;::::1;::::0;574:4:190::1;9287:43:59::0;::::1;;9279:74;;;;-1:-1:-1::0;;;9279:74:59::1;;;;;;;;:::i;:::-;-1:-1:-1::0;9371:16:59::1;::::0;-1:-1:-1;;;;;9371:16:59::1;9363:72;;;::::0;-1:-1:-1;;;9363:72:59;;5623:2:203;9363:72:59::1;::::0;::::1;5605:21:203::0;5662:2;5642:18;;;5635:30;5701:31;5681:18;;;5674:59;5750:18;;9363:72:59::1;5421:353:203::0;9363:72:59::1;9445:24;:52:::0;;;9512:54:::1;::::0;1041:25:203;;;9512:54:59::1;::::0;1029:2:203;1014:18;9512:54:59::1;895:177:203::0;7633:162:59;4499:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4499:25:59;;;;4478:10;-1:-1:-1;;;;;4492:5:59;4478:19;;4470:55;;;;-1:-1:-1;;;4470:55:59;;;;;;;;:::i;:::-;-1:-1:-1;7700:10:59::1;::::0;7712:23:::1;::::0;;;;::::1;::::0;;;7700:10:::1;7712:23:::0;;-1:-1:-1;;;7712:23:59::1;::::0;::::1;::::0;;-1:-1:-1;;;7700:10:59;::::1;;;7699:11;7691:45;;;;-1:-1:-1::0;;;7691:45:59::1;;;;;;;;:::i;:::-;-1:-1:-1::0;7746:10:59::1;:17:::0;;-1:-1:-1;;;;7746:17:59::1;-1:-1:-1::0;;;7746:17:59::1;::::0;;7778:10:::1;::::0;::::1;::::0;7746:17;;7778:10:::1;7633:162::o:0;2581:184:182:-;2699:58;;-1:-1:-1;;;2699:58:182;;-1:-1:-1;;;2699:58:182;;;1041:25:203;2655:12:182;;-1:-1:-1;;;;;2699:19:182;;;;;1014:18:203;;2699:58:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2679:79;2581:184;-1:-1:-1;;2581:184:182:o;3343:192::-;3467:60;;-1:-1:-1;;;3467:60:182;;-1:-1:-1;;;3467:60:182;;;1041:25:203;3419:14:182;;-1:-1:-1;;;;;3467:19:182;;;;;1014:18:203;;3467:60:182;895:177:203;1413:603:19;1768:10;;;1767:62;;-1:-1:-1;1784:39:19;;-1:-1:-1;;;1784:39:19;;1808:4;1784:39;;;7436:34:203;-1:-1:-1;;;;;7506:15:203;;;7486:18;;;7479:43;1784:15:19;;;;;7371:18:203;;1784:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:19;;7735:2:203;1746:163:19;;;7717:21:203;7774:2;7754:18;;;7747:30;7813:34;7793:18;;;7786:62;-1:-1:-1;;;7864:18:203;;;7857:52;7926:19;;1746:163:19;7533:418:203;1746:163:19;1946:62;;-1:-1:-1;;;;;8148:32:203;;1946:62:19;;;8130:51:203;8197:18;;;8190:34;;;1919:90:19;;1939:5;;-1:-1:-1;;;1969:22:19;8103:18:203;;1946:62:19;;;;-1:-1:-1;;1946:62:19;;;;;;;;;;;;;;-1:-1:-1;;;;;1946:62:19;-1:-1:-1;;;;;;1946:62:19;;;;;;;;;;1919:19;:90::i;:::-;1413:603;;;:::o;3861:223:20:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;7612:150:25:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:25;;7705:4;:50::i;17756:124:59:-;17805:14;17838:35;:16;-1:-1:-1;;;;;17838:33:59;;:35::i;6982:1400:61:-;7097:25;7125:20;:18;:20::i;:::-;7097:48;;7180:6;7159:17;:27;7155:151;;7202:10;;:38;;-1:-1:-1;;;;;7202:10:61;7226:5;7233:6;7202:23;:38::i;:::-;7259:16;;1041:25:203;;;7259:16:61;;1029:2:203;1014:18;7259:16:61;;;;;;;7289:7;6982:1400;:::o;7155:151::-;494:5:191;;;7371:32:61;7479:41;494:5:191;7479:15:61;:41::i;:::-;7454:66;;7530:27;7577:15;:13;:15::i;:::-;7560:32;;:14;:32;:::i;:::-;7530:62;;7602:19;7624:33;7637:19;7624:12;:33::i;:::-;7602:55;;7667:24;7708:12;:10;:12::i;:::-;7694:26;;:11;:26;:::i;:::-;7786:7;;:50;;-1:-1:-1;;;7786:50:61;;;;;8403:25:203;;;7786:7:61;8444:18:203;;;8437:50;7667:53:61;;-1:-1:-1;;;;;;7786:7:61;;:25;;8376:18:203;;7786:50:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7781:64;;7838:7;;;;;;6982:1400;:::o;7781:64::-;7908:25;;:::i;:::-;7965:19;7943:7;7951:10;;7943:19;;;;;;;:::i;:::-;;;;:41;7994:9;;:58;;-1:-1:-1;;;7994:58:61;;-1:-1:-1;;;;;7994:9:61;;;;:36;;:58;;8031:7;;8040:11;;7994:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8120:28;;:::i;:::-;8186:24;8158:10;8169:13;8158:25;;;;;;;:::i;:::-;;;;:52;8220:67;;-1:-1:-1;;;8220:67:61;;-1:-1:-1;;;;;8220:12:61;:39;;;;:67;;8260:10;;8272:14;;8220:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8337:10:61;;:38;;-1:-1:-1;;;;;;8337:10:61;;-1:-1:-1;8361:5:61;8368:6;8337:23;:38::i;:::-;7035:1347;;;;;;;;6982:1400;:::o;522:139:191:-;589:7;643:1;639;:5;;;;;:::i;:::-;;;522:139;-1:-1:-1;;;522:139:191:o;7930:156:25:-;8003:4;8026:53;8034:3;-1:-1:-1;;;;;8054:23:25;;8026:7;:53::i;14665:972:59:-;14703:7;14722:23;14748:20;:18;:20::i;:::-;14722:46;;14811:7;;;;;;;;;-1:-1:-1;;;;;14811:7:59;-1:-1:-1;;;;;14811:17:59;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14887:28;:26;:28::i;:::-;14955:29;14987:16;:14;:16::i;:::-;15013:53;;-1:-1:-1;;;15013:53:59;;1468:42;15013:53;;;7436:34:203;1564:42:59;7486:18:203;;;7479:43;14955:48:59;;-1:-1:-1;;;;;;15013:22:59;;;;;7371:18:203;;15013:53:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15106:53:59;;-1:-1:-1;;;15106:53:59;;1373:42;15106:53;;;7436:34:203;1564:42:59;7486:18:203;;;7479:43;-1:-1:-1;;;;;15106:22:59;;;;;7371:18:203;;15106:53:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15209:15;15227:22;:13;:20;:22::i;:::-;15209:40;;15264:9;15259:135;15279:7;15275:1;:11;15259:135;;;-1:-1:-1;;;;;15324:22:59;;;15347:19;:13;15364:1;15347:16;:19::i;:::-;15324:59;;-1:-1:-1;;;;;;15324:59:59;;;;;;;-1:-1:-1;;;;;7454:15:203;;;15324:59:59;;;7436:34:203;1564:42:59;7486:18:203;;;7479:43;7371:18;;15324:59:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;208:1:191;204:5;15259:135:59;;;-1:-1:-1;15487:10:59;;15440:59;;-1:-1:-1;;;15440:59:59;;1564:42;15440:59;;;7436:34:203;-1:-1:-1;;;;;15487:10:59;;;7486:18:203;;;7479:43;15440:22:59;;;;;;7371:18:203;;15440:59:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15510:18;15554:15;15531:20;:18;:20::i;:::-;:38;;;;:::i;:::-;15510:59;;15584:19;15592:10;15584:19;;;;1041:25:203;;1029:2;1014:18;;895:177;15584:19:59;;;;;;;;15620:10;14665:972;-1:-1:-1;;;;14665:972:59:o;8388:749:61:-;8439:7;8528:21;:19;:21::i;:::-;8610:20;8633:15;:13;:15::i;:::-;8610:38;-1:-1:-1;8662:16:61;;8658:231;;8694:12;-1:-1:-1;;;;;8694:38:61;;8750:12;8795:13;8828:36;8851:12;8828:22;:36::i;:::-;8694:184;;-1:-1:-1;;;;;;8694:184:61;;;;;;;;;;9971:25:203;;;;10043:2;10032:22;;;;10012:18;;;10005:50;10071:18;;;10064:34;9944:18;;8694:184:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8658:231;8943:25;8971:20;:18;:20::i;:::-;8943:48;-1:-1:-1;9005:22:61;9001:36;;9036:1;9029:8;;;;8388:749;:::o;9001:36::-;9047:10;;:49;;-1:-1:-1;;;;;9047:10:61;9071:5;9078:17;9047:23;:49::i;9338:111::-;9412:30;;-1:-1:-1;;;9412:30:61;;9436:4;9412:30;;;182:51:203;9386:7:61;;9412:5;-1:-1:-1;;;;;9412:15:61;;;;155:18:203;;9412:30:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16979:105:59:-;17050:2;;:27;;-1:-1:-1;;;17050:27:59;;17071:4;17050:27;;;182:51:203;17024:7:59;;-1:-1:-1;;;;;17050:2:59;;:12;;155:18:203;;17050:27:59;14:225:203;17178:114:59;17253:7;;:32;;-1:-1:-1;;;17253:32:59;;17279:4;17253:32;;;182:51:203;17227:7:59;;-1:-1:-1;;;;;17253:7:59;;:17;;155:18:203;;17253:32:59;14:225:203;13802:231:61;13864:7;13902:124;13980:12;-1:-1:-1;;;;;13980:30:61;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13922:9;;:29;;;-1:-1:-1;;;13922:29:61;;;;13902:50;;-1:-1:-1;;;;;13922:9:61;;:27;;:29;;;;;;;;;;;;;;:9;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13902:9;;:19;:50::i;:::-;:60;;:124::i;13270:184::-;13343:7;13369:78;13414:12;-1:-1:-1;;;;;13414:30:61;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13385:17;;13370:32;;:12;:32;:::i;9143:130::-;9231:10;;:35;;-1:-1:-1;;;9231:35:61;;9260:4;9231:35;;;182:51:203;9205:7:61;;-1:-1:-1;;;;;9231:10:61;;:20;;155:18:203;;9231:35:61;14:225:203;533:403:186;641:16;673:11;687:18;:9;:16;:18::i;:::-;673:32;;715:23;755:3;741:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;741:18:186;;715:44;;774:9;769:138;789:3;785:1;:7;769:138;;;822:15;:9;835:1;822:12;:15::i;:::-;810:6;817:1;810:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;810:27:186;;;:9;;;;;;;;;;;:27;879:3;;769:138;;;-1:-1:-1;923:6:186;533:403;-1:-1:-1;;;533:403:186:o;6042:934:61:-;6129:19;;;;;;;;;;;;-1:-1:-1;;;6129:19:61;;;;6089:4;;6113:9;:14;6105:44;;;;-1:-1:-1;;;6105:44:61;;;;;;;;:::i;:::-;;6202:25;6230:20;:18;:20::i;:::-;6202:48;-1:-1:-1;6264:21:61;;6260:240;;6301:28;;:::i;:::-;6371:17;6343:10;6354:13;6343:25;;;;;;;:::i;:::-;;;;:45;-1:-1:-1;;;;;6402:12:61;:26;;6429:10;6441:47;6470:17;6441:28;:47::i;:::-;6402:87;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6287:213;6260:240;6548:20;6571:15;:13;:15::i;:::-;6548:38;-1:-1:-1;6600:16:61;;6596:196;;6632:25;;:::i;:::-;6693:12;6671:7;6679:10;;6671:19;;;;;;;:::i;:::-;;;;:34;6719:9;;-1:-1:-1;;;;;6719:9:61;:23;6743:7;6752:28;6767:12;6752:14;:28::i;:::-;6719:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6618:174;6596:196;6852:12;:10;:12::i;:::-;6848:35;;6878:5;6871:12;;;;6042:934;:::o;6848:35::-;6918:9;;6898:36;;-1:-1:-1;;;6898:36:61;;;;;8403:25:203;;;;6929:4:61;8444:18:203;;;8437:50;1258:42:59;;6898:19:61;;8376:18:203;;6898:36:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6893:55;;6943:5;6936:12;;;;6042:934;:::o;6893:55::-;6965:4;6958:11;;;;6042:934;:::o;669:120:190:-;733:7;467:4;760:5;764:1;760;:5;:::i;:::-;759:23;;;;:::i;17298:186:59:-;17384:7;17410:16;:14;:16::i;:::-;17456:10;;17410:67;;-1:-1:-1;;;17410:67:59;;-1:-1:-1;;;;;10499:15:203;;;17410:67:59;;;10481:34:203;17456:10:59;;;10531:18:203;;;10524:43;10583:18;;;10576:34;;;17410:29:59;;;;;10416:18:203;;17410:67:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8413:115:25:-;8476:7;8502:19;8510:3;4028:18;;3946:107;17559:112:59;17631:33;;-1:-1:-1;;;17631:33:59;;-1:-1:-1;;;;;200:32:203;;17631:33:59;;;182:51:203;1695:42:59;;17631:21;;155:18:203;;17631:33:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17559:112;:::o;14704:575:61:-;14807:21;14831:16;:14;:16::i;:::-;14807:40;-1:-1:-1;14861:17:61;;14857:95;;14894:7;;:47;;-1:-1:-1;;;14894:47:61;;;;;8403:25:203;;;14894:7:61;8444:18:203;;;8437:50;-1:-1:-1;;;;;14894:7:61;;;;:25;;8376:18:203;;14894:47:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14857:95;15008:17;15028:12;:10;:12::i;:::-;15008:32;-1:-1:-1;15054:13:61;;15050:223;;15083:9;;15178:10;;-1:-1:-1;;;;;15083:9:61;;;;:35;;15136:9;;15208:40;15136:9;15208:29;:40::i;:::-;15083:179;;-1:-1:-1;;;;;;15083:179:61;;;;;;;;;;9971:25:203;;;;10043:2;10032:22;;;;10012:18;;;10005:50;10071:18;;;10064:34;9944:18;;15083:179:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14743:536;;14704:575::o;3207:706:19:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:19;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:19;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:19;;10823:2:203;3811:85:19;;;10805:21:203;10862:2;10842:18;;;10835:30;10901:34;10881:18;;;10874:62;-1:-1:-1;;;10952:18:203;;;10945:40;11002:19;;3811:85:19;10621:406:203;4948:499:20;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:20;;11234:2:203;5137:81:20;;;11216:21:203;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:203;;;11356:36;11409:19;;5137:81:20;11032:402:203;5137:81:20;-1:-1:-1;;;;;1465:19:20;;;5228:60;;;;-1:-1:-1;;;5228:60:20;;11641:2:203;5228:60:20;;;11623:21:203;11680:2;11660:18;;;11653:30;11719:31;11699:18;;;11692:59;11768:18;;5228:60:20;11439:353:203;5228:60:20;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:20;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:20:o;1697:404:25:-;1760:4;3834:19;;;:12;;;:19;;;;;;1776:319;;-1:-1:-1;1818:23:25;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:25;2072:12;;701:205:19;840:58;;-1:-1:-1;;;;;8148:32:203;;840:58:19;;;8130:51:203;8197:18;;;8190:34;;;813:86:19;;833:5;;-1:-1:-1;;;863:23:19;8103:18:203;;840:58:19;7956:274:203;11611:240:61;11686:7;11724:120;11806:24;;574:4:190;11789:41:61;;;;:::i;:::-;11724:37;11743:17;11724:18;:37::i;10139:174::-;10206:7;10232:74;10284:21;;574:4:190;10267:38:61;;;;:::i;:::-;10232:24;10243:12;10232:10;:24::i;2269:1388:25:-;2335:4;2472:19;;;:12;;;:19;;;;;;2506:15;;2502:1149;;2875:21;2899:14;2912:1;2899:10;:14;:::i;:::-;2947:18;;2875:38;;-1:-1:-1;2927:17:25;;2947:22;;2968:1;;2947:22;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;;;:::i;:::-;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3288:23;;;:12;;;:23;;;;;:36;;;2984:398;3460:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;;;15752:1027:59;15837:16;;-1:-1:-1;;;;;15837:16:59;15867:31;15863:44;;15900:7;15752:1027::o;15863:44::-;15952:24;;15990:29;;15986:354;;16089:29;;-1:-1:-1;;;16089:29:59;;16112:4;16089:29;;;182:51:203;1468:42:59;;16035:11;;1468:42;;16089:14;;155:18:203;;16089:29:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16067:51;-1:-1:-1;16136:15:59;;16132:198;;16171:144;16210:17;16249:48;:11;16271:25;16249:21;:48::i;:::-;-1:-1:-1;;;;;16171:17:59;;;:144;:17;:144::i;:::-;16021:319;;15986:354;16385:24;;16423:29;;16419:354;;16522:29;;-1:-1:-1;;;16522:29:59;;16545:4;16522:29;;;182:51:203;1373:42:59;;16468:11;;1373:42;;16522:14;;155:18:203;;16522:29:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16500:51;-1:-1:-1;16569:15:59;;16565:198;;16604:144;16643:17;16682:48;:11;16704:25;16682:21;:48::i;16604:144::-;16454:319;;15799:980;;;15752:1027::o;8870:156:25:-;8944:7;8994:22;8998:3;9010:5;8994:3;:22::i;12146:207:61:-;12223:7;12261:85;12321:24;;574:4:190;12304:41:61;;;;:::i;:::-;12261:32;12280:12;12261:18;:32::i;873:120:190:-;937:7;985:1;964:17;467:4;964:1;:17;:::i;11042:280:61:-;11154:7;11196:119;11278:23;;574:4:190;11261:40:61;;;;:::i;9700:175::-;9769:7;9795:73;9847:20;;574:4:190;9830:37:61;;;;:::i;10581:185::-;10662:7;10688:71;10737:21;;574:4:190;10720:38:61;;;;:::i;:::-;10688:21;10699:9;10688:10;:21::i;7561:692:20:-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:20;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:20;;;;;;;;:::i;12717:194:61:-;12795:7;12821:83;12871:12;-1:-1:-1;;;;;12871:30:61;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12842:17;;12822:37;;:17;:37;:::i;14376:237::-;14441:7;14479:127;14563:9;;;;;;;;;-1:-1:-1;;;;;14563:9:61;-1:-1:-1;;;;;14563:27:61;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14479:56;14502:12;-1:-1:-1;;;;;14502:30:61;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4395:118:25;4462:7;4488:3;:11;;4500:5;4488:18;;;;;;;;:::i;:::-;;;;;;;;;4481:25;;4395:118;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;244:258:203:-;316:1;326:113;340:6;337:1;334:13;326:113;;;416:11;;;410:18;397:11;;;390:39;362:2;355:10;326:113;;;457:6;454:1;451:13;448:48;;;492:1;483:6;478:3;474:16;467:27;448:48;;244:258;;;:::o;507:383::-;656:2;645:9;638:21;619:4;688:6;682:13;731:6;726:2;715:9;711:18;704:34;747:66;806:6;801:2;790:9;786:18;781:2;773:6;769:15;747:66;:::i;:::-;874:2;853:15;-1:-1:-1;;849:29:203;834:45;;;;881:2;830:54;;507:383;-1:-1:-1;;507:383:203:o;1077:131::-;-1:-1:-1;;;;;1152:31:203;;1142:42;;1132:70;;1198:1;1195;1188:12;1132:70;1077:131;:::o;1213:247::-;1272:6;1325:2;1313:9;1304:7;1300:23;1296:32;1293:52;;;1341:1;1338;1331:12;1293:52;1380:9;1367:23;1399:31;1424:5;1399:31;:::i;2096:180::-;2155:6;2208:2;2196:9;2187:7;2183:23;2179:32;2176:52;;;2224:1;2221;2214:12;2176:52;-1:-1:-1;2247:23:203;;2096:180;-1:-1:-1;2096:180:203:o;2737:658::-;2908:2;2960:21;;;3030:13;;2933:18;;;3052:22;;;2879:4;;2908:2;3131:15;;;;3105:2;3090:18;;;2879:4;3174:195;3188:6;3185:1;3182:13;3174:195;;;3253:13;;-1:-1:-1;;;;;3249:39:203;3237:52;;3344:15;;;;3309:12;;;;3285:1;3203:9;3174:195;;;-1:-1:-1;3386:3:203;;2737:658;-1:-1:-1;;;;;;2737:658:203:o;3400:383::-;3477:6;3485;3493;3546:2;3534:9;3525:7;3521:23;3517:32;3514:52;;;3562:1;3559;3552:12;3514:52;3598:9;3585:23;3575:33;;3658:2;3647:9;3643:18;3630:32;3671:31;3696:5;3671:31;:::i;:::-;3400:383;;3721:5;;-1:-1:-1;;;3773:2:203;3758:18;;;;3745:32;;3400:383::o;4067:164::-;4143:13;;4192;;4185:21;4175:32;;4165:60;;4221:1;4218;4211:12;4236:202;4303:6;4356:2;4344:9;4335:7;4331:23;4327:32;4324:52;;;4372:1;4369;4362:12;4324:52;4395:37;4422:9;4395:37;:::i;4443:184::-;4513:6;4566:2;4554:9;4545:7;4541:23;4537:32;4534:52;;;4582:1;4579;4572:12;4534:52;-1:-1:-1;4605:16:203;;4443:184;-1:-1:-1;4443:184:203:o;4632:127::-;4693:10;4688:3;4684:20;4681:1;4674:31;4724:4;4721:1;4714:15;4748:4;4745:1;4738:15;4764:168;4804:7;4870:1;4866;4862:6;4858:14;4855:1;4852:21;4847:1;4840:9;4833:17;4829:45;4826:71;;;4877:18;;:::i;:::-;-1:-1:-1;4917:9:203;;4764:168::o;4937:127::-;4998:10;4993:3;4989:20;4986:1;4979:31;5029:4;5026:1;5019:15;5053:4;5050:1;5043:15;5069:217;5109:1;5135;5125:132;;5179:10;5174:3;5170:20;5167:1;5160:31;5214:4;5211:1;5204:15;5242:4;5239:1;5232:15;5125:132;-1:-1:-1;5271:9:203;;5069:217::o;5291:125::-;5331:4;5359:1;5356;5353:8;5350:34;;;5364:18;;:::i;:::-;-1:-1:-1;5401:9:203;;5291:125::o;5779:128::-;5819:3;5850:1;5846:6;5843:1;5840:13;5837:39;;;5856:18;;:::i;:::-;-1:-1:-1;5892:9:203;;5779:128::o;5912:251::-;5982:6;6035:2;6023:9;6014:7;6010:23;6006:32;6003:52;;;6051:1;6048;6041:12;6003:52;6083:9;6077:16;6102:31;6127:5;6102:31;:::i;6168:869::-;6280:6;6288;6296;6304;6312;6320;6373:3;6361:9;6352:7;6348:23;6344:33;6341:53;;;6390:1;6387;6380:12;6341:53;6422:9;6416:16;6441:31;6466:5;6441:31;:::i;:::-;6541:2;6526:18;;6520:25;6491:5;;-1:-1:-1;6554:33:203;6520:25;6554:33;:::i;:::-;6658:2;6643:18;;6637:25;6606:7;;-1:-1:-1;6671:33:203;6637:25;6671:33;:::i;:::-;6775:2;6760:18;;6754:25;6723:7;;-1:-1:-1;6788:33:203;6754:25;6788:33;:::i;:::-;6892:3;6877:19;;6871:26;6840:7;;-1:-1:-1;6906:33:203;6871:26;6906:33;:::i;:::-;6958:7;-1:-1:-1;6984:47:203;7026:3;7011:19;;6984:47;:::i;:::-;6974:57;;6168:869;;;;;;;;:::o;8498:127::-;8559:10;8554:3;8550:20;8547:1;8540:31;8590:4;8587:1;8580:15;8614:4;8611:1;8604:15;8630:565;8838:2;8823:18;;8827:9;8918:6;8796:4;8952:194;8966:4;8963:1;8960:11;8952:194;;;9025:13;;9013:26;;9062:4;9086:12;;;;9121:15;;;;8986:1;8979:9;8952:194;;;8956:3;;;9182:6;9177:2;9166:9;9162:18;9155:34;8630:565;;;;;:::o;9200:566::-;9408:3;9393:19;;9397:9;9489:6;9366:4;9523:194;9537:4;9534:1;9531:11;9523:194;;;9596:13;;9584:26;;9633:4;9657:12;;;;9692:15;;;;9557:1;9550:9;9523:194;;;9527:3;;;9753:6;9748:2;9737:9;9733:18;9726:34;9200:566;;;;;:::o;10109:127::-;10170:10;10165:3;10161:20;10158:1;10151:31;10201:4;10198:1;10191:15;10225:4;10222:1;10215:15;11797:274;11926:3;11964:6;11958:13;11980:53;12026:6;12021:3;12014:4;12006:6;12002:17;11980:53;:::i;:::-;12049:16;;;;;11797:274;-1:-1:-1;;11797:274:203:o;12076:127::-;12137:10;12132:3;12128:20;12125:1;12118:31;12168:4;12165:1;12158:15;12192:4;12189:1;12182:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"addRewardToken(address)": {"details": "These are tokens that are not the main assets of the strategy. For instance, temporary incentives.", "notice": "Add a reward token to list of extra reward tokens.", "params": {"token_": "Address of token to add to reward token list."}, "returns": {"_0": "True if successfully added."}}, "balance()": {"notice": "Get the total underlying balance of the strategy.", "returns": {"_0": "Underlying balance of strategy."}}, "changeConvexPool(uint256,address,uint256)": {"details": "First withdraws all funds, then harvests any rewards, then changes pool, then deposits again.", "notice": "Changes the Convex Pool used for farming yield, e.g. from FRAX to MIM.", "params": {"convexPid_": "The PID for the new Convex Pool.", "curveIndex_": "The index of the new Convex Pool Token in the new Curve Pool.", "curvePool_": "The Curve Pool to deposit into to get the required LP Token for Convex staking."}}, "deposit()": {"notice": "Deposit all available underlying into Convex pool.", "returns": {"_0": "True if successful deposit."}}, "harvest()": {"details": "Any underlying harvested is not redeposited by this method.", "notice": "Harvests reward tokens and sells these for the underlying.", "returns": {"_0": "Amount of underlying harvested."}}, "harvestable()": {"details": "Includes rewards for CRV, CVX & Extra Rewards.", "notice": "Amount of rewards that can be harvested in the underlying.", "returns": {"_0": "Estimated amount of underlying available to harvest."}}, "hasPendingFunds()": {"details": "Contract does not stash tokens."}, "name()": {"notice": "Returns the name of the strategy.", "returns": {"_0": "The name of the strategy."}}, "removeRewardToken(address)": {"notice": "Remove a reward token.", "params": {"token_": "Address of token to remove from reward token list."}, "returns": {"_0": "True if successfully removed."}}, "rewardTokens()": {"notice": "Returns the list of reward tokens supported by the strategy.", "returns": {"_0": "The list of reward tokens supported by the strategy."}}, "setCommunityReserve(address)": {"details": "CRV & CVX will be taxed and allocated to the reserve,      such that Mero can participate in governance.", "notice": "Set the address of the community reserve.", "params": {"_communityReserve": "Address of the community reserve."}}, "setCrvCommunityReserveShare(uint256)": {"notice": "Set the share of CRV to send to the Community Reserve.", "params": {"crvCommunityReserveShare_": "New fee charged on CRV rewards for governance."}}, "setCvxCommunityReserveShare(uint256)": {"notice": "Set the share of CVX to send to the Community Reserve.", "params": {"cvxCommunityReserveShare_": "New fee charged on CVX rewards for governance."}}, "setHopImbalanceToleranceIn(uint256)": {"details": "Stored as a percent, e.g. 1% would be set as 0.01", "notice": "Set hop imbalance tolerance for Curve Hop Pool deposits.", "params": {"_hopImbalanceToleranceIn": "New hop imbalance tolerance in."}}, "setHopImbalanceToleranceOut(uint256)": {"details": "Stored as a percent, e.g. 1% would be set as 0.01", "notice": "Set hop imbalance tolerance for Curve Hop Pool withdrawals.", "params": {"_hopImbalanceToleranceOut": "New hop imbalance tolerance out."}}, "setImbalanceToleranceIn(uint256)": {"details": "Stored as a percent, e.g. 1% would be set as 0.01", "notice": "Set imbalance tolerance for Curve Pool deposits.", "params": {"imbalanceToleranceIn_": "New imbalance tolerance in."}}, "setImbalanceToleranceOut(uint256)": {"details": "Stored as a percent, e.g. 1% would be set as 0.01", "notice": "Set imbalance tolerance for Curve Pool withdrawals.", "params": {"imbalanceToleranceOut_": "New imbalance tolerance out."}}, "setStrategist(address)": {"details": "Can only be set by current strategist.", "notice": "Set strategist.", "params": {"strategist_": "Address of new strategist."}}, "shutdown()": {"notice": "Shuts down the strategy, disabling deposits."}, "strategist()": {"notice": "Returns the address of the strategist.", "returns": {"_0": "The the address of the strategist."}}, "withdraw(uint256)": {"details": "This can only be called by the vault.      If the amount is not available, it will be made liquid.", "notice": "Withdraw an amount of underlying to the vault.", "params": {"amount_": "Amount of underlying to withdraw."}, "returns": {"_0": "True if successful withdrawal."}}, "withdrawAll()": {"details": "This does not liquidate reward tokens and only considers      idle underlying, idle lp tokens and staked lp tokens.", "notice": "Withdraw all underlying.", "returns": {"_0": "Amount of underlying withdrawn"}}}, "notice": "This is the MeroTriHopCvx strategy, which is designed to be used by a Mero ERC20 Vault. The strategy holds a given ERC20 underlying and allocates liquidity to Convex via a given Curve Pool. The Curve Pools used are Meta Pools which first require getting an LP Token from another Curve Pool. The strategy does a 'Hop' when depositing and withdrawing, by first getting the required LP Token, and then the final LP Token for Convex. Rewards received on Convex (CVX, CRV), are sold in part for the underlying. A share of earned CVX & CRV are retained on behalf of the Mero community to participate in governance.", "version": 1}, "offset": [884, 15281], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BDCDAFF GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xC2BDDF31 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE9EB5088 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE9EB5088 EQ PUSH2 0x70F JUMPI DUP1 PUSH4 0xECF8DB0A EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x74F JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0xFDC0BFCA EQ PUSH2 0x798 JUMPI DUP1 PUSH4 0xFF0AF85B EQ PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2BDDF31 EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0xDBBD47D4 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xDF22A747 EQ PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9EC5A894 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x9EC5A894 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0xAA6A8CAF EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0xB6ED67A8 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xBF86D690 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xC2B18AA0 EQ PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BDCDAFF EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x86993BEF EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x938511A7 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x9B61A924 EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3778851E GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x56BE5F71 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x56BE5F71 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x61240EEA EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x621E8FE1 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x69CBB00D EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x70AA1726 EQ PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3778851E EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x3D509C97 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x44D32EE9 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x49CABCDF EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x218751B2 GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x218751B2 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x283F3B56 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x3082538F EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x313C06A0 EQ PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x435DA5 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1A55820D EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x1C03E6CC EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x33C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x9ACAE4DEA8E4D290DEE086ECF PUSH1 0x9B SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x28F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x28F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0xAD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH2 0xCFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0xD75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x32C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x28F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x28F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH2 0x104F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x5C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0x110F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x28F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0x1225 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH2 0x133B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x32C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x685 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x3AF2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x6AD CALLDATASIZE PUSH1 0x4 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1397 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x6CD CALLDATASIZE PUSH1 0x4 PUSH2 0x3ABC JUMP JUMPDEST PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x32C PUSH2 0x15BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH2 0x16C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x70A CALLDATASIZE PUSH1 0x4 PUSH2 0x3B3F JUMP JUMPDEST PUSH2 0x196D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x72A CALLDATASIZE PUSH1 0x4 PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0x1C88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x74A CALLDATASIZE PUSH1 0x4 PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0x1D9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AD PUSH2 0x1F5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x845 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x869 SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B EQ DUP1 ISZERO SWAP1 PUSH2 0x8F0 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x919 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 EQ ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x125B9D985B1A59081D1BDAD95B881D1BC8185919 PUSH1 0x62 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x98B JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x996 PUSH1 0x1 DUP4 PUSH2 0x2282 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x9A1 PUSH2 0x2297 JUMP JUMPDEST SWAP1 POP PUSH2 0x9B8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 PUSH1 0x0 PUSH2 0x211C JUMP JUMPDEST PUSH2 0x9CE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 PUSH1 0x0 NOT PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0x851BBB4304BF0768ED98B97E429B5BD1DCC1F194B36CD1650F40293E951AE393 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP DUP2 PUSH2 0xA91 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9A DUP3 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH10 0x152D02C7E14AF6800000 PUSH2 0x25A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 LT PUSH2 0xB7C JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 DUP2 SUB SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xB90 DUP4 DUP9 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x3C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB3 DUP6 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x3C28 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBC1 JUMPI DUP1 SWAP2 POP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC6B SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH2 0xCB9 PUSH1 0x1 DUP4 PUSH2 0x25B9 JUMP JUMPDEST PUSH2 0xCC5 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH32 0x36BD04094FA067BB9471A8FBDB0A6E8A43424A2566AD3A740C88973FA40A3118 SWAP1 PUSH1 0x20 ADD PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH2 0x7C4 PUSH2 0x25CE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x4EDE3E4E9F7997FDA6FF4A12D6C43D5C9E1E2055065CBC15F902F504F72DC8C0 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF30 SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D756E6974792072657365727665206D75737420626520736574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1A8542DFFA4956932E66916113E6A123E123956172FBC0E2E59DF92B8A87D8E6 SWAP1 PUSH1 0x20 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x10BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x10C8 PUSH2 0x292E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x10D7 JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3D5A341DC6A12221FCF31279CEF3771F8FAD757B2D9261F97605CCC17C257424 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1189 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xE6B4374E594CAC6D717F89735F722A01C53AFFE6A4603ED44E09004666B7A6F3 SWAP1 PUSH1 0x20 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x129F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C3 SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x8B8AD8032596EF90599A67881AED48DBA49C88DD982CD479440BFCEE796DCF8B SWAP1 PUSH1 0x20 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 PUSH2 0x1348 PUSH2 0x2A57 JUMP JUMPDEST PUSH2 0x136A PUSH2 0x1353 PUSH2 0x2AE3 JUMP JUMPDEST PUSH2 0x135B PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x1365 SWAP2 SWAP1 PUSH2 0x3C3F JUMP JUMPDEST PUSH2 0x2B45 JUMP JUMPDEST PUSH2 0x1374 SWAP2 SWAP1 PUSH2 0x3C3F JUMP JUMPDEST PUSH2 0x2C48 JUMP JUMPDEST PUSH2 0x1381 PUSH2 0x2CDC JUMP JUMPDEST PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x3C3F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7C4 PUSH1 0x1 PUSH2 0x2D0D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1411 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1477 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x7A65726F2061646472657373206E6F7420616C6C6F7765640000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17D7BA6682F162782054B119192F8E5B98FE7090B4BEC7A55FC7075D9CD859EE SWAP1 PUSH1 0x20 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x46D58E3FA07BF19B1D27240F0E286B27E9F7C1B0D88933333FE833B60EEC5412 SWAP1 PUSH1 0x20 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH20 0x29BA3930BA32B3BC9034B99039B43ABA3237BBB7 PUSH1 0x61 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH2 0x168E PUSH2 0x2DB2 JUMP JUMPDEST PUSH2 0x1698 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xED21248CB703B524CC0029BB8669DF941BACA560163A3BC6AD184E7E9C268070 SWAP1 PUSH1 0x0 SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH3 0x466131 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH3 0x8CC262 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x170F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1743 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178A PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B PUSH2 0x1785 PUSH1 0x6 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x1776 SWAP2 SWAP1 PUSH2 0x3C28 JUMP JUMPDEST PUSH2 0x177F DUP7 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 PUSH2 0x3025 JUMP JUMPDEST PUSH2 0x3044 JUMP JUMPDEST PUSH2 0x17C2 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH2 0x1785 PUSH1 0x5 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x17BB SWAP2 SWAP1 PUSH2 0x3C28 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x3025 JUMP JUMPDEST PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x3C3F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17DA PUSH1 0x1 PUSH2 0x30CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1963 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2061AA23 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x40C35446 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1853 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF7C618C1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1895 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B9 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x18E0 JUMPI POP POP PUSH2 0x195B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x466131 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x194C SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH3 0x8CC262 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1928 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1785 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH2 0x1956 SWAP1 DUP7 PUSH2 0x3C3F JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x17DF JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A0B SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1A4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH2 0x1A57 DUP3 PUSH2 0x30D4 JUMP JUMPDEST PUSH2 0x1A5F PUSH2 0x25CE JUMP JUMPDEST POP PUSH2 0x1A68 PUSH2 0x3154 JUMP JUMPDEST PUSH1 0xC DUP4 SWAP1 SSTORE PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x1526FE27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH20 0xF403C135812408BFBE8713B5A23A04B3D48AAE31 SWAP1 PUSH4 0x1526FE27 SWAP1 PUSH1 0x24 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x3C74 JUMP JUMPDEST SWAP6 POP POP SWAP5 POP POP POP SWAP3 POP DUP1 ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x2837B7B61034B99039B43ABA3237BBB7 PUSH1 0x81 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x1B3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x9 DUP1 SLOAD DUP6 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD DUP9 DUP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1BA9 SWAP1 PUSH32 0x0 AND DUP7 PUSH1 0x0 PUSH2 0x211C JUMP JUMPDEST PUSH2 0x1BDF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP7 PUSH1 0x0 NOT PUSH2 0x211C JUMP JUMPDEST PUSH2 0x1C08 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0xF403C135812408BFBE8713B5A23A04B3D48AAE31 PUSH1 0x0 PUSH2 0x211C JUMP JUMPDEST PUSH2 0x1C32 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0xF403C135812408BFBE8713B5A23A04B3D48AAE31 PUSH1 0x0 NOT PUSH2 0x211C JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x19195C1BDCDA5D0819985A5B1959 PUSH1 0x92 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x1C7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D26 SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1D68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xB2861FED34A4613F8F25F46553A23408A3364EE9DDC4EF6714F0A81D856E41A7 SWAP1 PUSH1 0x20 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1E7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0x1ECD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D756E6974792072657365727665206D75737420626520736574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2C3C7D70A1DFBFAF74447753B8A73E1323AA10B32B9209742DB563671E14B13C SWAP1 PUSH1 0x20 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3DC5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1FC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH20 0x29BA3930BA32B3BC9034B99039B43ABA3237BBB7 PUSH1 0x61 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x201E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4426AA1FB73E391071491FCFE21A88B5C38A0A0333A1F6E77161470439704CF8 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH11 0x3937B632A6B0B730B3B2B9 PUSH1 0xA9 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20D7 SWAP2 SWAP1 PUSH2 0x3C57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH13 0x39BBB0B83832B92937BABA32B9 PUSH1 0x99 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD PUSH2 0x2096 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x2196 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2170 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2194 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2264 SWAP1 DUP5 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3278 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2278 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x334A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x347B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D5 PUSH2 0x2CDC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT PUSH2 0x234C JUMPI PUSH1 0x3 SLOAD PUSH2 0x2315 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 DUP5 PUSH2 0x34CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x5B6B431D4476A211BB7D41C20D1AAB9AE2321DEEE0D20BE3D9FC9B1093FA6E3D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 DUP3 SUB PUSH1 0x0 PUSH2 0x235A DUP3 PUSH2 0x34FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2366 PUSH2 0x2A57 JUMP JUMPDEST PUSH2 0x2370 SWAP1 DUP4 PUSH2 0x3C28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x237D DUP3 PUSH2 0x351E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2389 PUSH2 0x2AE3 JUMP JUMPDEST PUSH2 0x2393 SWAP1 DUP4 PUSH2 0x3C28 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x61973901 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC32E7202 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x240A SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH2 0x2417 JUMPI POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x241F PUSH2 0x3A05 JUMP JUMPDEST DUP4 DUP2 PUSH1 0xD SLOAD PUSH1 0x2 DUP2 LT PUSH2 0x2434 JUMPI PUSH2 0x2434 PUSH2 0x3CF6 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3103273 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE3103273 SWAP1 PUSH2 0x246B SWAP1 DUP5 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2499 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x24A5 PUSH2 0x3A23 JUMP JUMPDEST DUP7 DUP2 PUSH32 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x24D8 JUMPI PUSH2 0x24D8 PUSH2 0x3CF6 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x27F6BA83 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x9FDAEA0C SWAP1 PUSH2 0x252B SWAP1 DUP5 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3D44 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2559 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0x2595 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH32 0x0 DUP12 PUSH2 0x34CA JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x25B1 JUMPI PUSH2 0x25B1 PUSH2 0x3BF0 JUMP JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25D9 PUSH2 0x2CDC JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D18B912 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x262B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x263F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x264B PUSH2 0x3635 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2655 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3FF37E8F PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3FF37E8F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F0 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x3FF37E8F PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3FF37E8F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2765 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2789 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2796 PUSH1 0x1 PUSH2 0x30CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x284A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH4 0x3FF37E8F PUSH2 0x27BD PUSH1 0x1 DUP5 PUSH2 0x3792 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x281D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2841 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3FF37E8F PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x3FF37E8F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28D5 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST POP PUSH1 0x0 DUP4 PUSH2 0x28E1 PUSH2 0x2CDC JUMP JUMPDEST PUSH2 0x28EB SWAP2 SWAP1 PUSH2 0x3C28 JUMP JUMPDEST SWAP1 POP PUSH32 0x80F97F878E16410266694F134DDF012F2BE424F54F8B5CAFA107ECCC51D00D58 DUP2 PUSH1 0x40 MLOAD PUSH2 0x291E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2938 PUSH2 0x3154 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2942 PUSH2 0x2A57 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2A06 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A4D01D2 DUP3 PUSH32 0x0 PUSH2 0x29A4 DUP6 PUSH2 0x379E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x2A10 PUSH2 0x2CDC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2A20 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x20D7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 DUP4 PUSH2 0x34CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2ABF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x2AA2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x2AA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BCC SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x176F717 PUSH1 0xE7 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x2C42 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xBB7B8B80 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C3B SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x3025 JUMP JUMPDEST SWAP1 PUSH2 0x37C2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CCF SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x177F SWAP1 DUP6 PUSH2 0x3C06 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x2AA2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2D1A DUP4 PUSH2 0x30CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D37 JUMPI PUSH2 0x2D37 PUSH2 0x3D7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D60 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2DAA JUMPI PUSH2 0x2D78 DUP6 DUP3 PUSH2 0x3792 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D8A JUMPI PUSH2 0x2D8A PUSH2 0x3CF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2D66 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x696E76616C6964206D73672E76616C7565 PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLVALUE ISZERO PUSH2 0x2DFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2E07 PUSH2 0x2CDC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2ED9 JUMPI PUSH2 0x2E17 PUSH2 0x3A23 JUMP JUMPDEST DUP2 DUP2 PUSH32 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x2E4A JUMPI PUSH2 0x2E4A PUSH2 0x3CF6 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x4515CEF3 DUP3 PUSH2 0x2E88 DUP6 PUSH2 0x37D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EA5 SWAP3 SWAP2 SWAP1 PUSH2 0x3D44 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ED3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x2EE3 PUSH2 0x2A57 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2F79 JUMPI PUSH2 0x2EF3 PUSH2 0x3A05 JUMP JUMPDEST DUP2 DUP2 PUSH1 0xD SLOAD PUSH1 0x2 DUP2 LT PUSH2 0x2F08 JUMPI PUSH2 0x2F08 PUSH2 0x3CF6 JUMP JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB4C7E4D DUP3 PUSH2 0x2F28 DUP6 PUSH2 0x37F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F45 SWAP3 SWAP2 SWAP1 PUSH2 0x3D0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0x2F81 PUSH2 0x2AE3 JUMP JUMPDEST PUSH2 0x2F8E JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x303ACFE7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xF403C135812408BFBE8713B5A23A04B3D48AAE31 SWAP1 PUSH4 0x60759FCE SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x300F SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH2 0x301C JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x303A DUP4 DUP6 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x227B SWAP2 SWAP1 PUSH2 0x3C06 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304E PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x25503329 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x4AA06652 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x227B SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x55B30B19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x90E00ACE148CA3B23AC1BC8C240C2A7DD9C2D7F5 SWAP1 PUSH4 0x55B30B19 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x312C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3150 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315E PUSH2 0x2B14 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x31DE JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x61973901 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC32E7202 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31DC SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x31E8 PUSH2 0x2AE3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3150 JUMPI PUSH1 0xB SLOAD PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1A4D01D2 SWAP1 DUP4 SWAP1 PUSH2 0x3213 DUP3 PUSH2 0x380D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x325C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3270 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32CD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2269 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2264 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x32EB SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH2 0x2264 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x33AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x3402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x341E SWAP2 SWAP1 PUSH2 0x3D92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x345B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3470 DUP3 DUP3 DUP7 PUSH2 0x3831 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x34C2 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x20D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2264 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x222D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH1 0xF SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x3515 SWAP2 SWAP1 PUSH2 0x3C3F JUMP JUMPDEST PUSH2 0x177F DUP5 PUSH2 0x386A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x3539 SWAP2 SWAP1 PUSH2 0x3C3F JUMP JUMPDEST PUSH2 0x177F DUP5 PUSH2 0x38FE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x362B JUMPI PUSH1 0x0 PUSH2 0x3566 PUSH1 0x1 DUP4 PUSH2 0x3C28 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x357A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3C28 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x35DF JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x359A JUMPI PUSH2 0x359A PUSH2 0x3CF6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x35BD JUMPI PUSH2 0x35BD PUSH2 0x3CF6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x35F0 JUMPI PUSH2 0x35F0 PUSH2 0x3DAE JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3649 JUMPI POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 ISZERO PUSH2 0x36F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36CA SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x36F1 JUMPI PUSH2 0x36F1 DUP5 PUSH2 0x36E0 DUP4 DUP7 PUSH2 0x3025 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 SWAP1 PUSH2 0x34CA JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x5 SLOAD DUP1 ISZERO PUSH2 0x2264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3751 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3775 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x378B JUMPI PUSH2 0x378B DUP6 PUSH2 0x36E0 DUP4 DUP7 PUSH2 0x3025 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x227B DUP4 DUP4 PUSH2 0x39DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH1 0xF SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x37B9 SWAP2 SWAP1 PUSH2 0x3C28 JUMP JUMPDEST PUSH2 0x177F DUP5 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x303A PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x3BD1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH1 0xE SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x3515 SWAP2 SWAP1 PUSH2 0x3C28 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH1 0x7 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x3539 SWAP2 SWAP1 PUSH2 0x3C28 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH1 0x8 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x3828 SWAP2 SWAP1 PUSH2 0x3C28 JUMP JUMPDEST PUSH2 0x177F DUP5 PUSH2 0x2B45 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3840 JUMPI POP DUP2 PUSH2 0x227B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3850 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x3A71 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F1 SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x2C42 SWAP1 DUP6 PUSH2 0x3BD1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D7 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397A SWAP2 SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH2 0x2C42 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB7B8B80 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x39F2 JUMPI PUSH2 0x39F2 PUSH2 0x3CF6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A5C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A44 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3A6B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3A90 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3A41 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3ACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x227B DUP2 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B33 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3B0E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3B66 DUP2 PUSH2 0x3AA4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x227B DUP3 PUSH2 0x3B77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3BEB JUMPI PUSH2 0x3BEB PUSH2 0x3BBB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3C23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3C3A JUMPI PUSH2 0x3C3A PUSH2 0x3BBB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3C52 JUMPI PUSH2 0x3C52 PUSH2 0x3BBB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x227B DUP2 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH2 0x3C98 DUP2 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP PUSH2 0x3CA9 DUP2 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP6 POP PUSH2 0x3CBA DUP2 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH2 0x3CCB DUP2 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x3CDC DUP2 PUSH2 0x3AA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CEA PUSH1 0xA0 DUP9 ADD PUSH2 0x3B77 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD DUP2 DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x3D34 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D15 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD DUP2 DUP5 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3D6C JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D4D JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3DA4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3A41 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH22 0x6E617574686F72697A65642061636365737300000000 STOP STOP STOP STOP STOP STOP STOP STOP STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MLOAD PUSH31 0xCE7B44DF8DF7518E0672EFF8AFB20B6B90638A7706435DC05887A68CB16473 PUSH16 0x6C634300080A00330000000000000000 ", "sha1": "4fb39c47aefd709b3f9b4b761b34acd5a5a58b9b", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.10;\n\nimport \"./ConvexStrategyBase.sol\";\nimport \"../../interfaces/IERC20Full.sol\";\nimport \"../../interfaces/strategies/IMeroTriHopCvx.sol\";\nimport \"../../libraries/UncheckedMath.sol\";\n\n/**\n * This is the MeroTriHopCvx strategy, which is designed to be used by a Mero ERC20 Vault.\n * The strategy holds a given ERC20 underlying and allocates liquidity to Convex via a given Curve Pool.\n * The Curve Pools used are Meta Pools which first require getting an LP Token from another Curve Pool.\n * The strategy does a 'Hop' when depositing and withdrawing, by first getting the required LP Token, and then the final LP Token for Convex.\n * Rewards received on Convex (CVX, CRV), are sold in part for the underlying.\n * A share of earned CVX & CRV are retained on behalf of the Mero community to participate in governance.\n */\ncontract MeroTriHopCvx is ConvexStrategyBase, IMeroTriHopCvx {\n    using ScaledMath for uint256;\n    using UncheckedMath for uint256;\n    using SafeERC20 for IERC20;\n\n    ICurveSwapEth public immutable curveHopPool; // Curve Pool to use for Hops\n    IERC20 public immutable hopLp; // Curve Hop Pool LP Token\n    uint256 public immutable curveHopIndex; // Underlying index in Curve Pool\n\n    uint256 public hopImbalanceToleranceIn; // Maximum allowed slippage from Curve Hop Pool Imbalance for depositing\n    uint256 public hopImbalanceToleranceOut; // Maximum allowed slippage from Curve Hop Pool Imbalance for withdrawing\n    uint256 public decimalMultiplier; // Used for converting between underlying and LP\n\n    event SetHopImbalanceToleranceIn(uint256 value); // Emitted after a successful setting of hop imbalance tolerance in\n    event SetHopImbalanceToleranceOut(uint256 value); // Emitted after a successful setting of hop imbalance tolerance out\n\n    constructor(\n        address vault_,\n        address strategist_,\n        uint256 convexPid_,\n        address curvePool_,\n        uint256 curveIndex_,\n        address curveHopPool_,\n        uint256 curveHopIndex_,\n        IAddressProvider addressProvider_\n    )\n        ConvexStrategyBase(\n            vault_,\n            strategist_,\n            convexPid_,\n            curvePool_,\n            curveIndex_,\n            addressProvider_\n        )\n    {\n        // Getting data from supporting contracts\n        _validateCurvePool(curveHopPool_);\n        (address lp_, , , , , bool shutdown) = _BOOSTER.poolInfo(convexPid_);\n        require(!shutdown, Error.POOL_SHUTDOWN);\n        address hopLp_ = ICurveSwapEth(curvePool_).coins(curveIndex_);\n        hopLp = IERC20(hopLp_);\n        curveHopPool = ICurveSwapEth(curveHopPool_);\n        address underlying_ = ICurveSwapEth(curveHopPool_).coins(curveHopIndex_);\n        underlying = IERC20(underlying_);\n        decimalMultiplier = 10**(18 - IERC20Full(underlying_).decimals());\n\n        // Setting inputs\n        curveHopIndex = curveHopIndex_;\n\n        // Setting default values\n        imbalanceToleranceIn = 0.001e18;\n        imbalanceToleranceOut = 0.048e18;\n        hopImbalanceToleranceIn = 0.001e18;\n        hopImbalanceToleranceOut = 0.0015e18;\n\n        // Approvals\n        IERC20(underlying_).safeApprove(curveHopPool_, type(uint256).max);\n        IERC20(hopLp_).safeApprove(curvePool_, type(uint256).max);\n        IERC20(lp_).safeApprove(address(_BOOSTER), type(uint256).max);\n    }\n\n    /**\n     * @notice Set hop imbalance tolerance for Curve Hop Pool deposits.\n     * @dev Stored as a percent, e.g. 1% would be set as 0.01\n     * @param _hopImbalanceToleranceIn New hop imbalance tolerance in.\n     */\n    function setHopImbalanceToleranceIn(uint256 _hopImbalanceToleranceIn)\n        external\n        override\n        onlyGovernance\n    {\n        hopImbalanceToleranceIn = _hopImbalanceToleranceIn;\n        emit SetHopImbalanceToleranceIn(_hopImbalanceToleranceIn);\n    }\n\n    /**\n     * @notice Set hop imbalance tolerance for Curve Hop Pool withdrawals.\n     * @dev Stored as a percent, e.g. 1% would be set as 0.01\n     * @param _hopImbalanceToleranceOut New hop imbalance tolerance out.\n     */\n    function setHopImbalanceToleranceOut(uint256 _hopImbalanceToleranceOut)\n        external\n        override\n        onlyGovernance\n    {\n        hopImbalanceToleranceOut = _hopImbalanceToleranceOut;\n        emit SetHopImbalanceToleranceOut(_hopImbalanceToleranceOut);\n    }\n\n    /**\n     * @notice Changes the Convex Pool used for farming yield, e.g. from FRAX to MIM.\n     * @dev First withdraws all funds, then harvests any rewards, then changes pool, then deposits again.\n     * @param convexPid_ The PID for the new Convex Pool.\n     * @param curvePool_ The Curve Pool to deposit into to get the required LP Token for Convex staking.\n     * @param curveIndex_ The index of the new Convex Pool Token in the new Curve Pool.\n     */\n    function changeConvexPool(\n        uint256 convexPid_,\n        address curvePool_,\n        uint256 curveIndex_\n    ) external override onlyGovernance {\n        _validateCurvePool(curvePool_);\n        _harvest();\n        _withdrawAllToHopLp();\n        convexPid = convexPid_;\n        curveIndex = curveIndex_;\n        (address lp_, , , address rewards_, , bool shutdown) = _BOOSTER.poolInfo(convexPid_);\n        require(!shutdown, Error.POOL_SHUTDOWN);\n        lp = IERC20(lp_);\n        rewards = IRewardStaking(rewards_);\n        curvePool = ICurveSwapEth(curvePool_);\n        IERC20(hopLp).safeApprove(curvePool_, 0);\n        IERC20(hopLp).safeApprove(curvePool_, type(uint256).max);\n        IERC20(lp_).safeApprove(address(_BOOSTER), 0);\n        IERC20(lp_).safeApprove(address(_BOOSTER), type(uint256).max);\n        require(_deposit(), Error.DEPOSIT_FAILED);\n    }\n\n    function balance() public view override returns (uint256) {\n        return\n            _underlyingBalance() +\n            _hopLpToUnderlying(_lpToHopLp(_stakedBalance() + _lpBalance()) + _hopLpBalance());\n    }\n\n    function name() public pure override returns (string memory) {\n        return \"MeroTriHopCvx\";\n    }\n\n    function _deposit() internal override returns (bool) {\n        require(msg.value == 0, Error.INVALID_VALUE);\n\n        // Depositing into Curve Hop Pool\n        uint256 underlyingBalance = _underlyingBalance();\n        if (underlyingBalance > 0) {\n            uint256[3] memory hopAmounts;\n            hopAmounts[curveHopIndex] = underlyingBalance;\n            curveHopPool.add_liquidity(hopAmounts, _minHopLpAcceptedFromDeposit(underlyingBalance));\n        }\n\n        // Depositing into Curve Pool\n        uint256 hopLpBalance = _hopLpBalance();\n        if (hopLpBalance > 0) {\n            uint256[2] memory amounts;\n            amounts[curveIndex] = hopLpBalance;\n            curvePool.add_liquidity(amounts, _minLpAccepted(hopLpBalance));\n        }\n\n        // Depositing into Convex and Staking\n        if (_lpBalance() == 0) return false;\n        if (!_BOOSTER.depositAll(convexPid, true)) return false;\n        return true;\n    }\n\n    function _withdraw(uint256 amount) internal override {\n        // Transferring from idle balance if enough\n        uint256 underlyingBalance = _underlyingBalance();\n        if (underlyingBalance >= amount) {\n            underlying.safeTransfer(vault, amount);\n            emit Withdraw(amount);\n            return;\n        }\n\n        // Calculating needed amount of LP to withdraw\n        uint256 requiredUnderlyingAmount = amount.uncheckedSub(underlyingBalance);\n        uint256 maxHopLpBurned = _maxHopLpBurned(requiredUnderlyingAmount);\n        uint256 requiredHopLpAmount = maxHopLpBurned - _hopLpBalance();\n        uint256 maxLpBurned = _maxLpBurned(requiredHopLpAmount);\n        uint256 requiredLpAmount = maxLpBurned - _lpBalance();\n\n        // Unstaking needed LP Tokens from Convex\n        if (!rewards.withdrawAndUnwrap(requiredLpAmount, false)) return;\n\n        // Removing needed liquidity from Curve Pool\n        uint256[2] memory amounts;\n        amounts[curveIndex] = requiredHopLpAmount;\n        curvePool.remove_liquidity_imbalance(amounts, maxLpBurned);\n\n        // Removing needed liquidity from Curve Hop Pool\n        uint256[3] memory hopAmounts;\n        hopAmounts[curveHopIndex] = requiredUnderlyingAmount;\n        curveHopPool.remove_liquidity_imbalance(hopAmounts, maxHopLpBurned);\n\n        // Sending underlying to vault\n        underlying.safeTransfer(vault, amount);\n    }\n\n    function _withdrawAll() internal override returns (uint256) {\n        // Withdrawing all from Convex and converting to Hop LP Token\n        _withdrawAllToHopLp();\n\n        // Removing liquidity from Curve Hop Pool\n        uint256 hopLpBalance = _hopLpBalance();\n        if (hopLpBalance > 0) {\n            curveHopPool.remove_liquidity_one_coin(\n                hopLpBalance,\n                int128(uint128(curveHopIndex)),\n                _minUnderlyingAccepted(hopLpBalance)\n            );\n        }\n\n        // Transferring underlying to vault\n        uint256 underlyingBalance = _underlyingBalance();\n        if (underlyingBalance == 0) return 0;\n        underlying.safeTransfer(vault, underlyingBalance);\n        return underlyingBalance;\n    }\n\n    function _underlyingBalance() internal view override returns (uint256) {\n        return underlying.balanceOf(address(this));\n    }\n\n    /**\n     * @dev Get the balance of the hop lp.\n     */\n    function _hopLpBalance() internal view returns (uint256) {\n        return hopLp.balanceOf(address(this));\n    }\n\n    /**\n     * @notice Calculates the minimum LP to accept when depositing underlying into Curve Pool.\n     * @param _hopLpAmount Amount of Hop LP that is being deposited into Curve Pool.\n     * @return The minimum LP balance to accept.\n     */\n    function _minLpAccepted(uint256 _hopLpAmount) internal view returns (uint256) {\n        return _hopLpToLp(_hopLpAmount).scaledMul(ScaledMath.ONE - imbalanceToleranceIn);\n    }\n\n    /**\n     * @notice Calculates the maximum LP to accept burning when withdrawing amount from Curve Pool.\n     * @param _hopLpAmount Amount of Hop LP that is being withdrawn from Curve Pool.\n     * @return The maximum LP balance to accept burning.\n     */\n    function _maxLpBurned(uint256 _hopLpAmount) internal view returns (uint256) {\n        return _hopLpToLp(_hopLpAmount).scaledMul(ScaledMath.ONE + imbalanceToleranceOut);\n    }\n\n    /**\n     * @notice Calculates the minimum Hop LP to accept when burning LP tokens to withdraw from Curve Pool.\n     * @param _lpAmount Amount of LP tokens being burned to withdraw from Curve Pool.\n     * @return The minimum Hop LP balance to accept.\n     */\n    function _minHopLpAcceptedFromWithdraw(uint256 _lpAmount) internal view returns (uint256) {\n        return _lpToHopLp(_lpAmount).scaledMul(ScaledMath.ONE - imbalanceToleranceOut);\n    }\n\n    /**\n     * @notice Calculates the minimum Hop LP to accept when depositing underlying into Curve Hop Pool.\n     * @param _underlyingAmount Amount of underlying that is being deposited into Curve Hop Pool.\n     * @return The minimum Hop LP balance to accept.\n     */\n    function _minHopLpAcceptedFromDeposit(uint256 _underlyingAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return\n            _underlyingToHopLp(_underlyingAmount).scaledMul(\n                ScaledMath.ONE - hopImbalanceToleranceIn\n            );\n    }\n\n    /**\n     * @notice Calculates the maximum Hop LP to accept burning when withdrawing amount from Curve Hop Pool.\n     * @param _underlyingAmount Amount of underlying that is being withdrawn from Curve Hop Pool.\n     * @return The maximum Hop LP balance to accept burning.\n     */\n    function _maxHopLpBurned(uint256 _underlyingAmount) internal view returns (uint256) {\n        return\n            _underlyingToHopLp(_underlyingAmount).scaledMul(\n                ScaledMath.ONE + hopImbalanceToleranceOut\n            );\n    }\n\n    /**\n     * @notice Calculates the minimum underlying to accept when burning Hop LP tokens to withdraw from Curve Hop Pool.\n     * @param _hopLpAmount Amount of Hop LP tokens being burned to withdraw from Curve Hop Pool.\n     * @return The minimum underlying balance to accept.\n     */\n    function _minUnderlyingAccepted(uint256 _hopLpAmount) internal view returns (uint256) {\n        return\n            _hopLpToUnderlying(_hopLpAmount).scaledMul(ScaledMath.ONE - hopImbalanceToleranceOut);\n    }\n\n    /**\n     * @notice Converts an amount of underlying into their estimated Hop LP value.\n     * @dev Uses get_virtual_price which is less susceptible to manipulation.\n     *  But is also less accurate to how much could be withdrawn.\n     * @param _underlyingAmount Amount of underlying to convert.\n     * @return The estimated value in the Hop LP.\n     */\n    function _underlyingToHopLp(uint256 _underlyingAmount) internal view returns (uint256) {\n        return (_underlyingAmount * decimalMultiplier).scaledDiv(curveHopPool.get_virtual_price());\n    }\n\n    /**\n     * @notice Converts an amount of Hop LP into their estimated underlying value.\n     * @dev Uses get_virtual_price which is less susceptible to manipulation.\n     *  But is also less accurate to how much could be withdrawn.\n     * @param _hopLpAmount Amount of Hop LP to convert.\n     * @return The estimated value in the underlying.\n     */\n    function _hopLpToUnderlying(uint256 _hopLpAmount) internal view returns (uint256) {\n        return (_hopLpAmount / decimalMultiplier).scaledMul(curveHopPool.get_virtual_price());\n    }\n\n    /**\n     * @notice Converts an amount of LP into their estimated Hop LP value.\n     * @dev Uses get_virtual_price which is less susceptible to manipulation.\n     *  But is also less accurate to how much could be withdrawn.\n     * @param _lpAmount Amount of underlying to convert.\n     * @return The estimated value in the Hop LP.\n     */\n    function _lpToHopLp(uint256 _lpAmount) internal view returns (uint256) {\n        return\n            _lpAmount.scaledMul(curvePool.get_virtual_price()).scaledDiv(\n                curveHopPool.get_virtual_price()\n            );\n    }\n\n    /**\n     * @notice Converts an amount of Hop LP into their estimated LP value.\n     * @dev Uses get_virtual_price which is less susceptible to manipulation.\n     *  But is also less accurate to how much could be withdrawn.\n     * @param _hopLpAmount Amount of Hop LP to convert.\n     * @return The estimated value in the LP.\n     */\n    function _hopLpToLp(uint256 _hopLpAmount) internal view returns (uint256) {\n        return\n            _hopLpAmount.scaledMul(curveHopPool.get_virtual_price()).scaledDiv(\n                curvePool.get_virtual_price()\n            );\n    }\n\n    /**\n     * @dev Withdraw all underlying and convert to the Hop LP Token.\n     */\n    function _withdrawAllToHopLp() private {\n        // Unstaking and withdrawing from Convex pool\n        uint256 stakedBalance = _stakedBalance();\n        if (stakedBalance > 0) {\n            rewards.withdrawAndUnwrap(stakedBalance, false);\n        }\n\n        // Removing liquidity from Curve Pool\n        uint256 lpBalance = _lpBalance();\n        if (lpBalance > 0) {\n            curvePool.remove_liquidity_one_coin(\n                lpBalance,\n                int128(uint128(curveIndex)),\n                _minHopLpAcceptedFromWithdraw(lpBalance)\n            );\n        }\n    }\n}\n", "sourceMap": "884:14397:61:-:0;;;1844:1543;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2146:6;2166:11;2191:10;2215;2239:11;2264:16;4762:33:59;:16;-1:-1:-1;;;;;4762:31:59;;;;;;:33;;:::i;:::-;-1:-1:-1;;;;;255:27:39;;;4857:30:59::1;4876:10:::0;4857:18:::1;:30::i;:::-;4953:29;::::0;-1:-1:-1;;;4953:29:59;;::::1;::::0;::::1;1302:25:203::0;;;4898:11:59::1;::::0;;;;;1258:42:::1;::::0;4953:17:::1;::::0;1275:18:203;;4953:29:59::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4897:85;;;;;;;;;5001:9;5000:10;5012:19;;;;;;;;;;;;;-1:-1:-1::0;;;5012:19:59::1;;::::0;4992:40:::1;;;;;-1:-1:-1::0;;;4992:40:59::1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;5042:2:59::1;:16:::0;;-1:-1:-1;;;;;5042:16:59;;::::1;-1:-1:-1::0;;;;;;5042:16:59;;::::1;;::::0;;;5068:7:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;5112:9:::1;:37:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;5181:44:::1;::::0;-1:-1:-1;;;5181:44:59;;::::1;::::0;::::1;1302:25:203::0;;;-1:-1:-1;;5112:37:59;5181:31:::1;::::0;1275:18:203;;5181:44:59::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5159:66:::0;-1:-1:-1;;;;;;5239:33:59;::::1;1834:42;5239:33;5235:63;;;-1:-1:-1::0;5296:1:59::1;5235:63;5308:10;:32:::0;;-1:-1:-1;;;;;;5308:32:59;;::::1;-1:-1:-1::0;;;;;5308:32:59;;::::1;::::0;;;::::1;::::0;;;5377:14;;::::1;;::::0;-1:-1:-1;5401:25:59;;;;::::1;::::0;;::::1;;::::0;;5436:9:::1;:22:::0;;;5468:10:::1;:24:::0;;;5502:35;;::::1;;::::0;;;5579::::1;::::0;:33:::1;-1:-1:-1::0;5579:33:59;;::::1;;;:35:::0;::::1;:::i;:::-;5547:67:::0;-1:-1:-1;5646:60:59::1;1373:42;5547:67:::0;-1:-1:-1;;5646:16:59::1;;::::0;;::::1;;;:60:::0;::::1;:::i;:::-;5716;1468:42;5741:14:::0;-1:-1:-1;;5716:16:59::1;;::::0;;::::1;;;:60:::0;::::1;:::i;:::-;5786:61;1564:42;5812:14:::0;-1:-1:-1;;5786:17:59::1;;::::0;;::::1;;;:61:::0;::::1;:::i;:::-;4797:1057;;;;;4549:1305:::0;;;;;;2355:33:61::1;2374:13;2355:18;;;:33;;:::i;:::-;2437:29;::::0;-1:-1:-1;;;2437:29:61;;::::1;::::0;::::1;1302:25:203::0;;;2399:11:61::1;::::0;;;1258:42:59::1;::::0;2437:17:61::1;::::0;1275:18:203;;2437:29:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2398:68;;;;;;;;2485:8;2484:9;2495:19;;;;;;;;;;;;;-1:-1:-1::0;;;2495:19:61::1;;::::0;2476:39:::1;;;;;-1:-1:-1::0;;;2476:39:61::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2542:44:61::1;::::0;-1:-1:-1;;;2542:44:61;;::::1;::::0;::::1;1302:25:203::0;;;2525:14:61::1;::::0;-1:-1:-1;;;;;2542:31:61;::::1;::::0;::::1;::::0;1275:18:203;;2542:44:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2596:22:61;;::::1;;::::0;2628:43;::::1;;::::0;;;2703:50:::1;::::0;-1:-1:-1;;;2703:50:61;;::::1;::::0;::::1;1302:25:203::0;;;2596:22:61;;-1:-1:-1;2681:19:61::1;::::0;2703:34:::1;::::0;1275:18:203;;2703:50:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2681:72;;2783:11;2763:10;;:32;;;;;-1:-1:-1::0;;;;;2763:32:61::1;;;;;-1:-1:-1::0;;;;;2763:32:61::1;;;;;;2846:11;-1:-1:-1::0;;;;;2835:32:61::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2830:39;::::0;:2:::1;:39;:::i;:::-;2825:45;::::0;:2:::1;:45;:::i;:::-;2805:17;:65:::0;2907:30:::1;::::0;;;3005:8:::1;2982:20;:31:::0;;;3047:8:::1;3023:21;:32:::0;3065:23:::1;:34:::0;3136:9:::1;3109:24;:36:::0;3177:65:::1;-1:-1:-1::0;;;;;3177:31:61;::::1;3209:13:::0;-1:-1:-1;;3177:31:61::1;;::::0;;::::1;;;:65:::0;::::1;:::i;:::-;3252:57;3279:10;-1:-1:-1::0;;3259:6:61::1;-1:-1:-1::0;;;;;3252:26:61::1;;;;;;;:57;;;;;:::i;:::-;3319:61;1258:42:59;-1:-1:-1::0;;3326:3:61::1;-1:-1:-1::0;;;;;3319:23:61::1;;;;;;;:61;;;;;:::i;:::-;2295:1092;;;;1844:1543:::0;;;;;;;;884:14397;;2581:184:182;2699:58;;-1:-1:-1;;;2699:58:182;;-1:-1:-1;;;2699:58:182;;;1302:25:203;2655:12:182;;-1:-1:-1;;;;;2699:19:182;;;;;1275:18:203;;2699:58:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2679:79;2581:184;-1:-1:-1;;2581:184:182:o;17559:112:59:-;17631:33;;-1:-1:-1;;;17631:33:59;;-1:-1:-1;;;;;5627:32:203;;17631:33:59;;;5609:51:203;1695:42:59;;17631:21;;5582:18:203;;17631:33:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17559:112;:::o;3343:192:182:-;3467:60;;-1:-1:-1;;;3467:60:182;;-1:-1:-1;;;3467:60:182;;;1302:25:203;3419:14:182;;-1:-1:-1;;;;;3467:19:182;;;;;1275:18:203;;3467:60:182;1156:177:203;1413:603:19;1768:10;;;1767:62;;-1:-1:-1;1784:39:19;;-1:-1:-1;;;1784:39:19;;1808:4;1784:39;;;6072:34:203;-1:-1:-1;;;;;6142:15:203;;;6122:18;;;6115:43;1784:15:19;;;;;6007:18:203;;1784:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:19;;6371:2:203;1746:163:19;;;6353:21:203;6410:2;6390:18;;;6383:30;6449:34;6429:18;;;6422:62;6520:24;6500:18;;;6493:52;6562:19;;1746:163:19;6169:418:203;1746:163:19;1946:62;;;-1:-1:-1;;;;;6784:32:203;;1946:62:19;;;6766:51:203;6833:18;;;;6826:34;;;1946:62:19;;;;;;;;;;6739:18:203;;;;1946:62:19;;;;;;;;-1:-1:-1;;;;;1946:62:19;;;-1:-1:-1;;;1946:62:19;;;;1919:90;;1939:5;;1919:19;:90;:::i;:::-;1413:603;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:19;;;;;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:19;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:19;;7280:2:203;3811:85:19;;;7262:21:203;7319:2;7299:18;;;7292:30;7358:34;7338:18;;;7331:62;-1:-1:-1;;;7409:18:203;;;7402:40;7459:19;;3811:85:19;7078:406:203;3861:223:20;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:20;;7691:2:203;5137:81:20;;;7673:21:203;7730:2;7710:18;;;7703:30;7769:34;7749:18;;;7742:62;-1:-1:-1;;;7820:18:203;;;7813:36;7866:19;;5137:81:20;7489:402:203;5137:81:20;-1:-1:-1;;;;;1465:19:20;;;5228:60;;;;-1:-1:-1;;;5228:60:20;;8098:2:203;5228:60:20;;;8080:21:203;8137:2;8117:18;;;8110:30;8176:31;8156:18;;;8149:59;8225:18;;5228:60:20;7896:353:203;5228:60:20;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:20;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5299:73:20;;-1:-1:-1;5299:73:20;-1:-1:-1;5389:51:20;5299:73;;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:20:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:20;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:20;;;;;;;;:::i;14:131:203:-;-1:-1:-1;;;;;89:31:203;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1001::-;309:6;317;325;333;341;349;357;365;418:3;406:9;397:7;393:23;389:33;386:53;;;435:1;432;425:12;386:53;467:9;461:16;486:31;511:5;486:31;:::i;:::-;586:2;571:18;;565:25;536:5;;-1:-1:-1;599:33:203;565:25;599:33;:::i;:::-;698:2;683:18;;677:25;747:2;732:18;;726:25;651:7;;-1:-1:-1;677:25:203;-1:-1:-1;760:33:203;726:25;760:33;:::i;:::-;859:3;844:19;;838:26;909:3;894:19;;888:26;812:7;;-1:-1:-1;838:26:203;-1:-1:-1;923:33:203;888:26;923:33;:::i;:::-;1022:3;1007:19;;1001:26;1072:3;1057:19;;1051:26;975:7;;-1:-1:-1;1001:26:203;-1:-1:-1;1086:33:203;1051:26;1086:33;:::i;:::-;1138:7;1128:17;;;150:1001;;;;;;;;;;;:::o;1338:164::-;1414:13;;1463;;1456:21;1446:32;;1436:60;;1492:1;1489;1482:12;1436:60;1338:164;;;:::o;1507:869::-;1619:6;1627;1635;1643;1651;1659;1712:3;1700:9;1691:7;1687:23;1683:33;1680:53;;;1729:1;1726;1719:12;1680:53;1761:9;1755:16;1780:31;1805:5;1780:31;:::i;:::-;1880:2;1865:18;;1859:25;1830:5;;-1:-1:-1;1893:33:203;1859:25;1893:33;:::i;:::-;1997:2;1982:18;;1976:25;1945:7;;-1:-1:-1;2010:33:203;1976:25;2010:33;:::i;:::-;2114:2;2099:18;;2093:25;2062:7;;-1:-1:-1;2127:33:203;2093:25;2127:33;:::i;:::-;2231:3;2216:19;;2210:26;2179:7;;-1:-1:-1;2245:33:203;2210:26;2245:33;:::i;:::-;2297:7;-1:-1:-1;2323:47:203;2365:3;2350:19;;2323:47;:::i;:::-;2313:57;;1507:869;;;;;;;;:::o;2381:258::-;2453:1;2463:113;2477:6;2474:1;2471:13;2463:113;;;2553:11;;;2547:18;2534:11;;;2527:39;2499:2;2492:10;2463:113;;;2594:6;2591:1;2588:13;2585:48;;;2629:1;2620:6;2615:3;2611:16;2604:27;2585:48;;2381:258;;;:::o;2644:383::-;2793:2;2782:9;2775:21;2756:4;2825:6;2819:13;2868:6;2863:2;2852:9;2848:18;2841:34;2884:66;2943:6;2938:2;2927:9;2923:18;2918:2;2910:6;2906:15;2884:66;:::i;:::-;3011:2;2990:15;-1:-1:-1;;2986:29:203;2971:45;;;;3018:2;2967:54;;2644:383;-1:-1:-1;;2644:383:203:o;3032:251::-;3102:6;3155:2;3143:9;3134:7;3130:23;3126:32;3123:52;;;3171:1;3168;3161:12;3123:52;3203:9;3197:16;3222:31;3247:5;3222:31;:::i;3288:273::-;3356:6;3409:2;3397:9;3388:7;3384:23;3380:32;3377:52;;;3425:1;3422;3415:12;3377:52;3457:9;3451:16;3507:4;3500:5;3496:16;3489:5;3486:27;3476:55;;3527:1;3524;3517:12;3566:127;3627:10;3622:3;3618:20;3615:1;3608:31;3658:4;3655:1;3648:15;3682:4;3679:1;3672:15;3698:195;3736:4;3773;3770:1;3766:12;3805:4;3802:1;3798:12;3830:3;3825;3822:12;3819:38;;;3837:18;;:::i;:::-;3874:13;;;3698:195;-1:-1:-1;;;3698:195:203:o;3898:422::-;3987:1;4030:5;3987:1;4044:270;4065:7;4055:8;4052:21;4044:270;;;4124:4;4120:1;4116:6;4112:17;4106:4;4103:27;4100:53;;;4133:18;;:::i;:::-;4183:7;4173:8;4169:22;4166:55;;;4203:16;;;;4166:55;4282:22;;;;4242:15;;;;4044:270;;;4048:3;3898:422;;;;;:::o;4325:806::-;4374:5;4404:8;4394:80;;-1:-1:-1;4445:1:203;4459:5;;4394:80;4493:4;4483:76;;-1:-1:-1;4530:1:203;4544:5;;4483:76;4575:4;4593:1;4588:59;;;;4661:1;4656:130;;;;4568:218;;4588:59;4618:1;4609:10;;4632:5;;;4656:130;4693:3;4683:8;4680:17;4677:43;;;4700:18;;:::i;:::-;-1:-1:-1;;4756:1:203;4742:16;;4771:5;;4568:218;;4870:2;4860:8;4857:16;4851:3;4845:4;4842:13;4838:36;4832:2;4822:8;4819:16;4814:2;4808:4;4805:12;4801:35;4798:77;4795:159;;;-1:-1:-1;4907:19:203;;;4939:5;;4795:159;4986:34;5011:8;5005:4;4986:34;:::i;:::-;5056:6;5052:1;5048:6;5044:19;5035:7;5032:32;5029:58;;;5067:18;;:::i;:::-;5105:20;;4325:806;-1:-1:-1;;;4325:806:203:o;5136:140::-;5194:5;5223:47;5264:4;5254:8;5250:19;5244:4;5223:47;:::i;5671:184::-;5741:6;5794:2;5782:9;5773:7;5769:23;5765:32;5762:52;;;5810:1;5807;5800:12;5762:52;-1:-1:-1;5833:16:203;;5671:184;-1:-1:-1;5671:184:203:o;6871:202::-;6938:6;6991:2;6979:9;6970:7;6966:23;6962:32;6959:52;;;7007:1;7004;6997:12;6959:52;7030:37;7057:9;7030:37;:::i;8254:274::-;8383:3;8421:6;8415:13;8437:53;8483:6;8478:3;8471:4;8463:6;8459:17;8437:53;:::i;:::-;8506:16;;;;;8254:274;-1:-1:-1;;8254:274:203:o;:::-;884:14397:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/strategies/MeroTriHopCvx.sol", "type": "contract", "deployment": {"address": "0x8870898A85b03f030f1B893683C73015529838ad", "chainid": "1", "blockHeight": 15323693}}