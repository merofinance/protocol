{"abi": [{"inputs": [{"internalType": "contract IAddressProvider", "name": "_addressProvider", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "lpGauge_", "type": "address"}], "name": "LpGaugeUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Staked", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Unstaked", "type": "event"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "accountInfo", "outputs": [{"internalType": "uint128", "name": "balance", "type": "uint128"}, {"internalType": "uint128", "name": "actionLockedBalance", "type": "uint128"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "actionLockedBalanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "addressProvider", "outputs": [{"internalType": "contract IAddressProvider", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "decreaseActionLockedBalance", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "getPoolTotalStaked", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getStakedByActions", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getToken", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "increaseActionLockedBalance", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_token", "type": "address"}], "name": "initialize", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "lpGauge_", "type": "address"}], "name": "initializeLpGauge", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "isPaused", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "lpGauge", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "pause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "poolCheckpoint", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "updateEndTime", "type": "uint256"}], "name": "poolCheckpoint", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "roleManager", "outputs": [{"internalType": "contract IRoleManager", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "stake", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "stakeFor", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "stakedAndActionLockedBalanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "token", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "src", "type": "address"}, {"internalType": "address", "name": "dst", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "unpause", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "unstake", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "src", "type": "address"}, {"internalType": "address", "name": "dst", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "unstakeFor", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "lpGauge_", "type": "address"}], "name": "updateLpGauge", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol", "109": "contracts/utils/Pausable.sol", "116": "interfaces/IAddressProvider.sol", "119": "interfaces/IController.sol", "121": "interfaces/IERC20Full.sol", "122": "interfaces/IFeeBurner.sol", "123": "interfaces/IGasBank.sol", "127": "interfaces/IRoleManager.sol", "128": "interfaces/IStakerVault.sol", "129": "interfaces/ISwapperRouter.sol", "130": "interfaces/IVault.sol", "131": "interfaces/IVaultReserve.sol", "133": "interfaces/actions/IAction.sol", "140": "interfaces/oracles/IOracleProvider.sol", "143": "interfaces/pool/ILiquidityPool.sol", "147": "interfaces/strategies/IStrategy.sol", "149": "interfaces/tokenomics/IInflationManager.sol", "151": "interfaces/tokenomics/ILpGauge.sol", "17": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol", "182": "libraries/AddressProviderHelpers.sol", "183": "libraries/AddressProviderKeys.sol", "188": "libraries/Errors.sol", "189": "libraries/Roles.sol", "19": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol", "190": "libraries/ScaledMath.sol", "191": "libraries/UncheckedMath.sol", "20": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol", "38": "contracts/StakerVault.sol", "39": "contracts/access/Authorization.sol", "40": "contracts/access/AuthorizationBase.sol"}, "ast": {"absolutePath": "contracts/StakerVault.sol", "exportedSymbols": {"Address": [37332], "AddressProviderHelpers": [34461], "AddressProviderKeys": [32219], "AddressProviderMeta": [32299], "AddressUpgradeable": [43598], "Authorization": [5500], "AuthorizationBase": [5607], "Controller": [1557], "Error": [35631], "IAction": [33739], "IAddressProvider": [31927], "IController": [33646], "IERC20": [34600], "IERC20Full": [36621], "IERC20Upgradeable": [43676], "IFeeBurner": [36599], "IGasBank": [31977], "IInflationManager": [34231], "ILiquidityPool": [33980], "ILpGauge": [36809], "ILpToken": [36289], "IMeroToken": [43040], "IOracleProvider": [32180], "IRewardHandler": [33658], "IRewardsGauge": [36819], "IRoleManager": [36932], "IStakerVault": [32153], "IStrategy": [40861], "ISwapperRouter": [41854], "IVault": [36776], "IVaultReserve": [43341], "Initializable": [31611], "LiquidityPool": [14538], "Pausable": [28700], "Roles": [33585], "SafeCast": [38448], "SafeERC20": [34824], "ScaledMath": [36376], "StakerVault": [5470], "UncheckedMath": [34522]}, "id": 5471, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 4241, "literals": ["solidity", "0.8", ".10"], "nodeType": "PragmaDirective", "src": "45:23:38"}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 4242, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 34825, "src": "70:65:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 4243, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 34601, "src": "136:56:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol", "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol", "id": 4244, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 31612, "src": "193:75:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ScaledMath.sol", "file": "../libraries/ScaledMath.sol", "id": 4245, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 36377, "src": "270:37:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Errors.sol", "file": "../libraries/Errors.sol", "id": 4246, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 35632, "src": "308:33:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/AddressProviderHelpers.sol", "file": "../libraries/AddressProviderHelpers.sol", "id": 4247, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 34462, "src": "342:49:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/UncheckedMath.sol", "file": "../libraries/UncheckedMath.sol", "id": 4248, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 34523, "src": "392:40:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IStakerVault.sol", "file": "../interfaces/IStakerVault.sol", "id": 4249, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 32154, "src": "434:40:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IAddressProvider.sol", "file": "../interfaces/IAddressProvider.sol", "id": 4250, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 31928, "src": "475:44:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IVault.sol", "file": "../interfaces/IVault.sol", "id": 4251, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 36777, "src": "520:34:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/tokenomics/IRewardsGauge.sol", "file": "../interfaces/tokenomics/IRewardsGauge.sol", "id": 4252, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 36820, "src": "555:52:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/pool/ILiquidityPool.sol", "file": "../interfaces/pool/ILiquidityPool.sol", "id": 4253, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 33981, "src": "608:47:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/tokenomics/ILpGauge.sol", "file": "../interfaces/tokenomics/ILpGauge.sol", "id": 4254, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 36810, "src": "656:47:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IERC20Full.sol", "file": "../interfaces/IERC20Full.sol", "id": 4255, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 36622, "src": "704:38:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/Controller.sol", "file": "./Controller.sol", "id": 4256, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 1558, "src": "744:26:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/pool/LiquidityPool.sol", "file": "./pool/LiquidityPool.sol", "id": 4257, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 14539, "src": "771:34:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/access/Authorization.sol", "file": "./access/Authorization.sol", "id": 4258, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 5501, "src": "806:36:38", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/utils/Pausable.sol", "file": "./utils/Pausable.sol", "id": 4259, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5471, "sourceUnit": 28701, "src": "843:30:38", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 4261, "name": "IStakerVault", "nodeType": "IdentifierPath", "referencedDeclaration": 32153, "src": "1184:12:38"}, "id": 4262, "nodeType": "InheritanceSpecifier", "src": "1184:12:38"}, {"baseName": {"id": 4263, "name": "Authorization", "nodeType": "IdentifierPath", "referencedDeclaration": 5500, "src": "1198:13:38"}, "id": 4264, "nodeType": "InheritanceSpecifier", "src": "1198:13:38"}, {"baseName": {"id": 4265, "name": "Pausable", "nodeType": "IdentifierPath", "referencedDeclaration": 28700, "src": "1213:8:38"}, "id": 4266, "nodeType": "InheritanceSpecifier", "src": "1213:8:38"}, {"baseName": {"id": 4267, "name": "Initializable", "nodeType": "IdentifierPath", "referencedDeclaration": 31611, "src": "1223:13:38"}, "id": 4268, "nodeType": "InheritanceSpecifier", "src": "1223:13:38"}], "canonicalName": "StakerVault", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 4260, "nodeType": "StructuredDocumentation", "src": "875:284:38", "text": " @notice This contract handles staked tokens from Mero pools\n However, note that this is NOT an ERC-20 compliant contract and these\n tokens should never be integrated with any protocol assuming ERC-20 compliant\n tokens\n @dev When paused, allows only withdraw/unstake"}, "fullyImplemented": true, "id": 5470, "linearizedBaseContracts": [5470, 31611, 28700, 5500, 5607, 32153], "name": "StakerVault", "nameLocation": "1169:11:38", "nodeType": "ContractDefinition", "nodes": [{"id": 4272, "libraryName": {"id": 4269, "name": "AddressProviderHelpers", "nodeType": "IdentifierPath", "referencedDeclaration": 34461, "src": "1249:22:38"}, "nodeType": "UsingForDirective", "src": "1243:50:38", "typeName": {"id": 4271, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4270, "name": "IAddressProvider", "nodeType": "IdentifierPath", "referencedDeclaration": 31927, "src": "1276:16:38"}, "referencedDeclaration": 31927, "src": "1276:16:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}}, {"id": 4276, "libraryName": {"id": 4273, "name": "SafeERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 34824, "src": "1304:9:38"}, "nodeType": "UsingForDirective", "src": "1298:27:38", "typeName": {"id": 4275, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4274, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 34600, "src": "1318:6:38"}, "referencedDeclaration": 34600, "src": "1318:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}}, {"id": 4279, "libraryName": {"id": 4277, "name": "ScaledMath", "nodeType": "IdentifierPath", "referencedDeclaration": 36376, "src": "1336:10:38"}, "nodeType": "UsingForDirective", "src": "1330:29:38", "typeName": {"id": 4278, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1351:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 4282, "libraryName": {"id": 4280, "name": "UncheckedMath", "nodeType": "IdentifierPath", "referencedDeclaration": 34522, "src": "1370:13:38"}, "nodeType": "UsingForDirective", "src": "1364:32:38", "typeName": {"id": 4281, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1388:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"canonicalName": "StakerVault.AccountInfo", "id": 4287, "members": [{"constant": false, "id": 4284, "mutability": "mutable", "name": "balance", "nameLocation": "1439:7:38", "nodeType": "VariableDeclaration", "scope": 4287, "src": "1431:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 4283, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "1431:7:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}, {"constant": false, "id": 4286, "mutability": "mutable", "name": "actionLockedBalance", "nameLocation": "1464:19:38", "nodeType": "VariableDeclaration", "scope": 4287, "src": "1456:27:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 4285, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "1456:7:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}], "name": "AccountInfo", "nameLocation": "1409:11:38", "nodeType": "StructDefinition", "scope": 5470, "src": "1402:88:38", "visibility": "public"}, {"baseFunctions": [32152], "constant": false, "functionSelector": "c5ec7874", "id": 4289, "mutability": "mutable", "name": "lpGauge", "nameLocation": "1511:7:38", "nodeType": "VariableDeclaration", "scope": 5470, "src": "1496:22:38", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4288, "name": "address", "nodeType": "ElementaryTypeName", "src": "1496:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "2954018c", "id": 4292, "mutability": "immutable", "name": "addressProvider", "nameLocation": "1559:15:38", "nodeType": "VariableDeclaration", "scope": 5470, "src": "1525:49:38", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}, "typeName": {"id": 4291, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4290, "name": "IAddressProvider", "nodeType": "IdentifierPath", "referencedDeclaration": 31927, "src": "1525:16:38"}, "referencedDeclaration": 31927, "src": "1525:16:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "visibility": "public"}, {"constant": false, "functionSelector": "fc0c546a", "id": 4294, "mutability": "mutable", "name": "token", "nameLocation": "1596:5:38", "nodeType": "VariableDeclaration", "scope": 5470, "src": "1581:20:38", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4293, "name": "address", "nodeType": "ElementaryTypeName", "src": "1581:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "a7310b58", "id": 4299, "mutability": "mutable", "name": "accountInfo", "nameLocation": "1647:11:38", "nodeType": "VariableDeclaration", "scope": 5470, "src": "1608:50:38", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo)"}, "typeName": {"id": 4298, "keyType": {"id": 4295, "name": "address", "nodeType": "ElementaryTypeName", "src": "1616:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1608:31:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo)"}, "valueType": {"id": 4297, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4296, "name": "AccountInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 4287, "src": "1627:11:38"}, "referencedDeclaration": 4287, "src": "1627:11:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage_ptr", "typeString": "struct StakerVault.AccountInfo"}}}, "visibility": "public"}, {"constant": false, "id": 4305, "mutability": "mutable", "name": "_allowances", "nameLocation": "1722:11:38", "nodeType": "VariableDeclaration", "scope": 5470, "src": "1665:68:38", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "typeName": {"id": 4304, "keyType": {"id": 4300, "name": "address", "nodeType": "ElementaryTypeName", "src": "1673:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1665:47:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "valueType": {"id": 4303, "keyType": {"id": 4301, "name": "address", "nodeType": "ElementaryTypeName", "src": "1692:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1684:27:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 4302, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1703:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "internal"}, {"constant": false, "id": 4307, "mutability": "mutable", "name": "_poolTotalStaked", "nameLocation": "1817:16:38", "nodeType": "VariableDeclaration", "scope": 5470, "src": "1801:32:38", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4306, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1801:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"anonymous": false, "id": 4311, "name": "LpGaugeUpdated", "nameLocation": "1846:14:38", "nodeType": "EventDefinition", "parameters": {"id": 4310, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4309, "indexed": false, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "1869:8:38", "nodeType": "VariableDeclaration", "scope": 4311, "src": "1861:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4308, "name": "address", "nodeType": "ElementaryTypeName", "src": "1861:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1860:18:38"}, "src": "1840:39:38"}, {"body": {"id": 4326, "nodeType": "Block", "src": "1993:51:38", "statements": [{"expression": {"id": 4324, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4322, "name": "addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "2003:15:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4323, "name": "_addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4314, "src": "2021:16:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "src": "2003:34:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 4325, "nodeType": "ExpressionStatement", "src": "2003:34:38"}]}, "id": 4327, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4317, "name": "_addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4314, "src": "1954:16:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 4318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRoleManager", "nodeType": "MemberAccess", "referencedDeclaration": 34403, "src": "1954:31:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IAddressProvider_$31927_$returns$_t_contract$_IRoleManager_$36932_$bound_to$_t_contract$_IAddressProvider_$31927_$", "typeString": "function (contract IAddressProvider) view returns (contract IRoleManager)"}}, "id": 4319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1954:33:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRoleManager_$36932", "typeString": "contract IRoleManager"}}], "id": 4320, "kind": "baseConstructorSpecifier", "modifierName": {"id": 4316, "name": "Authorization", "nodeType": "IdentifierPath", "referencedDeclaration": 5500, "src": "1940:13:38"}, "nodeType": "ModifierInvocation", "src": "1940:48:38"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 4315, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4314, "mutability": "mutable", "name": "_addressProvider", "nameLocation": "1914:16:38", "nodeType": "VariableDeclaration", "scope": 4327, "src": "1897:33:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}, "typeName": {"id": 4313, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4312, "name": "IAddressProvider", "nodeType": "IdentifierPath", "referencedDeclaration": 31927, "src": "1897:16:38"}, "referencedDeclaration": 31927, "src": "1897:16:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "visibility": "internal"}], "src": "1896:35:38"}, "returnParameters": {"id": 4321, "nodeType": "ParameterList", "parameters": [], "src": "1993:0:38"}, "scope": 5470, "src": "1885:159:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [32012], "body": {"id": 4339, "nodeType": "Block", "src": "2116:31:38", "statements": [{"expression": {"id": 4337, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4335, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "2126:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4336, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4329, "src": "2134:6:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2126:14:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4338, "nodeType": "ExpressionStatement", "src": "2126:14:38"}]}, "functionSelector": "c4d66de8", "id": 4340, "implemented": true, "kind": "function", "modifiers": [{"id": 4333, "kind": "modifierInvocation", "modifierName": {"id": 4332, "name": "initializer", "nodeType": "IdentifierPath", "referencedDeclaration": 31585, "src": "2104:11:38"}, "nodeType": "ModifierInvocation", "src": "2104:11:38"}], "name": "initialize", "nameLocation": "2059:10:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4331, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2095:8:38"}, "parameters": {"id": 4330, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4329, "mutability": "mutable", "name": "_token", "nameLocation": "2078:6:38", "nodeType": "VariableDeclaration", "scope": 4340, "src": "2070:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4328, "name": "address", "nodeType": "ElementaryTypeName", "src": "2070:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2069:16:38"}, "returnParameters": {"id": 4334, "nodeType": "ParameterList", "parameters": [], "src": "2116:0:38"}, "scope": 5470, "src": "2050:97:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32017], "body": {"id": 4371, "nodeType": "Block", "src": "2231:165:38", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4349, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "2249:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4352, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2268:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4351, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2260:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4350, "name": "address", "nodeType": "ElementaryTypeName", "src": "2260:7:38", "typeDescriptions": {}}}, "id": 4353, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2260:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2249:21:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4355, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "2272:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ROLE_EXISTS", "nodeType": "MemberAccess", "referencedDeclaration": 35411, "src": "2272:17:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4348, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2241:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2241:49:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4358, "nodeType": "ExpressionStatement", "src": "2241:49:38"}, {"expression": {"id": 4361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4359, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "2300:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4360, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4342, "src": "2310:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2300:18:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4362, "nodeType": "ExpressionStatement", "src": "2300:18:38"}, {"expression": {"arguments": [{"id": 4368, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "2383:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4363, "name": "addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "2328:15:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 4365, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getInflationManager", "nodeType": "MemberAccess", "referencedDeclaration": 34441, "src": "2328:35:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IAddressProvider_$31927_$returns$_t_contract$_IInflationManager_$34231_$bound_to$_t_contract$_IAddressProvider_$31927_$", "typeString": "function (contract IAddressProvider) view returns (contract IInflationManager)"}}, "id": 4366, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2328:37:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IInflationManager_$34231", "typeString": "contract IInflationManager"}}, "id": 4367, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "addGaugeForVault", "nodeType": "MemberAccess", "referencedDeclaration": 34057, "src": "2328:54:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$", "typeString": "function (address) external"}}, "id": 4369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2328:61:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4370, "nodeType": "ExpressionStatement", "src": "2328:61:38"}]}, "functionSelector": "7aa49725", "id": 4372, "implemented": true, "kind": "function", "modifiers": [{"id": 4346, "kind": "modifierInvocation", "modifierName": {"id": 4345, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 5543, "src": "2216:14:38"}, "nodeType": "ModifierInvocation", "src": "2216:14:38"}], "name": "initializeLpGauge", "nameLocation": "2162:17:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4344, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2207:8:38"}, "parameters": {"id": 4343, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4342, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "2188:8:38", "nodeType": "VariableDeclaration", "scope": 4372, "src": "2180:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4341, "name": "address", "nodeType": "ElementaryTypeName", "src": "2180:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2179:18:38"}, "returnParameters": {"id": 4347, "nodeType": "ParameterList", "parameters": [], "src": "2231:0:38"}, "scope": 5470, "src": "2153:243:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32085], "body": {"id": 4413, "nodeType": "Block", "src": "2476:246:38", "statements": [{"expression": {"arguments": [{"id": 4386, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "2494:28:38", "subExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 4382, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4374, "src": "2504:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4381, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "2495:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4383, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2495:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "killed", "nodeType": "MemberAccess", "referencedDeclaration": 36808, "src": "2495:25:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$", "typeString": "function () view external returns (bool)"}}, "id": 4385, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2495:27:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4387, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "2524:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4388, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GAUGE_KILLED", "nodeType": "MemberAccess", "referencedDeclaration": 35528, "src": "2524:18:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4380, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2486:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4389, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2486:57:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4390, "nodeType": "ExpressionStatement", "src": "2486:57:38"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 4392, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "2562:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4391, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "2553:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4393, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2553:17:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4394, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "kill", "nodeType": "MemberAccess", "referencedDeclaration": 36781, "src": "2553:22:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$__$returns$__$", "typeString": "function () external"}}, "id": 4395, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2553:24:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4396, "nodeType": "ExpressionStatement", "src": "2553:24:38"}, {"expression": {"id": 4399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4397, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "2587:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4398, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4374, "src": "2597:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2587:18:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4400, "nodeType": "ExpressionStatement", "src": "2587:18:38"}, {"expression": {"arguments": [{"id": 4406, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "2670:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4401, "name": "addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "2615:15:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 4403, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getInflationManager", "nodeType": "MemberAccess", "referencedDeclaration": 34441, "src": "2615:35:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IAddressProvider_$31927_$returns$_t_contract$_IInflationManager_$34231_$bound_to$_t_contract$_IAddressProvider_$31927_$", "typeString": "function (contract IAddressProvider) view returns (contract IInflationManager)"}}, "id": 4404, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2615:37:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IInflationManager_$34231", "typeString": "contract IInflationManager"}}, "id": 4405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "addGaugeForVault", "nodeType": "MemberAccess", "referencedDeclaration": 34057, "src": "2615:54:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$", "typeString": "function (address) external"}}, "id": 4407, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2615:61:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4408, "nodeType": "ExpressionStatement", "src": "2615:61:38"}, {"eventCall": {"arguments": [{"id": 4410, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4374, "src": "2706:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4409, "name": "LpGaugeUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4311, "src": "2691:14:38", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 4411, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2691:24:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4412, "nodeType": "EmitStatement", "src": "2686:29:38"}]}, "functionSelector": "756b2693", "id": 4414, "implemented": true, "kind": "function", "modifiers": [{"id": 4378, "kind": "modifierInvocation", "modifierName": {"id": 4377, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 5543, "src": "2461:14:38"}, "nodeType": "ModifierInvocation", "src": "2461:14:38"}], "name": "updateLpGauge", "nameLocation": "2411:13:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4376, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2452:8:38"}, "parameters": {"id": 4375, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4374, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "2433:8:38", "nodeType": "VariableDeclaration", "scope": 4414, "src": "2425:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4373, "name": "address", "nodeType": "ElementaryTypeName", "src": "2425:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2424:18:38"}, "returnParameters": {"id": 4379, "nodeType": "ParameterList", "parameters": [], "src": "2476:0:38"}, "scope": 5470, "src": "2402:320:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32057], "body": {"id": 4541, "nodeType": "Block", "src": "3087:868:38", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4431, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4426, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4417, "src": "3105:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4429, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3124:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4428, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3116:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4427, "name": "address", "nodeType": "ElementaryTypeName", "src": "3116:7:38", "typeDescriptions": {}}}, "id": 4430, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3116:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3105:21:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4432, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "3128:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS_NOT_ALLOWED", "nodeType": "MemberAccess", "referencedDeclaration": 35426, "src": "3128:30:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4425, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3097:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3097:62:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4435, "nodeType": "ExpressionStatement", "src": "3097:62:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4440, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4437, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3177:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4438, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3177:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 4439, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4417, "src": "3191:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3177:21:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4441, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "3200:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4442, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SELF_TRANSFER_NOT_ALLOWED", "nodeType": "MemberAccess", "referencedDeclaration": 35423, "src": "3200:31:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4436, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3169:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4443, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3169:63:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4444, "nodeType": "ExpressionStatement", "src": "3169:63:38"}, {"assignments": [4447], "declarations": [{"constant": false, "id": 4447, "mutability": "mutable", "name": "accountInfo_", "nameLocation": "3261:12:38", "nodeType": "VariableDeclaration", "scope": 4541, "src": "3242:31:38", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo"}, "typeName": {"id": 4446, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4445, "name": "AccountInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 4287, "src": "3242:11:38"}, "referencedDeclaration": 4287, "src": "3242:11:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage_ptr", "typeString": "struct StakerVault.AccountInfo"}}, "visibility": "internal"}], "id": 4452, "initialValue": {"baseExpression": {"id": 4448, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "3276:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4451, "indexExpression": {"expression": {"id": 4449, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3288:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3288:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3276:23:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3242:57:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4457, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4454, "name": "accountInfo_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4447, "src": "3317:12:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo memory"}}, "id": 4455, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "3317:20:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 4456, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4419, "src": "3341:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3317:30:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4458, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "3349:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4459, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INSUFFICIENT_BALANCE", "nodeType": "MemberAccess", "referencedDeclaration": 35384, "src": "3349:26:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4453, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3309:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4460, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3309:67:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4461, "nodeType": "ExpressionStatement", "src": "3309:67:38"}, {"assignments": [4464], "declarations": [{"constant": false, "id": 4464, "mutability": "mutable", "name": "pool", "nameLocation": "3402:4:38", "nodeType": "VariableDeclaration", "scope": 4541, "src": "3387:19:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}, "typeName": {"id": 4463, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4462, "name": "ILiquidityPool", "nodeType": "IdentifierPath", "referencedDeclaration": 33980, "src": "3387:14:38"}, "referencedDeclaration": 33980, "src": "3387:14:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "visibility": "internal"}], "id": 4469, "initialValue": {"arguments": [{"id": 4467, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "3441:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 4465, "name": "addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "3409:15:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 4466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolForToken", "nodeType": "MemberAccess", "referencedDeclaration": 31706, "src": "3409:31:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_ILiquidityPool_$33980_$", "typeString": "function (address) view external returns (contract ILiquidityPool)"}}, "id": 4468, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3409:38:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "nodeType": "VariableDeclarationStatement", "src": "3387:60:38"}, {"expression": {"arguments": [{"expression": {"id": 4473, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3484:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3484:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4475, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4417, "src": "3496:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4476, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4419, "src": "3505:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4470, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4464, "src": "3457:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "id": 4472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "handleLpTokenTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 33868, "src": "3457:26:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256) external"}}, "id": 4477, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3457:55:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4478, "nodeType": "ExpressionStatement", "src": "3457:55:38"}, {"assignments": [4480], "declarations": [{"constant": false, "id": 4480, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "3531:8:38", "nodeType": "VariableDeclaration", "scope": 4541, "src": "3523:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4479, "name": "address", "nodeType": "ElementaryTypeName", "src": "3523:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4482, "initialValue": {"id": 4481, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "3542:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "3523:26:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4488, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4483, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4480, "src": "3563:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4486, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3583:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4485, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3575:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4484, "name": "address", "nodeType": "ElementaryTypeName", "src": "3575:7:38", "typeDescriptions": {}}}, "id": 4487, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3575:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3563:22:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4505, "nodeType": "IfStatement", "src": "3559:154:38", "trueBody": {"id": 4504, "nodeType": "Block", "src": "3587:126:38", "statements": [{"expression": {"arguments": [{"expression": {"id": 4493, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3635:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4494, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3635:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 4490, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4480, "src": "3610:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4489, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "3601:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4491, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3601:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "userCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36796, "src": "3601:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) external returns (bool)"}}, "id": 4495, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3601:45:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4496, "nodeType": "ExpressionStatement", "src": "3601:45:38"}, {"expression": {"arguments": [{"id": 4501, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4417, "src": "3694:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 4498, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4480, "src": "3669:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4497, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "3660:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4499, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3660:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4500, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "userCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36796, "src": "3660:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) external returns (bool)"}}, "id": 4502, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3660:42:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4503, "nodeType": "ExpressionStatement", "src": "3660:42:38"}]}}, {"expression": {"id": 4522, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4506, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "3723:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4509, "indexExpression": {"expression": {"id": 4507, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3735:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4508, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3735:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3723:23:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4510, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "3723:31:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 4519, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4419, "src": "3821:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 4515, "name": "accountInfo_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4447, "src": "3786:12:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo memory"}}, "id": 4516, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "3786:20:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 4514, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3778:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 4513, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3778:7:38", "typeDescriptions": {}}}, "id": 4517, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3778:29:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "uncheckedSub", "nodeType": "MemberAccess", "referencedDeclaration": 34506, "src": "3778:42:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 4520, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3778:50:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4512, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3757:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 4511, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "3757:7:38", "typeDescriptions": {}}}, "id": 4521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3757:81:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "3723:115:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 4523, "nodeType": "ExpressionStatement", "src": "3723:115:38"}, {"expression": {"id": 4532, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4524, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "3848:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4526, "indexExpression": {"id": 4525, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4417, "src": "3860:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3848:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4527, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "3848:28:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"arguments": [{"id": 4530, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4419, "src": "3888:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4529, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3880:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 4528, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "3880:7:38", "typeDescriptions": {}}}, "id": 4531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3880:15:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "3848:47:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 4533, "nodeType": "ExpressionStatement", "src": "3848:47:38"}, {"eventCall": {"arguments": [{"expression": {"id": 4535, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3920:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4536, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3920:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4537, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4417, "src": "3932:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4538, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4419, "src": "3941:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4534, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31999, "src": "3911:8:38", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 4539, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3911:37:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4540, "nodeType": "EmitStatement", "src": "3906:42:38"}]}, "documentation": {"id": 4415, "nodeType": "StructuredDocumentation", "src": "2728:275:38", "text": " @notice Transfer staked tokens to an account.\n @dev This is not an ERC20 transfer, as tokens are still owned by this contract, but fees get updated in the LP pool.\n @param account Address to transfer to.\n @param amount Amount to transfer."}, "functionSelector": "a9059cbb", "id": 4542, "implemented": true, "kind": "function", "modifiers": [{"id": 4423, "kind": "modifierInvocation", "modifierName": {"id": 4422, "name": "notPaused", "nodeType": "IdentifierPath", "referencedDeclaration": 28656, "src": "3077:9:38"}, "nodeType": "ModifierInvocation", "src": "3077:9:38"}], "name": "transfer", "nameLocation": "3017:8:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4421, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3068:8:38"}, "parameters": {"id": 4420, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4417, "mutability": "mutable", "name": "account", "nameLocation": "3034:7:38", "nodeType": "VariableDeclaration", "scope": 4542, "src": "3026:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4416, "name": "address", "nodeType": "ElementaryTypeName", "src": "3026:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4419, "mutability": "mutable", "name": "amount", "nameLocation": "3051:6:38", "nodeType": "VariableDeclaration", "scope": 4542, "src": "3043:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4418, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3043:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3025:33:38"}, "returnParameters": {"id": 4424, "nodeType": "ParameterList", "parameters": [], "src": "3087:0:38"}, "scope": 5470, "src": "3008:947:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32066], "body": {"id": 4728, "nodeType": "Block", "src": "4405:1438:38", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 4568, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4556, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "4423:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4559, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4438:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4558, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4430:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4557, "name": "address", "nodeType": "ElementaryTypeName", "src": "4430:7:38", "typeDescriptions": {}}}, "id": 4560, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4430:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4423:17:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4562, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4547, "src": "4444:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4459:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4564, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4451:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4563, "name": "address", "nodeType": "ElementaryTypeName", "src": "4451:7:38", "typeDescriptions": {}}}, "id": 4566, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4451:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4444:17:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4423:38:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4569, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "4463:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4570, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS_NOT_ALLOWED", "nodeType": "MemberAccess", "referencedDeclaration": 35426, "src": "4463:30:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4555, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4415:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4571, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4415:79:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4572, "nodeType": "ExpressionStatement", "src": "4415:79:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4574, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "4555:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 4575, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4547, "src": "4562:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4555:10:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4577, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "4567:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4578, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SAME_ADDRESS_NOT_ALLOWED", "nodeType": "MemberAccess", "referencedDeclaration": 35420, "src": "4567:30:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4573, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4547:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4547:51:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4580, "nodeType": "ExpressionStatement", "src": "4547:51:38"}, {"assignments": [4582], "declarations": [{"constant": false, "id": 4582, "mutability": "mutable", "name": "startingAllowance", "nameLocation": "4681:17:38", "nodeType": "VariableDeclaration", "scope": 4728, "src": "4673:25:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4581, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4673:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4583, "nodeType": "VariableDeclarationStatement", "src": "4673:25:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4587, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4584, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4712:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4712:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 4586, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "4726:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4712:17:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 4606, "nodeType": "Block", "src": "4799:73:38", "statements": [{"expression": {"id": 4604, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4597, "name": "startingAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4582, "src": "4813:17:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"baseExpression": {"id": 4598, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4305, "src": "4833:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 4600, "indexExpression": {"id": 4599, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "4845:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4833:16:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 4603, "indexExpression": {"expression": {"id": 4601, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4850:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4602, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4850:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4833:28:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4813:48:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4605, "nodeType": "ExpressionStatement", "src": "4813:48:38"}]}, "id": 4607, "nodeType": "IfStatement", "src": "4708:164:38", "trueBody": {"id": 4596, "nodeType": "Block", "src": "4731:62:38", "statements": [{"expression": {"id": 4594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4588, "name": "startingAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4582, "src": "4745:17:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"arguments": [{"id": 4591, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4770:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 4590, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4770:7:38", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 4589, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "4765:4:38", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 4592, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4765:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 4593, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "4765:17:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4745:37:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4595, "nodeType": "ExpressionStatement", "src": "4745:37:38"}]}}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4611, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4609, "name": "startingAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4582, "src": "4889:17:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 4610, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4549, "src": "4910:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4889:27:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4612, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "4918:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INSUFFICIENT_ALLOWANCE", "nodeType": "MemberAccess", "referencedDeclaration": 35381, "src": "4918:28:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4608, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4881:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4881:66:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4615, "nodeType": "ExpressionStatement", "src": "4881:66:38"}, {"assignments": [4618], "declarations": [{"constant": false, "id": 4618, "mutability": "mutable", "name": "accountInfo_", "nameLocation": "4977:12:38", "nodeType": "VariableDeclaration", "scope": 4728, "src": "4958:31:38", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo"}, "typeName": {"id": 4617, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4616, "name": "AccountInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 4287, "src": "4958:11:38"}, "referencedDeclaration": 4287, "src": "4958:11:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage_ptr", "typeString": "struct StakerVault.AccountInfo"}}, "visibility": "internal"}], "id": 4622, "initialValue": {"baseExpression": {"id": 4619, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "4992:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4621, "indexExpression": {"id": 4620, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "5004:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4992:16:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "4958:50:38"}, {"assignments": [4624], "declarations": [{"constant": false, "id": 4624, "mutability": "mutable", "name": "srcTokens", "nameLocation": "5026:9:38", "nodeType": "VariableDeclaration", "scope": 4728, "src": "5018:17:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4623, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5018:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4627, "initialValue": {"expression": {"id": 4625, "name": "accountInfo_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4618, "src": "5038:12:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo memory"}}, "id": 4626, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "5038:20:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "VariableDeclarationStatement", "src": "5018:40:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4631, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4629, "name": "srcTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4624, "src": "5076:9:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 4630, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4549, "src": "5089:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5076:19:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4632, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "5097:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INSUFFICIENT_BALANCE", "nodeType": "MemberAccess", "referencedDeclaration": 35384, "src": "5097:26:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4628, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5068:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4634, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5068:56:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4635, "nodeType": "ExpressionStatement", "src": "5068:56:38"}, {"assignments": [4637], "declarations": [{"constant": false, "id": 4637, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "5143:8:38", "nodeType": "VariableDeclaration", "scope": 4728, "src": "5135:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4636, "name": "address", "nodeType": "ElementaryTypeName", "src": "5135:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4639, "initialValue": {"id": 4638, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "5154:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "5135:26:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4640, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4637, "src": "5175:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4643, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5195:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4642, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5187:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4641, "name": "address", "nodeType": "ElementaryTypeName", "src": "5187:7:38", "typeDescriptions": {}}}, "id": 4644, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5187:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5175:22:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4661, "nodeType": "IfStatement", "src": "5171:143:38", "trueBody": {"id": 4660, "nodeType": "Block", "src": "5199:115:38", "statements": [{"expression": {"arguments": [{"id": 4650, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "5247:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 4647, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4637, "src": "5222:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4646, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "5213:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5213:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4649, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "userCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36796, "src": "5213:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) external returns (bool)"}}, "id": 4651, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5213:38:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4652, "nodeType": "ExpressionStatement", "src": "5213:38:38"}, {"expression": {"arguments": [{"id": 4657, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4547, "src": "5299:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 4654, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4637, "src": "5274:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4653, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "5265:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4655, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5265:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4656, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "userCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36796, "src": "5265:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) external returns (bool)"}}, "id": 4658, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5265:38:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4659, "nodeType": "ExpressionStatement", "src": "5265:38:38"}]}}, {"assignments": [4664], "declarations": [{"constant": false, "id": 4664, "mutability": "mutable", "name": "pool", "nameLocation": "5338:4:38", "nodeType": "VariableDeclaration", "scope": 4728, "src": "5323:19:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}, "typeName": {"id": 4663, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4662, "name": "ILiquidityPool", "nodeType": "IdentifierPath", "referencedDeclaration": 33980, "src": "5323:14:38"}, "referencedDeclaration": 33980, "src": "5323:14:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "visibility": "internal"}], "id": 4669, "initialValue": {"arguments": [{"id": 4667, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "5377:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 4665, "name": "addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "5345:15:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 4666, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolForToken", "nodeType": "MemberAccess", "referencedDeclaration": 31706, "src": "5345:31:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_ILiquidityPool_$33980_$", "typeString": "function (address) view external returns (contract ILiquidityPool)"}}, "id": 4668, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5345:38:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "nodeType": "VariableDeclarationStatement", "src": "5323:60:38"}, {"expression": {"arguments": [{"id": 4673, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "5420:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4674, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4547, "src": "5425:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4675, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4549, "src": "5430:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4670, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4664, "src": "5393:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "id": 4672, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "handleLpTokenTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 33868, "src": "5393:26:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256) external"}}, "id": 4676, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5393:44:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4677, "nodeType": "ExpressionStatement", "src": "5393:44:38"}, {"expression": {"id": 4689, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4678, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "5484:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4680, "indexExpression": {"id": 4679, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "5496:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5484:16:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4681, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "5484:24:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 4686, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4549, "src": "5542:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4684, "name": "srcTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4624, "src": "5519:9:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4685, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "uncheckedSub", "nodeType": "MemberAccess", "referencedDeclaration": 34506, "src": "5519:22:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 4687, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5519:30:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4683, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5511:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 4682, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "5511:7:38", "typeDescriptions": {}}}, "id": 4688, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5511:39:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "5484:66:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 4690, "nodeType": "ExpressionStatement", "src": "5484:66:38"}, {"expression": {"id": 4699, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4691, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "5560:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4693, "indexExpression": {"id": 4692, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4547, "src": "5572:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5560:16:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4694, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "5560:24:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"arguments": [{"id": 4697, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4549, "src": "5596:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4696, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5588:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 4695, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "5588:7:38", "typeDescriptions": {}}}, "id": 4698, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5588:15:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "5560:43:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 4700, "nodeType": "ExpressionStatement", "src": "5560:43:38"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4707, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4701, "name": "startingAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4582, "src": "5662:17:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"arguments": [{"id": 4704, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5688:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 4703, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5688:7:38", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 4702, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "5683:4:38", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 4705, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5683:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 4706, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "5683:17:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5662:38:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4721, "nodeType": "IfStatement", "src": "5658:138:38", "trueBody": {"id": 4720, "nodeType": "Block", "src": "5702:94:38", "statements": [{"expression": {"id": 4718, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 4708, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4305, "src": "5716:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 4712, "indexExpression": {"id": 4709, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "5728:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5716:16:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 4713, "indexExpression": {"expression": {"id": 4710, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5733:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4711, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5733:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5716:28:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 4716, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4549, "src": "5778:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4714, "name": "startingAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4582, "src": "5747:17:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "uncheckedSub", "nodeType": "MemberAccess", "referencedDeclaration": 34506, "src": "5747:30:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 4717, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5747:38:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5716:69:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4719, "nodeType": "ExpressionStatement", "src": "5716:69:38"}]}}, {"eventCall": {"arguments": [{"id": 4723, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4545, "src": "5819:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4724, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4547, "src": "5824:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4725, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4549, "src": "5829:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4722, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31999, "src": "5810:8:38", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 4726, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5810:26:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4727, "nodeType": "EmitStatement", "src": "5805:31:38"}]}, "documentation": {"id": 4543, "nodeType": "StructuredDocumentation", "src": "3961:317:38", "text": " @notice Transfer staked tokens from src to dst.\n @dev This is not an ERC20 transfer, as tokens are still owned by this contract, but fees get updated in the LP pool.\n @param src Address to transfer from.\n @param dst Address to transfer to.\n @param amount Amount to transfer."}, "functionSelector": "23b872dd", "id": 4729, "implemented": true, "kind": "function", "modifiers": [{"id": 4553, "kind": "modifierInvocation", "modifierName": {"id": 4552, "name": "notPaused", "nodeType": "IdentifierPath", "referencedDeclaration": 28656, "src": "4395:9:38"}, "nodeType": "ModifierInvocation", "src": "4395:9:38"}], "name": "transferFrom", "nameLocation": "4292:12:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4551, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4386:8:38"}, "parameters": {"id": 4550, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4545, "mutability": "mutable", "name": "src", "nameLocation": "4322:3:38", "nodeType": "VariableDeclaration", "scope": 4729, "src": "4314:11:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4544, "name": "address", "nodeType": "ElementaryTypeName", "src": "4314:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4547, "mutability": "mutable", "name": "dst", "nameLocation": "4343:3:38", "nodeType": "VariableDeclaration", "scope": 4729, "src": "4335:11:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4546, "name": "address", "nodeType": "ElementaryTypeName", "src": "4335:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4549, "mutability": "mutable", "name": "amount", "nameLocation": "4364:6:38", "nodeType": "VariableDeclaration", "scope": 4729, "src": "4356:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4548, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4356:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4304:72:38"}, "returnParameters": {"id": 4554, "nodeType": "ParameterList", "parameters": [], "src": "4405:0:38"}, "scope": 5470, "src": "4283:1560:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32050], "body": {"id": 4767, "nodeType": "Block", "src": "6086:182:38", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4746, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4741, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4732, "src": "6104:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4744, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6123:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4743, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6115:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4742, "name": "address", "nodeType": "ElementaryTypeName", "src": "6115:7:38", "typeDescriptions": {}}}, "id": 4745, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6115:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6104:21:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4747, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "6127:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 4748, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS_NOT_ALLOWED", "nodeType": "MemberAccess", "referencedDeclaration": 35426, "src": "6127:30:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4740, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6096:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4749, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6096:62:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4750, "nodeType": "ExpressionStatement", "src": "6096:62:38"}, {"expression": {"id": 4758, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 4751, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4305, "src": "6168:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 4755, "indexExpression": {"expression": {"id": 4752, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6180:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4753, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6180:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6168:23:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 4756, "indexExpression": {"id": 4754, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4732, "src": "6192:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6168:32:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4757, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4734, "src": "6203:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6168:41:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4759, "nodeType": "ExpressionStatement", "src": "6168:41:38"}, {"eventCall": {"arguments": [{"expression": {"id": 4761, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6233:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4762, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6233:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4763, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4732, "src": "6245:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4764, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4734, "src": "6254:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4760, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32007, "src": "6224:8:38", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 4765, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6224:37:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4766, "nodeType": "EmitStatement", "src": "6219:42:38"}]}, "documentation": {"id": 4730, "nodeType": "StructuredDocumentation", "src": "5849:154:38", "text": " @notice Approve staked tokens for spender.\n @param spender Address to approve tokens for.\n @param amount Amount to approve."}, "functionSelector": "095ea7b3", "id": 4768, "implemented": true, "kind": "function", "modifiers": [{"id": 4738, "kind": "modifierInvocation", "modifierName": {"id": 4737, "name": "notPaused", "nodeType": "IdentifierPath", "referencedDeclaration": 28656, "src": "6076:9:38"}, "nodeType": "ModifierInvocation", "src": "6076:9:38"}], "name": "approve", "nameLocation": "6017:7:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4736, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6067:8:38"}, "parameters": {"id": 4735, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4732, "mutability": "mutable", "name": "spender", "nameLocation": "6033:7:38", "nodeType": "VariableDeclaration", "scope": 4768, "src": "6025:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4731, "name": "address", "nodeType": "ElementaryTypeName", "src": "6025:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4734, "mutability": "mutable", "name": "amount", "nameLocation": "6050:6:38", "nodeType": "VariableDeclaration", "scope": 4768, "src": "6042:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4733, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6042:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6024:33:38"}, "returnParameters": {"id": 4739, "nodeType": "ParameterList", "parameters": [], "src": "6086:0:38"}, "scope": 5470, "src": "6008:260:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32073], "body": {"id": 4810, "nodeType": "Block", "src": "6649:216:38", "statements": [{"assignments": [4782], "declarations": [{"constant": false, "id": 4782, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "6667:8:38", "nodeType": "VariableDeclaration", "scope": 4810, "src": "6659:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4781, "name": "address", "nodeType": "ElementaryTypeName", "src": "6659:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4784, "initialValue": {"id": 4783, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "6678:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "6659:26:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4790, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4785, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4782, "src": "6699:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4788, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6719:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4787, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6711:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4786, "name": "address", "nodeType": "ElementaryTypeName", "src": "6711:7:38", "typeDescriptions": {}}}, "id": 4789, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6711:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6699:22:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4799, "nodeType": "IfStatement", "src": "6695:95:38", "trueBody": {"id": 4798, "nodeType": "Block", "src": "6723:67:38", "statements": [{"expression": {"arguments": [{"id": 4795, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4771, "src": "6771:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 4792, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4782, "src": "6746:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4791, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "6737:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4793, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6737:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4794, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "userCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36796, "src": "6737:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) external returns (bool)"}}, "id": 4796, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6737:42:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4797, "nodeType": "ExpressionStatement", "src": "6737:42:38"}]}}, {"expression": {"id": 4808, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4800, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "6799:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4802, "indexExpression": {"id": 4801, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4771, "src": "6811:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6799:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4803, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "actionLockedBalance", "nodeType": "MemberAccess", "referencedDeclaration": 4286, "src": "6799:40:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"arguments": [{"id": 4806, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4773, "src": "6851:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4805, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6843:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 4804, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "6843:7:38", "typeDescriptions": {}}}, "id": 4807, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6843:15:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "6799:59:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 4809, "nodeType": "ExpressionStatement", "src": "6799:59:38"}]}, "documentation": {"id": 4769, "nodeType": "StructuredDocumentation", "src": "6274:231:38", "text": " @notice If an action is registered and stakes funds, this updates the actionLockedBalances for the user.\n @param account Address that registered the action.\n @param amount Amount staked by the action."}, "functionSelector": "fcb70010", "id": 4811, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"expression": {"id": 4777, "name": "Roles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33585, "src": "6631:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Roles_$33585_$", "typeString": "type(library Roles)"}}, "id": 4778, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ACTION", "nodeType": "MemberAccess", "referencedDeclaration": 33584, "src": "6631:12:38", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 4779, "kind": "modifierInvocation", "modifierName": {"id": 4776, "name": "onlyRole", "nodeType": "IdentifierPath", "referencedDeclaration": 5525, "src": "6622:8:38"}, "nodeType": "ModifierInvocation", "src": "6622:22:38"}], "name": "increaseActionLockedBalance", "nameLocation": "6519:27:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4775, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6605:8:38"}, "parameters": {"id": 4774, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4771, "mutability": "mutable", "name": "account", "nameLocation": "6555:7:38", "nodeType": "VariableDeclaration", "scope": 4811, "src": "6547:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4770, "name": "address", "nodeType": "ElementaryTypeName", "src": "6547:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4773, "mutability": "mutable", "name": "amount", "nameLocation": "6572:6:38", "nodeType": "VariableDeclaration", "scope": 4811, "src": "6564:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4772, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6564:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6546:33:38"}, "returnParameters": {"id": 4780, "nodeType": "ParameterList", "parameters": [], "src": "6649:0:38"}, "scope": 5470, "src": "6510:355:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32080], "body": {"id": 4876, "nodeType": "Block", "src": "7241:495:38", "statements": [{"assignments": [4825], "declarations": [{"constant": false, "id": 4825, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "7259:8:38", "nodeType": "VariableDeclaration", "scope": 4876, "src": "7251:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4824, "name": "address", "nodeType": "ElementaryTypeName", "src": "7251:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4827, "initialValue": {"id": 4826, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "7270:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "7251:26:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4833, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4828, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4825, "src": "7291:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4831, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7311:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4830, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7303:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4829, "name": "address", "nodeType": "ElementaryTypeName", "src": "7303:7:38", "typeDescriptions": {}}}, "id": 4832, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7303:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7291:22:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4842, "nodeType": "IfStatement", "src": "7287:95:38", "trueBody": {"id": 4841, "nodeType": "Block", "src": "7315:67:38", "statements": [{"expression": {"arguments": [{"id": 4838, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4814, "src": "7363:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 4835, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4825, "src": "7338:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4834, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "7329:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4836, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7329:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4837, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "userCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36796, "src": "7329:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) external returns (bool)"}}, "id": 4839, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7329:42:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4840, "nodeType": "ExpressionStatement", "src": "7329:42:38"}]}}, {"assignments": [4844], "declarations": [{"constant": false, "id": 4844, "mutability": "mutable", "name": "actionLockedBalance_", "nameLocation": "7399:20:38", "nodeType": "VariableDeclaration", "scope": 4876, "src": "7391:28:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4843, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7391:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4849, "initialValue": {"expression": {"baseExpression": {"id": 4845, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "7422:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4847, "indexExpression": {"id": 4846, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4814, "src": "7434:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7422:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4848, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "actionLockedBalance", "nodeType": "MemberAccess", "referencedDeclaration": 4286, "src": "7422:40:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "VariableDeclarationStatement", "src": "7391:71:38"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4852, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4850, "name": "actionLockedBalance_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4844, "src": "7476:20:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 4851, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4816, "src": "7499:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7476:29:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 4874, "nodeType": "Block", "src": "7661:69:38", "statements": [{"expression": {"id": 4872, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4867, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "7675:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4869, "indexExpression": {"id": 4868, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4814, "src": "7687:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7675:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4870, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "actionLockedBalance", "nodeType": "MemberAccess", "referencedDeclaration": 4286, "src": "7675:40:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 4871, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7718:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7675:44:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 4873, "nodeType": "ExpressionStatement", "src": "7675:44:38"}]}, "id": 4875, "nodeType": "IfStatement", "src": "7472:258:38", "trueBody": {"id": 4866, "nodeType": "Block", "src": "7507:148:38", "statements": [{"expression": {"id": 4864, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 4853, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "7521:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4855, "indexExpression": {"id": 4854, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4814, "src": "7533:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7521:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4856, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "actionLockedBalance", "nodeType": "MemberAccess", "referencedDeclaration": 4286, "src": "7521:40:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 4861, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4816, "src": "7623:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4859, "name": "actionLockedBalance_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4844, "src": "7589:20:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4860, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "uncheckedSub", "nodeType": "MemberAccess", "referencedDeclaration": 34506, "src": "7589:33:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 4862, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7589:41:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4858, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7564:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 4857, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "7564:7:38", "typeDescriptions": {}}}, "id": 4863, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7564:80:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "7521:123:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 4865, "nodeType": "ExpressionStatement", "src": "7521:123:38"}]}}]}, "documentation": {"id": 4812, "nodeType": "StructuredDocumentation", "src": "6871:226:38", "text": " @notice If an action is executed/reset, this updates the actionLockedBalances for the user.\n @param account Address that registered the action.\n @param amount Amount executed/reset by the action."}, "functionSelector": "6a278cd9", "id": 4877, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"expression": {"id": 4820, "name": "Roles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33585, "src": "7223:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Roles_$33585_$", "typeString": "type(library Roles)"}}, "id": 4821, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ACTION", "nodeType": "MemberAccess", "referencedDeclaration": 33584, "src": "7223:12:38", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 4822, "kind": "modifierInvocation", "modifierName": {"id": 4819, "name": "onlyRole", "nodeType": "IdentifierPath", "referencedDeclaration": 5525, "src": "7214:8:38"}, "nodeType": "ModifierInvocation", "src": "7214:22:38"}], "name": "decreaseActionLockedBalance", "nameLocation": "7111:27:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4818, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7197:8:38"}, "parameters": {"id": 4817, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4814, "mutability": "mutable", "name": "account", "nameLocation": "7147:7:38", "nodeType": "VariableDeclaration", "scope": 4877, "src": "7139:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4813, "name": "address", "nodeType": "ElementaryTypeName", "src": "7139:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4816, "mutability": "mutable", "name": "amount", "nameLocation": "7164:6:38", "nodeType": "VariableDeclaration", "scope": 4877, "src": "7156:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4815, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7156:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7138:33:38"}, "returnParameters": {"id": 4823, "nodeType": "ParameterList", "parameters": [], "src": "7241:0:38"}, "scope": 5470, "src": "7102:634:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32090], "body": {"id": 4904, "nodeType": "Block", "src": "7801:159:38", "statements": [{"assignments": [4884], "declarations": [{"constant": false, "id": 4884, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "7819:8:38", "nodeType": "VariableDeclaration", "scope": 4904, "src": "7811:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4883, "name": "address", "nodeType": "ElementaryTypeName", "src": "7811:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4886, "initialValue": {"id": 4885, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "7830:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "7811:26:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4892, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4887, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4884, "src": "7851:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4890, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7871:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4889, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7863:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4888, "name": "address", "nodeType": "ElementaryTypeName", "src": "7863:7:38", "typeDescriptions": {}}}, "id": 4891, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7863:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7851:22:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4895, "nodeType": "IfStatement", "src": "7847:40:38", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 4893, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7882:5:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 4882, "id": 4894, "nodeType": "Return", "src": "7875:12:38"}}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 4897, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4884, "src": "7906:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4896, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "7897:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4898, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7897:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4899, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "poolCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36784, "src": "7897:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$__$returns$__$", "typeString": "function () external"}}, "id": 4900, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7897:35:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4901, "nodeType": "ExpressionStatement", "src": "7897:35:38"}, {"expression": {"hexValue": "74727565", "id": 4902, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7949:4:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 4882, "id": 4903, "nodeType": "Return", "src": "7942:11:38"}]}, "functionSelector": "5790a0c8", "id": 4905, "implemented": true, "kind": "function", "modifiers": [], "name": "poolCheckpoint", "nameLocation": "7751:14:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4879, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7777:8:38"}, "parameters": {"id": 4878, "nodeType": "ParameterList", "parameters": [], "src": "7765:2:38"}, "returnParameters": {"id": 4882, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4881, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4905, "src": "7795:4:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4880, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7795:4:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "7794:6:38"}, "scope": 5470, "src": "7742:218:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32097], "body": {"id": 4935, "nodeType": "Block", "src": "8116:134:38", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4922, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4917, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "8130:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 4920, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8149:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 4919, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8141:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4918, "name": "address", "nodeType": "ElementaryTypeName", "src": "8141:7:38", "typeDescriptions": {}}}, "id": 4921, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8141:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "8130:21:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4925, "nodeType": "IfStatement", "src": "8126:39:38", "trueBody": {"expression": {"hexValue": "66616c7365", "id": 4923, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8160:5:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 4916, "id": 4924, "nodeType": "Return", "src": "8153:12:38"}}, {"expression": {"arguments": [{"id": 4930, "name": "updateEndTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4907, "src": "8208:13:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 4927, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "8184:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4926, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "8175:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 4928, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8175:17:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 4929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "poolCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36789, "src": "8175:32:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 4931, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8175:47:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4932, "nodeType": "ExpressionStatement", "src": "8175:47:38"}, {"expression": {"hexValue": "74727565", "id": 4933, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8239:4:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 4916, "id": 4934, "nodeType": "Return", "src": "8232:11:38"}]}, "functionSelector": "e7945d00", "id": 4936, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"expression": {"id": 4911, "name": "Roles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33585, "src": "8064:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Roles_$33585_$", "typeString": "type(library Roles)"}}, "id": 4912, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INFLATION_MANAGER", "nodeType": "MemberAccess", "referencedDeclaration": 33575, "src": "8064:23:38", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "id": 4913, "kind": "modifierInvocation", "modifierName": {"id": 4910, "name": "onlyRole", "nodeType": "IdentifierPath", "referencedDeclaration": 5525, "src": "8055:8:38"}, "nodeType": "ModifierInvocation", "src": "8055:33:38"}], "name": "poolCheckpoint", "nameLocation": "7975:14:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4909, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8038:8:38"}, "parameters": {"id": 4908, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4907, "mutability": "mutable", "name": "updateEndTime", "nameLocation": "7998:13:38", "nodeType": "VariableDeclaration", "scope": 4936, "src": "7990:21:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4906, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7990:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7989:23:38"}, "returnParameters": {"id": 4916, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4915, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4936, "src": "8106:4:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 4914, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8106:4:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "8105:6:38"}, "scope": 5470, "src": "7966:284:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [32137], "body": {"id": 4981, "nodeType": "Block", "src": "8462:249:38", "statements": [{"assignments": [4947], "declarations": [{"constant": false, "id": 4947, "mutability": "mutable", "name": "actions", "nameLocation": "8489:7:38", "nodeType": "VariableDeclaration", "scope": 4981, "src": "8472:24:38", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 4945, "name": "address", "nodeType": "ElementaryTypeName", "src": "8472:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4946, "nodeType": "ArrayTypeName", "src": "8472:9:38", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "id": 4951, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4948, "name": "addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "8499:15:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 4949, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "allActions", "nodeType": "MemberAccess", "referencedDeclaration": 31753, "src": "8499:26:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function () view external returns (address[] memory)"}}, "id": 4950, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8499:28:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "8472:55:38"}, {"assignments": [4953], "declarations": [{"constant": false, "id": 4953, "mutability": "mutable", "name": "total", "nameLocation": "8545:5:38", "nodeType": "VariableDeclaration", "scope": 4981, "src": "8537:13:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4952, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8537:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4954, "nodeType": "VariableDeclarationStatement", "src": "8537:13:38"}, {"body": {"id": 4977, "nodeType": "Block", "src": "8618:65:38", "statements": [{"expression": {"id": 4975, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4968, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4953, "src": "8632:5:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"expression": {"baseExpression": {"id": 4969, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "8641:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 4973, "indexExpression": {"baseExpression": {"id": 4970, "name": "actions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4947, "src": "8653:7:38", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 4972, "indexExpression": {"id": 4971, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4956, "src": "8661:1:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8653:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8641:23:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 4974, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "8641:31:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "8632:40:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4976, "nodeType": "ExpressionStatement", "src": "8632:40:38"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4961, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4958, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4956, "src": "8576:1:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 4959, "name": "actions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4947, "src": "8580:7:38", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 4960, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8580:14:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8576:18:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4978, "initializationExpression": {"assignments": [4956], "declarations": [{"constant": false, "id": 4956, "mutability": "mutable", "name": "i", "nameLocation": "8573:1:38", "nodeType": "VariableDeclaration", "scope": 4978, "src": "8565:9:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4955, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8565:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4957, "nodeType": "VariableDeclarationStatement", "src": "8565:9:38"}, "loopExpression": {"expression": {"id": 4966, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4962, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4956, "src": "8596:1:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4963, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4956, "src": "8600:1:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4964, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "uncheckedInc", "nodeType": "MemberAccess", "referencedDeclaration": 34476, "src": "8600:14:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 4965, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8600:16:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8596:20:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4967, "nodeType": "ExpressionStatement", "src": "8596:20:38"}, "nodeType": "ForStatement", "src": "8560:123:38"}, {"expression": {"id": 4979, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4953, "src": "8699:5:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4942, "id": 4980, "nodeType": "Return", "src": "8692:12:38"}]}, "documentation": {"id": 4937, "nodeType": "StructuredDocumentation", "src": "8256:130:38", "text": " @notice Get the total amount of tokens that are staked by actions\n @return Total amount staked by actions"}, "functionSelector": "ba4ac711", "id": 4982, "implemented": true, "kind": "function", "modifiers": [], "name": "getStakedByActions", "nameLocation": "8400:18:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4939, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8435:8:38"}, "parameters": {"id": 4938, "nodeType": "ParameterList", "parameters": [], "src": "8418:2:38"}, "returnParameters": {"id": 4942, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4941, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4982, "src": "8453:7:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4940, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8453:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8452:9:38"}, "scope": 5470, "src": "8391:320:38", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [32106], "body": {"id": 4998, "nodeType": "Block", "src": "8809:51:38", "statements": [{"expression": {"baseExpression": {"baseExpression": {"id": 4992, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4305, "src": "8826:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 4994, "indexExpression": {"id": 4993, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4984, "src": "8838:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8826:18:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 4996, "indexExpression": {"id": 4995, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4986, "src": "8845:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8826:27:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4991, "id": 4997, "nodeType": "Return", "src": "8819:34:38"}]}, "functionSelector": "dd62ed3e", "id": 4999, "implemented": true, "kind": "function", "modifiers": [], "name": "allowance", "nameLocation": "8726:9:38", "nodeType": "FunctionDefinition", "overrides": {"id": 4988, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8782:8:38"}, "parameters": {"id": 4987, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4984, "mutability": "mutable", "name": "owner", "nameLocation": "8744:5:38", "nodeType": "VariableDeclaration", "scope": 4999, "src": "8736:13:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4983, "name": "address", "nodeType": "ElementaryTypeName", "src": "8736:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4986, "mutability": "mutable", "name": "spender", "nameLocation": "8759:7:38", "nodeType": "VariableDeclaration", "scope": 4999, "src": "8751:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4985, "name": "address", "nodeType": "ElementaryTypeName", "src": "8751:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "8735:32:38"}, "returnParameters": {"id": 4991, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4990, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4999, "src": "8800:7:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4989, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8800:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8799:9:38"}, "scope": 5470, "src": "8717:143:38", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [32118], "body": {"id": 5012, "nodeType": "Block", "src": "8943:52:38", "statements": [{"expression": {"expression": {"baseExpression": {"id": 5007, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "8960:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 5009, "indexExpression": {"id": 5008, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5001, "src": "8972:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8960:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 5010, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "8960:28:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "functionReturnParameters": 5006, "id": 5011, "nodeType": "Return", "src": "8953:35:38"}]}, "functionSelector": "70a08231", "id": 5013, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "8875:9:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5003, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8916:8:38"}, "parameters": {"id": 5002, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5001, "mutability": "mutable", "name": "account", "nameLocation": "8893:7:38", "nodeType": "VariableDeclaration", "scope": 5013, "src": "8885:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5000, "name": "address", "nodeType": "ElementaryTypeName", "src": "8885:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "8884:17:38"}, "returnParameters": {"id": 5006, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5005, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5013, "src": "8934:7:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5004, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8934:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8933:9:38"}, "scope": 5470, "src": "8866:129:38", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [32142], "body": {"id": 5021, "nodeType": "Block", "src": "9072:40:38", "statements": [{"expression": {"id": 5019, "name": "_poolTotalStaked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4307, "src": "9089:16:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 5018, "id": 5020, "nodeType": "Return", "src": "9082:23:38"}]}, "functionSelector": "8aa01ea9", "id": 5022, "implemented": true, "kind": "function", "modifiers": [], "name": "getPoolTotalStaked", "nameLocation": "9010:18:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5015, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9045:8:38"}, "parameters": {"id": 5014, "nodeType": "ParameterList", "parameters": [], "src": "9028:2:38"}, "returnParameters": {"id": 5018, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5017, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5022, "src": "9063:7:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5016, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9063:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9062:9:38"}, "scope": 5470, "src": "9001:111:38", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [32125], "body": {"id": 5044, "nodeType": "Block", "src": "9476:143:38", "statements": [{"assignments": [5033], "declarations": [{"constant": false, "id": 5033, "mutability": "mutable", "name": "accountInfo_", "nameLocation": "9505:12:38", "nodeType": "VariableDeclaration", "scope": 5044, "src": "9486:31:38", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo"}, "typeName": {"id": 5032, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5031, "name": "AccountInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 4287, "src": "9486:11:38"}, "referencedDeclaration": 4287, "src": "9486:11:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage_ptr", "typeString": "struct StakerVault.AccountInfo"}}, "visibility": "internal"}], "id": 5037, "initialValue": {"baseExpression": {"id": 5034, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "9520:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 5036, "indexExpression": {"id": 5035, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5025, "src": "9532:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9520:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "9486:54:38"}, {"expression": {"commonType": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "id": 5042, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5038, "name": "accountInfo_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5033, "src": "9557:12:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo memory"}}, "id": 5039, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "9557:20:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 5040, "name": "accountInfo_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5033, "src": "9580:12:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo memory"}}, "id": 5041, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "actionLockedBalance", "nodeType": "MemberAccess", "referencedDeclaration": 4286, "src": "9580:32:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "9557:55:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "functionReturnParameters": 5030, "id": 5043, "nodeType": "Return", "src": "9550:62:38"}]}, "documentation": {"id": 5023, "nodeType": "StructuredDocumentation", "src": "9118:219:38", "text": " @notice Returns the total balance in the staker vault, including that locked in positions.\n @param account Account to query balance for.\n @return Total balance in staker vault for account."}, "functionSelector": "a853ba2f", "id": 5045, "implemented": true, "kind": "function", "modifiers": [], "name": "stakedAndActionLockedBalanceOf", "nameLocation": "9351:30:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5027, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9437:8:38"}, "parameters": {"id": 5026, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5025, "mutability": "mutable", "name": "account", "nameLocation": "9390:7:38", "nodeType": "VariableDeclaration", "scope": 5045, "src": "9382:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5024, "name": "address", "nodeType": "ElementaryTypeName", "src": "9382:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "9381:17:38"}, "returnParameters": {"id": 5030, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5029, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5045, "src": "9463:7:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5028, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9463:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9462:9:38"}, "scope": 5470, "src": "9342:277:38", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [32132], "body": {"id": 5058, "nodeType": "Block", "src": "9714:64:38", "statements": [{"expression": {"expression": {"baseExpression": {"id": 5053, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "9731:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 5055, "indexExpression": {"id": 5054, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5047, "src": "9743:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9731:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 5056, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "actionLockedBalance", "nodeType": "MemberAccess", "referencedDeclaration": 4286, "src": "9731:40:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "functionReturnParameters": 5052, "id": 5057, "nodeType": "Return", "src": "9724:47:38"}]}, "functionSelector": "d828c986", "id": 5059, "implemented": true, "kind": "function", "modifiers": [], "name": "actionLockedBalanceOf", "nameLocation": "9634:21:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5049, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9687:8:38"}, "parameters": {"id": 5048, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5047, "mutability": "mutable", "name": "account", "nameLocation": "9664:7:38", "nodeType": "VariableDeclaration", "scope": 5059, "src": "9656:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5046, "name": "address", "nodeType": "ElementaryTypeName", "src": "9656:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "9655:17:38"}, "returnParameters": {"id": 5052, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5051, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5059, "src": "9705:7:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5050, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9705:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9704:9:38"}, "scope": 5470, "src": "9625:153:38", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [32147], "body": {"id": 5071, "nodeType": "Block", "src": "9843:52:38", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 5066, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "9871:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5065, "name": "IERC20Full", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36621, "src": "9860:10:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20Full_$36621_$", "typeString": "type(contract IERC20Full)"}}, "id": 5067, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9860:17:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20Full_$36621", "typeString": "contract IERC20Full"}}, "id": 5068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "decimals", "nodeType": "MemberAccess", "referencedDeclaration": 36620, "src": "9860:26:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$", "typeString": "function () view external returns (uint8)"}}, "id": 5069, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9860:28:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "functionReturnParameters": 5064, "id": 5070, "nodeType": "Return", "src": "9853:35:38"}]}, "functionSelector": "313ce567", "id": 5072, "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nameLocation": "9793:8:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5061, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9818:8:38"}, "parameters": {"id": 5060, "nodeType": "ParameterList", "parameters": [], "src": "9801:2:38"}, "returnParameters": {"id": 5064, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5063, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5072, "src": "9836:5:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 5062, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "9836:5:38", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "9835:7:38"}, "scope": 5470, "src": "9784:111:38", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [32111], "body": {"id": 5080, "nodeType": "Block", "src": "9962:29:38", "statements": [{"expression": {"id": 5078, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "9979:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 5077, "id": 5079, "nodeType": "Return", "src": "9972:12:38"}]}, "functionSelector": "21df0da7", "id": 5081, "implemented": true, "kind": "function", "modifiers": [], "name": "getToken", "nameLocation": "9910:8:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5074, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9935:8:38"}, "parameters": {"id": 5073, "nodeType": "ParameterList", "parameters": [], "src": "9918:2:38"}, "returnParameters": {"id": 5077, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5076, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5081, "src": "9953:7:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5075, "name": "address", "nodeType": "ElementaryTypeName", "src": "9953:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "9952:9:38"}, "scope": 5470, "src": "9901:90:38", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [32034], "body": {"id": 5095, "nodeType": "Block", "src": "10046:59:38", "statements": [{"expression": {"arguments": [{"expression": {"id": 5088, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "10067:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5089, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "10067:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 5090, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "10079:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5091, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "10079:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5092, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5083, "src": "10091:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5087, "name": "unstakeFor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5452, "src": "10056:10:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 5093, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10056:42:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5094, "nodeType": "ExpressionStatement", "src": "10056:42:38"}]}, "functionSelector": "2e17de78", "id": 5096, "implemented": true, "kind": "function", "modifiers": [], "name": "unstake", "nameLocation": "10006:7:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5085, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10037:8:38"}, "parameters": {"id": 5084, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5083, "mutability": "mutable", "name": "amount", "nameLocation": "10022:6:38", "nodeType": "VariableDeclaration", "scope": 5096, "src": "10014:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5082, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10014:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10013:16:38"}, "returnParameters": {"id": 5086, "nodeType": "ParameterList", "parameters": [], "src": "10046:0:38"}, "scope": 5470, "src": "9997:108:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [32022], "body": {"id": 5109, "nodeType": "Block", "src": "10269:45:38", "statements": [{"expression": {"arguments": [{"expression": {"id": 5104, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "10288:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5105, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "10288:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5106, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5099, "src": "10300:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5103, "name": "stakeFor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5258, "src": "10279:8:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 5107, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10279:28:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5108, "nodeType": "ExpressionStatement", "src": "10279:28:38"}]}, "documentation": {"id": 5097, "nodeType": "StructuredDocumentation", "src": "10111:106:38", "text": " @notice Stake an amount of vault tokens.\n @param amount Amount of token to stake."}, "functionSelector": "a694fc3a", "id": 5110, "implemented": true, "kind": "function", "modifiers": [], "name": "stake", "nameLocation": "10231:5:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5101, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10260:8:38"}, "parameters": {"id": 5100, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5099, "mutability": "mutable", "name": "amount", "nameLocation": "10245:6:38", "nodeType": "VariableDeclaration", "scope": 5110, "src": "10237:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5098, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10237:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10236:16:38"}, "returnParameters": {"id": 5102, "nodeType": "ParameterList", "parameters": [], "src": "10269:0:38"}, "scope": 5470, "src": "10222:92:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [32029], "body": {"id": 5257, "nodeType": "Block", "src": "10596:929:38", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5122, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5113, "src": "10614:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 5125, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10633:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5124, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10625:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5123, "name": "address", "nodeType": "ElementaryTypeName", "src": "10625:7:38", "typeDescriptions": {}}}, "id": 5126, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10625:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10614:21:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5128, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "10637:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 5129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS_NOT_ALLOWED", "nodeType": "MemberAccess", "referencedDeclaration": 35426, "src": "10637:30:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5121, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10606:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5130, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10606:62:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5131, "nodeType": "ExpressionStatement", "src": "10606:62:38"}, {"assignments": [5134], "declarations": [{"constant": false, "id": 5134, "mutability": "mutable", "name": "token_", "nameLocation": "10685:6:38", "nodeType": "VariableDeclaration", "scope": 5257, "src": "10678:13:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}, "typeName": {"id": 5133, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5132, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 34600, "src": "10678:6:38"}, "referencedDeclaration": 34600, "src": "10678:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 5138, "initialValue": {"arguments": [{"id": 5136, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "10701:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5135, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "10694:6:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 5137, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10694:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "10678:29:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"id": 5142, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "10742:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "10742:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5140, "name": "token_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5134, "src": "10725:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 5141, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 34539, "src": "10725:16:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 5144, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10725:28:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 5145, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5115, "src": "10757:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10725:38:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5147, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "10765:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 5148, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INSUFFICIENT_BALANCE", "nodeType": "MemberAccess", "referencedDeclaration": 35384, "src": "10765:26:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5139, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10717:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5149, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10717:75:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5150, "nodeType": "ExpressionStatement", "src": "10717:75:38"}, {"assignments": [5152], "declarations": [{"constant": false, "id": 5152, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "10811:8:38", "nodeType": "VariableDeclaration", "scope": 5257, "src": "10803:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5151, "name": "address", "nodeType": "ElementaryTypeName", "src": "10803:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 5154, "initialValue": {"id": 5153, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "10822:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "10803:26:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5155, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5152, "src": "10843:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 5158, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10863:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5157, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10855:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5156, "name": "address", "nodeType": "ElementaryTypeName", "src": "10855:7:38", "typeDescriptions": {}}}, "id": 5159, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10855:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10843:22:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5169, "nodeType": "IfStatement", "src": "10839:95:38", "trueBody": {"id": 5168, "nodeType": "Block", "src": "10867:67:38", "statements": [{"expression": {"arguments": [{"id": 5165, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5113, "src": "10915:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 5162, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5152, "src": "10890:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5161, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "10881:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 5163, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10881:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 5164, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "userCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36796, "src": "10881:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) external returns (bool)"}}, "id": 5166, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10881:42:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5167, "nodeType": "ExpressionStatement", "src": "10881:42:38"}]}}, {"assignments": [5171], "declarations": [{"constant": false, "id": 5171, "mutability": "mutable", "name": "oldBal", "nameLocation": "10952:6:38", "nodeType": "VariableDeclaration", "scope": 5257, "src": "10944:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5170, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10944:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5179, "initialValue": {"arguments": [{"arguments": [{"id": 5176, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "10986:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_StakerVault_$5470", "typeString": "contract StakerVault"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_StakerVault_$5470", "typeString": "contract StakerVault"}], "id": 5175, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10978:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5174, "name": "address", "nodeType": "ElementaryTypeName", "src": "10978:7:38", "typeDescriptions": {}}}, "id": 5177, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10978:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5172, "name": "token_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5134, "src": "10961:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 5173, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 34539, "src": "10961:16:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 5178, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10961:31:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10944:48:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5180, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "11007:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5181, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "11007:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 5182, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5113, "src": "11021:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11007:21:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5205, "nodeType": "IfStatement", "src": "11003:191:38", "trueBody": {"id": 5204, "nodeType": "Block", "src": "11030:164:38", "statements": [{"assignments": [5186], "declarations": [{"constant": false, "id": 5186, "mutability": "mutable", "name": "pool", "nameLocation": "11059:4:38", "nodeType": "VariableDeclaration", "scope": 5204, "src": "11044:19:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}, "typeName": {"id": 5185, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5184, "name": "ILiquidityPool", "nodeType": "IdentifierPath", "referencedDeclaration": 33980, "src": "11044:14:38"}, "referencedDeclaration": 33980, "src": "11044:14:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "visibility": "internal"}], "id": 5194, "initialValue": {"arguments": [{"arguments": [{"id": 5191, "name": "token_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5134, "src": "11106:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}], "id": 5190, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11098:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5189, "name": "address", "nodeType": "ElementaryTypeName", "src": "11098:7:38", "typeDescriptions": {}}}, "id": 5192, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11098:15:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5187, "name": "addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "11066:15:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 5188, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolForToken", "nodeType": "MemberAccess", "referencedDeclaration": 31706, "src": "11066:31:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_ILiquidityPool_$33980_$", "typeString": "function (address) view external returns (contract ILiquidityPool)"}}, "id": 5193, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11066:48:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "nodeType": "VariableDeclarationStatement", "src": "11044:70:38"}, {"expression": {"arguments": [{"expression": {"id": 5198, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "11155:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "11155:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5200, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5113, "src": "11167:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5201, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5115, "src": "11176:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5195, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5186, "src": "11128:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "id": 5197, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "handleLpTokenTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 33868, "src": "11128:26:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256) external"}}, "id": 5202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11128:55:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5203, "nodeType": "ExpressionStatement", "src": "11128:55:38"}]}}, {"expression": {"arguments": [{"expression": {"id": 5209, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "11228:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "11228:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 5213, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "11248:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_StakerVault_$5470", "typeString": "contract StakerVault"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_StakerVault_$5470", "typeString": "contract StakerVault"}], "id": 5212, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11240:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5211, "name": "address", "nodeType": "ElementaryTypeName", "src": "11240:7:38", "typeDescriptions": {}}}, "id": 5214, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11240:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5215, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5115, "src": "11255:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5206, "name": "token_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5134, "src": "11204:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 5208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 34657, "src": "11204:23:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 5216, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11204:58:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5217, "nodeType": "ExpressionStatement", "src": "11204:58:38"}, {"assignments": [5219], "declarations": [{"constant": false, "id": 5219, "mutability": "mutable", "name": "staked", "nameLocation": "11280:6:38", "nodeType": "VariableDeclaration", "scope": 5257, "src": "11272:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5218, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11272:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5229, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"id": 5224, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "11314:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_StakerVault_$5470", "typeString": "contract StakerVault"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_StakerVault_$5470", "typeString": "contract StakerVault"}], "id": 5223, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11306:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5222, "name": "address", "nodeType": "ElementaryTypeName", "src": "11306:7:38", "typeDescriptions": {}}}, "id": 5225, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11306:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5220, "name": "token_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5134, "src": "11289:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 5221, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 34539, "src": "11289:16:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 5226, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11289:31:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 5227, "name": "oldBal", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5171, "src": "11323:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11289:40:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11272:57:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5231, "name": "staked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5219, "src": "11347:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 5232, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5115, "src": "11357:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11347:16:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5234, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "11365:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 5235, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_AMOUNT", "nodeType": "MemberAccess", "referencedDeclaration": 35342, "src": "11365:20:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5230, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11339:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5236, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11339:47:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5237, "nodeType": "ExpressionStatement", "src": "11339:47:38"}, {"expression": {"id": 5246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 5238, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "11396:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 5240, "indexExpression": {"id": 5239, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5113, "src": "11408:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "11396:20:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 5241, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "11396:28:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"arguments": [{"id": 5244, "name": "staked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5219, "src": "11436:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5243, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11428:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 5242, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "11428:7:38", "typeDescriptions": {}}}, "id": 5245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11428:15:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "11396:47:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 5247, "nodeType": "ExpressionStatement", "src": "11396:47:38"}, {"expression": {"id": 5250, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5248, "name": "_poolTotalStaked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4307, "src": "11454:16:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 5249, "name": "staked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5219, "src": "11474:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11454:26:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5251, "nodeType": "ExpressionStatement", "src": "11454:26:38"}, {"eventCall": {"arguments": [{"id": 5253, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5113, "src": "11502:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5254, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5115, "src": "11511:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5252, "name": "Staked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31985, "src": "11495:6:38", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 5255, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11495:23:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5256, "nodeType": "EmitStatement", "src": "11490:28:38"}]}, "documentation": {"id": 5111, "nodeType": "StructuredDocumentation", "src": "10320:194:38", "text": " @notice Stake amount of vault token on behalf of another account.\n @param account Account for which tokens will be staked.\n @param amount Amount of token to stake."}, "functionSelector": "2ee40908", "id": 5258, "implemented": true, "kind": "function", "modifiers": [{"id": 5119, "kind": "modifierInvocation", "modifierName": {"id": 5118, "name": "notPaused", "nodeType": "IdentifierPath", "referencedDeclaration": 28656, "src": "10586:9:38"}, "nodeType": "ModifierInvocation", "src": "10586:9:38"}], "name": "stakeFor", "nameLocation": "10528:8:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5117, "nodeType": "OverrideSpecifier", "overrides": [], "src": "10577:8:38"}, "parameters": {"id": 5116, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5113, "mutability": "mutable", "name": "account", "nameLocation": "10545:7:38", "nodeType": "VariableDeclaration", "scope": 5258, "src": "10537:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5112, "name": "address", "nodeType": "ElementaryTypeName", "src": "10537:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5115, "mutability": "mutable", "name": "amount", "nameLocation": "10562:6:38", "nodeType": "VariableDeclaration", "scope": 5258, "src": "10554:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5114, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10554:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10536:33:38"}, "returnParameters": {"id": 5120, "nodeType": "ParameterList", "parameters": [], "src": "10596:0:38"}, "scope": 5470, "src": "10519:1006:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [32043], "body": {"id": 5451, "nodeType": "Block", "src": "11915:1235:38", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5282, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5275, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5270, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "11933:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 5273, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11948:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5272, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11940:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5271, "name": "address", "nodeType": "ElementaryTypeName", "src": "11940:7:38", "typeDescriptions": {}}}, "id": 5274, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11940:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11933:17:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5276, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5263, "src": "11954:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 5279, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11969:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5278, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11961:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5277, "name": "address", "nodeType": "ElementaryTypeName", "src": "11961:7:38", "typeDescriptions": {}}}, "id": 5280, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11961:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "11954:17:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "11933:38:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5283, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "11973:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 5284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ZERO_ADDRESS_NOT_ALLOWED", "nodeType": "MemberAccess", "referencedDeclaration": 35426, "src": "11973:30:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5269, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11925:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5285, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11925:79:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5286, "nodeType": "ExpressionStatement", "src": "11925:79:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5293, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5288, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5263, "src": "12022:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"id": 5291, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "12037:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_StakerVault_$5470", "typeString": "contract StakerVault"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_StakerVault_$5470", "typeString": "contract StakerVault"}], "id": 5290, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12029:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5289, "name": "address", "nodeType": "ElementaryTypeName", "src": "12029:7:38", "typeDescriptions": {}}}, "id": 5292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12029:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12022:20:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5294, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "12044:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 5295, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SAME_ADDRESS_NOT_ALLOWED", "nodeType": "MemberAccess", "referencedDeclaration": 35420, "src": "12044:30:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5287, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12014:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5296, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12014:61:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5297, "nodeType": "ExpressionStatement", "src": "12014:61:38"}, {"assignments": [5300], "declarations": [{"constant": false, "id": 5300, "mutability": "mutable", "name": "token_", "nameLocation": "12092:6:38", "nodeType": "VariableDeclaration", "scope": 5451, "src": "12085:13:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}, "typeName": {"id": 5299, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5298, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 34600, "src": "12085:6:38"}, "referencedDeclaration": 34600, "src": "12085:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 5304, "initialValue": {"arguments": [{"id": 5302, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4294, "src": "12108:5:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5301, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34600, "src": "12101:6:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$34600_$", "typeString": "type(contract IERC20)"}}, "id": 5303, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12101:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "12085:29:38"}, {"assignments": [5307], "declarations": [{"constant": false, "id": 5307, "mutability": "mutable", "name": "pool", "nameLocation": "12139:4:38", "nodeType": "VariableDeclaration", "scope": 5451, "src": "12124:19:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}, "typeName": {"id": 5306, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5305, "name": "ILiquidityPool", "nodeType": "IdentifierPath", "referencedDeclaration": 33980, "src": "12124:14:38"}, "referencedDeclaration": 33980, "src": "12124:14:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "visibility": "internal"}], "id": 5315, "initialValue": {"arguments": [{"arguments": [{"id": 5312, "name": "token_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5300, "src": "12186:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}], "id": 5311, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12178:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5310, "name": "address", "nodeType": "ElementaryTypeName", "src": "12178:7:38", "typeDescriptions": {}}}, "id": 5313, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12178:15:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5308, "name": "addressProvider", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4292, "src": "12146:15:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IAddressProvider_$31927", "typeString": "contract IAddressProvider"}}, "id": 5309, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPoolForToken", "nodeType": "MemberAccess", "referencedDeclaration": 31706, "src": "12146:31:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_ILiquidityPool_$33980_$", "typeString": "function (address) view external returns (contract ILiquidityPool)"}}, "id": 5314, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12146:48:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "nodeType": "VariableDeclarationStatement", "src": "12124:70:38"}, {"assignments": [5318], "declarations": [{"constant": false, "id": 5318, "mutability": "mutable", "name": "srcAccountInfo_", "nameLocation": "12223:15:38", "nodeType": "VariableDeclaration", "scope": 5451, "src": "12204:34:38", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo"}, "typeName": {"id": 5317, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5316, "name": "AccountInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 4287, "src": "12204:11:38"}, "referencedDeclaration": 4287, "src": "12204:11:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage_ptr", "typeString": "struct StakerVault.AccountInfo"}}, "visibility": "internal"}], "id": 5322, "initialValue": {"baseExpression": {"id": 5319, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "12241:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 5321, "indexExpression": {"id": 5320, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12253:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12241:16:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "12204:53:38"}, {"assignments": [5324], "declarations": [{"constant": false, "id": 5324, "mutability": "mutable", "name": "allowance_", "nameLocation": "12275:10:38", "nodeType": "VariableDeclaration", "scope": 5451, "src": "12267:18:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5323, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12267:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5331, "initialValue": {"baseExpression": {"baseExpression": {"id": 5325, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4305, "src": "12288:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 5327, "indexExpression": {"id": 5326, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12300:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12288:16:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 5330, "indexExpression": {"expression": {"id": 5328, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "12305:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5329, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "12305:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12288:28:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "12267:49:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5348, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5340, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5336, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5333, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12347:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 5334, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "12354:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5335, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "12354:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12347:17:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5339, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5337, "name": "allowance_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5324, "src": "12368:10:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 5338, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5265, "src": "12382:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12368:20:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12347:41:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5347, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 5343, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5307, "src": "12400:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}], "id": 5342, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12392:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5341, "name": "address", "nodeType": "ElementaryTypeName", "src": "12392:7:38", "typeDescriptions": {}}}, "id": 5344, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12392:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 5345, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "12409:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5346, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "12409:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12392:27:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12347:72:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5349, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "12433:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 5350, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "UNAUTHORIZED_ACCESS", "nodeType": "MemberAccess", "referencedDeclaration": 35417, "src": "12433:25:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5332, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12326:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5351, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12326:142:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5352, "nodeType": "ExpressionStatement", "src": "12326:142:38"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5357, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5354, "name": "srcAccountInfo_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5318, "src": "12486:15:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_memory_ptr", "typeString": "struct StakerVault.AccountInfo memory"}}, "id": 5355, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "12486:23:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 5356, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5265, "src": "12513:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12486:33:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5358, "name": "Error", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35631, "src": "12521:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Error_$35631_$", "typeString": "type(library Error)"}}, "id": 5359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INSUFFICIENT_BALANCE", "nodeType": "MemberAccess", "referencedDeclaration": 35384, "src": "12521:26:38", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5353, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12478:7:38", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5360, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12478:70:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5361, "nodeType": "ExpressionStatement", "src": "12478:70:38"}, {"assignments": [5363], "declarations": [{"constant": false, "id": 5363, "mutability": "mutable", "name": "lpGauge_", "nameLocation": "12566:8:38", "nodeType": "VariableDeclaration", "scope": 5451, "src": "12558:16:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5362, "name": "address", "nodeType": "ElementaryTypeName", "src": "12558:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 5365, "initialValue": {"id": 5364, "name": "lpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4289, "src": "12577:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "12558:26:38"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5371, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5366, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5363, "src": "12598:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 5369, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12618:1:38", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5368, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12610:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5367, "name": "address", "nodeType": "ElementaryTypeName", "src": "12610:7:38", "typeDescriptions": {}}}, "id": 5370, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12610:10:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12598:22:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5380, "nodeType": "IfStatement", "src": "12594:91:38", "trueBody": {"id": 5379, "nodeType": "Block", "src": "12622:63:38", "statements": [{"expression": {"arguments": [{"id": 5376, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12670:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 5373, "name": "lpGauge_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5363, "src": "12645:8:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5372, "name": "ILpGauge", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 36809, "src": "12636:8:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ILpGauge_$36809_$", "typeString": "type(contract ILpGauge)"}}, "id": 5374, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12636:18:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ILpGauge_$36809", "typeString": "contract ILpGauge"}}, "id": 5375, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "userCheckpoint", "nodeType": "MemberAccess", "referencedDeclaration": 36796, "src": "12636:33:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$", "typeString": "function (address) external returns (bool)"}}, "id": 5377, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12636:38:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5378, "nodeType": "ExpressionStatement", "src": "12636:38:38"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5383, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5381, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12699:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 5382, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5263, "src": "12706:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12699:10:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5393, "nodeType": "IfStatement", "src": "12695:85:38", "trueBody": {"id": 5392, "nodeType": "Block", "src": "12711:69:38", "statements": [{"expression": {"arguments": [{"id": 5387, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12752:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5388, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5263, "src": "12757:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5389, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5265, "src": "12762:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5384, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5307, "src": "12725:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}, "id": 5386, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "handleLpTokenTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 33868, "src": "12725:26:38", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256) external"}}, "id": 5390, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12725:44:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5391, "nodeType": "ExpressionStatement", "src": "12725:44:38"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5413, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 5405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5394, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12794:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 5395, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "12801:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5396, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "12801:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12794:17:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5404, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5398, "name": "allowance_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5324, "src": "12815:10:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"arguments": [{"id": 5401, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12834:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 5400, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12834:7:38", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 5399, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "12829:4:38", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 5402, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12829:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 5403, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "12829:17:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12815:31:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12794:52:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5412, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 5408, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5307, "src": "12858:4:38", "typeDescriptions": {"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ILiquidityPool_$33980", "typeString": "contract ILiquidityPool"}], "id": 5407, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12850:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5406, "name": "address", "nodeType": "ElementaryTypeName", "src": "12850:7:38", "typeDescriptions": {}}}, "id": 5409, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12850:13:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 5410, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "12867:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5411, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "12867:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "12850:27:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12794:83:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5424, "nodeType": "IfStatement", "src": "12790:184:38", "trueBody": {"id": 5423, "nodeType": "Block", "src": "12879:95:38", "statements": [{"expression": {"id": 5421, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 5414, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4305, "src": "12925:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 5418, "indexExpression": {"id": 5415, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12937:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12925:16:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 5419, "indexExpression": {"expression": {"id": 5416, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "12942:3:38", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5417, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "12942:10:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12925:28:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 5420, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5265, "src": "12957:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12925:38:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5422, "nodeType": "ExpressionStatement", "src": "12925:38:38"}]}}, {"expression": {"id": 5433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 5425, "name": "accountInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4299, "src": "12983:11:38", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AccountInfo_$4287_storage_$", "typeString": "mapping(address => struct StakerVault.AccountInfo storage ref)"}}, "id": 5427, "indexExpression": {"id": 5426, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "12995:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12983:16:38", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountInfo_$4287_storage", "typeString": "struct StakerVault.AccountInfo storage ref"}}, "id": 5428, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": 4284, "src": "12983:24:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"arguments": [{"id": 5431, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5265, "src": "13019:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5430, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13011:7:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 5429, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "13011:7:38", "typeDescriptions": {}}}, "id": 5432, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13011:15:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "12983:43:38", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 5434, "nodeType": "ExpressionStatement", "src": "12983:43:38"}, {"expression": {"id": 5437, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5435, "name": "_poolTotalStaked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4307, "src": "13037:16:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 5436, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5265, "src": "13057:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13037:26:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5438, "nodeType": "ExpressionStatement", "src": "13037:26:38"}, {"expression": {"arguments": [{"id": 5442, "name": "dst", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5263, "src": "13094:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5443, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5265, "src": "13099:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5439, "name": "token_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5300, "src": "13074:6:38", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$34600", "typeString": "contract IERC20"}}, "id": 5441, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 34631, "src": "13074:19:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$34600_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$34600_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 5444, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13074:32:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5445, "nodeType": "ExpressionStatement", "src": "13074:32:38"}, {"eventCall": {"arguments": [{"id": 5447, "name": "src", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5261, "src": "13131:3:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5448, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5265, "src": "13136:6:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5446, "name": "Unstaked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31991, "src": "13122:8:38", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 5449, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13122:21:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5450, "nodeType": "EmitStatement", "src": "13117:26:38"}]}, "documentation": {"id": 5259, "nodeType": "StructuredDocumentation", "src": "11531:271:38", "text": " @notice Unstake tokens on behalf of another account.\n @dev Needs to be approved.\n @param src Account for which tokens will be unstaked.\n @param dst Account receiving the tokens.\n @param amount Amount of token to unstake/receive."}, "functionSelector": "4974c679", "id": 5452, "implemented": true, "kind": "function", "modifiers": [], "name": "unstakeFor", "nameLocation": "11816:10:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5267, "nodeType": "OverrideSpecifier", "overrides": [], "src": "11906:8:38"}, "parameters": {"id": 5266, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5261, "mutability": "mutable", "name": "src", "nameLocation": "11844:3:38", "nodeType": "VariableDeclaration", "scope": 5452, "src": "11836:11:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5260, "name": "address", "nodeType": "ElementaryTypeName", "src": "11836:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5263, "mutability": "mutable", "name": "dst", "nameLocation": "11865:3:38", "nodeType": "VariableDeclaration", "scope": 5452, "src": "11857:11:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5262, "name": "address", "nodeType": "ElementaryTypeName", "src": "11857:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5265, "mutability": "mutable", "name": "amount", "nameLocation": "11886:6:38", "nodeType": "VariableDeclaration", "scope": 5452, "src": "11878:14:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5264, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11878:7:38", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11826:72:38"}, "returnParameters": {"id": 5268, "nodeType": "ParameterList", "parameters": [], "src": "11915:0:38"}, "scope": 5470, "src": "11807:1343:38", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [28699], "body": {"id": 5468, "nodeType": "Block", "src": "13241:73:38", "statements": [{"expression": {"arguments": [{"expression": {"id": 5463, "name": "Roles", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33585, "src": "13281:5:38", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Roles_$33585_$", "typeString": "type(library Roles)"}}, "id": 5464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GOVERNANCE", "nodeType": "MemberAccess", "referencedDeclaration": 33554, "src": "13281:16:38", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5465, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5454, "src": "13299:7:38", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 5460, "name": "_roleManager", "nodeType": "Identifier", "overloadedDeclarations": [5499], "referencedDeclaration": 5499, "src": "13258:12:38", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IRoleManager_$36932_$", "typeString": "function () view returns (contract IRoleManager)"}}, "id": 5461, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13258:14:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IRoleManager_$36932", "typeString": "contract IRoleManager"}}, "id": 5462, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "hasRole", "nodeType": "MemberAccess", "referencedDeclaration": 36881, "src": "13258:22:38", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$", "typeString": "function (bytes32,address) view external returns (bool)"}}, "id": 5466, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13258:49:38", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 5459, "id": 5467, "nodeType": "Return", "src": "13251:56:38"}]}, "id": 5469, "implemented": true, "kind": "function", "modifiers": [], "name": "_isAuthorizedToPause", "nameLocation": "13165:20:38", "nodeType": "FunctionDefinition", "overrides": {"id": 5456, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13217:8:38"}, "parameters": {"id": 5455, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5454, "mutability": "mutable", "name": "account", "nameLocation": "13194:7:38", "nodeType": "VariableDeclaration", "scope": 5469, "src": "13186:15:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5453, "name": "address", "nodeType": "ElementaryTypeName", "src": "13186:7:38", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "13185:17:38"}, "returnParameters": {"id": 5459, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5458, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 5469, "src": "13235:4:38", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 5457, "name": "bool", "nodeType": "ElementaryTypeName", "src": "13235:4:38", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "13234:6:38"}, "scope": 5470, "src": "13156:158:38", "stateMutability": "view", "virtual": false, "visibility": "internal"}], "scope": 5471, "src": "1160:12156:38", "usedErrors": []}], "src": "45:13272:38"}, "bytecode": "60c06040523480156200001157600080fd5b506040516200311938038062003119833981016040819052620000349162000106565b62000053816001600160a01b03166200006b60201b620027201760201c565b6001600160a01b039081166080521660a0526200012d565b6040516321f8a72160e01b81526a3937b632a6b0b730b3b2b960a91b60048201526000906001600160a01b038316906321f8a72190602401602060405180830381865afa158015620000c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e7919062000106565b92915050565b6001600160a01b03811681146200010357600080fd5b50565b6000602082840312156200011957600080fd5b81516200012681620000ed565b9392505050565b60805160a051612f6b620001ae6000396000818161025b0152818161094901528181610db2015281816111c601528181611a3201528181611c7401528181611f6201526121fb0152600081816101e0015281816116130152818161181001528181611aff015281816123e40152818161255901526128070152612f6b6000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c80638456cb5911610104578063ba4ac711116100a2578063dd62ed3e11610071578063dd62ed3e14610481578063e7945d00146104ba578063fc0c546a146104cd578063fcb70010146104e057600080fd5b8063ba4ac71114610413578063c4d66de81461041b578063c5ec78741461042e578063d828c9861461044857600080fd5b8063a7310b58116100de578063a7310b581461038c578063a853ba2f146103e0578063a9059cbb146103f3578063b187bd261461040657600080fd5b80638456cb59146103695780638aa01ea914610371578063a694fc3a1461037957600080fd5b8063313ce5671161017c5780636a278cd91161014b5780636a278cd9146102f057806370a0823114610303578063756b2693146103435780637aa497251461035657600080fd5b8063313ce567146102a35780633f4ba83a146102bd5780634974c679146102c55780635790a0c8146102d857600080fd5b806323b872dd116101b857806323b872dd146102435780632954018c146102565780632e17de781461027d5780632ee409081461029057600080fd5b8062435da5146101de578063095ea7b31461021d57806321df0da714610232575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b61023061022b366004612b86565b6104f8565b005b6001546001600160a01b0316610200565b610230610251366004612bb2565b6105f9565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b61023061028b366004612bf3565b610b27565b61023061029e366004612b86565b610b35565b6102ab61100f565b60405160ff9091168152602001610214565b61023061107d565b6102306102d3366004612bb2565b6110e1565b6102e061158b565b6040519015158152602001610214565b6102306102fe366004612b86565b611607565b610335610311366004612c0c565b6001600160a01b03166000908152600260205260409020546001600160801b031690565b604051908152602001610214565b610230610351366004612c0c565b61180e565b610230610364366004612c0c565b611afd565b610230611cf3565b600454610335565b610230610387366004612bf3565b611d5a565b6103c061039a366004612c0c565b6002602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610214565b6103356103ee366004612c0c565b611d64565b610230610401366004612b86565b611dc0565b6000546102e09060ff1681565b6103356121f6565b610230610429366004612c0c565b6122ec565b60005461020090630100000090046001600160a01b031681565b610335610456366004612c0c565b6001600160a01b0316600090815260026020526040902054600160801b90046001600160801b031690565b61033561048f366004612c29565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6102e06104c8366004612bf3565b6123cb565b600154610200906001600160a01b031681565b6102306104ee366004612b86565b61254d565b905090565b60005460408051808201909152601281527118dbdb9d1c9858dd081a5cc81c185d5cd95960721b60208201529060ff161561054f5760405162461bcd60e51b81526004016105469190612c8e565b60405180910390fd5b506040805180820190915260188152600080516020612f1683398151915260208201526001600160a01b0383166105995760405162461bcd60e51b81526004016105469190612c8e565b503360008181526003602090815260408083206001600160a01b03871680855290835292819020859055518481529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050565b60005460408051808201909152601281527118dbdb9d1c9858dd081a5cc81c185d5cd95960721b60208201529060ff16156106475760405162461bcd60e51b81526004016105469190612c8e565b506001600160a01b0383161580159061066857506001600160a01b03821615155b604051806040016040528060188152602001600080516020612f16833981519152815250906106aa5760405162461bcd60e51b81526004016105469190612c8e565b50816001600160a01b0316836001600160a01b03161415604051806040016040528060188152602001771cd85b59481859191c995cdcc81b9bdd08185b1b1bddd95960421b815250906107105760405162461bcd60e51b81526004016105469190612c8e565b506000336001600160a01b038516141561072d5750600019610753565b506001600160a01b03831660009081526003602090815260408083203384529091529020545b604080518082019091526016815275696e73756666696369656e7420616c6c6f77616e636560501b6020820152828210156107a15760405162461bcd60e51b81526004016105469190612c8e565b506001600160a01b0384166000908152600260209081526040918290208251808401845290546001600160801b03808216808452600160801b909204168284015283518085019094526014845273696e73756666696369656e742062616c616e636560601b92840192909252918482101561082f5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b031680156109245760405163b07b709b60e01b81526001600160a01b03888116600483015282169063b07b709b906024016020604051808303816000875af1158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190612cc1565b5060405163b07b709b60e01b81526001600160a01b03878116600483015282169063b07b709b906024016020604051808303816000875af11580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190612cc1565b505b600154604051630956fef360e21b81526001600160a01b0391821660048201526000917f0000000000000000000000000000000000000000000000000000000000000000169063255bfbcc90602401602060405180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190612ce3565b604051631e36c19360e31b81529091506001600160a01b0382169063f1b60c98906109e7908b908b908b90600401612d00565b600060405180830381600087803b158015610a0157600080fd5b505af1158015610a15573d6000803e3d6000fd5b50505050610a2c86846127a090919063ffffffff16565b6001600160a01b0389811660009081526002602052604080822080546001600160801b0319166001600160801b03958616179055918a16815290812080548993919291610a7b91859116612d3a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000198514610ad0578585036001600160a01b03891660009081526003602090815260408083203384529091529020555b866001600160a01b0316886001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef88604051610b1591815260200190565b60405180910390a35050505050505050565b610b323333836110e1565b50565b60005460408051808201909152601281527118dbdb9d1c9858dd081a5cc81c185d5cd95960721b60208201529060ff1615610b835760405162461bcd60e51b81526004016105469190612c8e565b506040805180820190915260188152600080516020612f1683398151915260208201526001600160a01b038316610bcd5760405162461bcd60e51b81526004016105469190612c8e565b506001546040516370a0823160e01b81523360048201526001600160a01b0390911690829082906370a0823190602401602060405180830381865afa158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e9190612d65565b101560405180604001604052806014815260200173696e73756666696369656e742062616c616e636560601b81525090610c8b5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b03168015610d135760405163b07b709b60e01b81526001600160a01b03858116600483015282169063b07b709b906024016020604051808303816000875af1158015610ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d119190612cc1565b505b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e9190612d65565b9050336001600160a01b03861614610e8657604051630956fef360e21b81526001600160a01b0384811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063255bfbcc90602401602060405180830381865afa158015610dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1f9190612ce3565b604051631e36c19360e31b81529091506001600160a01b0382169063f1b60c9890610e529033908a908a90600401612d00565b600060405180830381600087803b158015610e6c57600080fd5b505af1158015610e80573d6000803e3d6000fd5b50505050505b610e9b6001600160a01b0384163330876127a5565b6040516370a0823160e01b815230600482015260009082906001600160a01b038616906370a0823190602401602060405180830381865afa158015610ee4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f089190612d65565b610f129190612d7e565b90508481146040518060400160405280600e81526020016d1a5b9d985b1a5908185b5bdd5b9d60921b81525090610f5c5760405162461bcd60e51b81526004016105469190612c8e565b506001600160a01b03861660009081526002602052604081208054839290610f8e9084906001600160801b0316612d3a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508060046000828254610fc49190612d95565b90915550506040518581526001600160a01b038716907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a2505050505050565b6001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015611059573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190612dad565b61108633612803565b604051806040016040528060178152602001766e6f7420617574686f72697a656420746f20706175736560481b815250906110d45760405162461bcd60e51b81526004016105469190612c8e565b506000805460ff19169055565b6001600160a01b0383161580159061110157506001600160a01b03821615155b604051806040016040528060188152602001600080516020612f16833981519152815250906111435760405162461bcd60e51b81526004016105469190612c8e565b506040805180820190915260188152771cd85b59481859191c995cdcc81b9bdd08185b1b1bddd95960421b60208201526001600160a01b03831630141561119d5760405162461bcd60e51b81526004016105469190612c8e565b50600154604051630956fef360e21b81526001600160a01b0391821660048201819052916000917f00000000000000000000000000000000000000000000000000000000000000009091169063255bfbcc90602401602060405180830381865afa15801561120f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112339190612ce3565b6001600160a01b03861660008181526002602090815260408083208151808301835290546001600160801b038082168352600160801b90910416818401528484526003835281842033808652935292205493945090929114806112965750848110155b806112a957506001600160a01b03831633145b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906112f35760405162461bcd60e51b81526004016105469190612c8e565b508151604080518082019091526014815273696e73756666696369656e742062616c616e636560601b6020820152906001600160801b031686111561134b5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b031680156113d35760405163b07b709b60e01b81526001600160a01b03898116600483015282169063b07b709b906024016020604051808303816000875af11580156113ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d19190612cc1565b505b866001600160a01b0316886001600160a01b03161461144f57604051631e36c19360e31b81526001600160a01b0385169063f1b60c989061141c908b908b908b90600401612d00565b600060405180830381600087803b15801561143657600080fd5b505af115801561144a573d6000803e3d6000fd5b505050505b6001600160a01b038816331480159061146a57506000198214155b801561147f57506001600160a01b0384163314155b156114bd576001600160a01b0388166000908152600360209081526040808320338452909152812080548892906114b7908490612d7e565b90915550505b6001600160a01b038816600090815260026020526040812080548892906114ee9084906001600160801b0316612dd0565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555085600460008282546115249190612d7e565b9091555061153e90506001600160a01b03861688886128a5565b876001600160a01b03167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758760405161157991815260200190565b60405180910390a25050505050505050565b60008054630100000090046001600160a01b0316806115ac57600091505090565b806001600160a01b0316635790a0c86040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156115e757600080fd5b505af11580156115fb573d6000803e3d6000fd5b50505050600191505090565b6530b1ba34b7b760d11b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b8152600481018390523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa15801561167f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a39190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906116ed5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b031680156117755760405163b07b709b60e01b81526001600160a01b03858116600483015282169063b07b709b906024016020604051808303816000875af115801561174f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117739190612cc1565b505b6001600160a01b038416600090815260026020526040902054600160801b90046001600160801b0316838111156117e1578381036001600160a01b038616600090815260026020526040902080546001600160801b03928316600160801b029216919091179055611807565b6001600160a01b038516600090815260026020526040902080546001600160801b031690555b5050505050565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015611888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ac9190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906118f65760405162461bcd60e51b81526004016105469190612c8e565b50806001600160a01b0316631f3a0e416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119599190612cc1565b156040518060400160405280600c81526020016b19d85d59d9481ada5b1b195960a21b8152509061199d5760405162461bcd60e51b81526004016105469190612c8e565b50600060039054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119ee57600080fd5b505af1158015611a02573d6000803e3d6000fd5b5050505080600060036101000a8154816001600160a01b0302191690836001600160a01b03160217905550611a5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166128da565b60015460405163430e2e5760e01b81526001600160a01b03918216600482015291169063430e2e5790602401600060405180830381600087803b158015611aa557600080fd5b505af1158015611ab9573d6000803e3d6000fd5b50506040516001600160a01b03841681527fa22e3a1f87b5ab0d1453da4c21e9ea8a03efb6295f0eb8b98f9411514e15daf39250602001905060405180910390a150565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015611b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9b9190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b81525090611be55760405162461bcd60e51b81526004016105469190612c8e565b50600054604080518082019091526013815272726f6c6520616c72656164792065786973747360681b602082015290630100000090046001600160a01b031615611c425760405162461bcd60e51b81526004016105469190612c8e565b50600080546001600160a01b038084166301000000026301000000600160b81b031990921691909117909155611c99907f0000000000000000000000000000000000000000000000000000000000000000166128da565b60015460405163430e2e5760e01b81526001600160a01b03918216600482015291169063430e2e5790602401600060405180830381600087803b158015611cdf57600080fd5b505af1158015611807573d6000803e3d6000fd5b611cfc33612803565b604051806040016040528060178152602001766e6f7420617574686f72697a656420746f20706175736560481b81525090611d4a5760405162461bcd60e51b81526004016105469190612c8e565b506000805460ff19166001179055565b610b323382610b35565b6001600160a01b03811660009081526002602090815260408083208151808301909252546001600160801b03808216808452600160801b909204169282018390529091611db091612d3a565b6001600160801b03169392505050565b60005460408051808201909152601281527118dbdb9d1c9858dd081a5cc81c185d5cd95960721b60208201529060ff1615611e0e5760405162461bcd60e51b81526004016105469190612c8e565b506040805180820190915260188152600080516020612f1683398151915260208201526001600160a01b038316611e585760405162461bcd60e51b81526004016105469190612c8e565b5060408051808201909152601981527f73656c662d7472616e73666572206e6f7420616c6c6f776564000000000000006020820152336001600160a01b0384161415611eb75760405162461bcd60e51b81526004016105469190612c8e565b50336000908152600260209081526040918290208251808401845290546001600160801b03808216808452600160801b909204168284015283518085019094526014845273696e73756666696369656e742062616c616e636560601b928401929092529190831115611f3c5760405162461bcd60e51b81526004016105469190612c8e565b50600154604051630956fef360e21b81526001600160a01b0391821660048201526000917f0000000000000000000000000000000000000000000000000000000000000000169063255bfbcc90602401602060405180830381865afa158015611fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fcd9190612ce3565b604051631e36c19360e31b81529091506001600160a01b0382169063f1b60c989061200090339088908890600401612d00565b600060405180830381600087803b15801561201a57600080fd5b505af115801561202e573d6000803e3d6000fd5b5050600054630100000090046001600160a01b031691505080156121255760405163b07b709b60e01b81523360048201526001600160a01b0382169063b07b709b906024016020604051808303816000875af1158015612092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b69190612cc1565b5060405163b07b709b60e01b81526001600160a01b03868116600483015282169063b07b709b906024016020604051808303816000875af11580156120ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121239190612cc1565b505b82516001600160801b03168490033360009081526002602052604080822080546001600160801b0319166001600160801b039485161790556001600160a01b038816825281208054879391929161217e91859116612d3a565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550846001600160a01b0316336001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516121e791815260200190565b60405180910390a35050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635d138a346040518163ffffffff1660e01b8152600401600060405180830381865afa158015612257573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261227f9190810190612e1e565b90506000805b82518110156122e557600260008483815181106122a4576122a4612ee3565b6020908102919091018101516001600160a01b03168252810191909152604001600020546122db906001600160801b031683612d95565b9150600101612285565b5092915050565b60005462010000900460ff1661230d57600054610100900460ff1615612311565b303b155b6123745760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610546565b60005462010000900460ff16158015612399576000805462ffff001916620101001790555b600180546001600160a01b0319166001600160a01b03841617905580156123c7576000805462ff0000191690555b5050565b60007034b7333630ba34b7b72fb6b0b730b3b2b960791b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b8152600481018390523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015612450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124749190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906124be5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b03166124df5760009150612547565b60005460405162e7945d60e81b81526004810185905263010000009091046001600160a01b03169063e7945d0090602401600060405180830381600087803b15801561252a57600080fd5b505af115801561253e573d6000803e3d6000fd5b50505050600191505b50919050565b6530b1ba34b7b760d11b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b8152600481018390523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa1580156125c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e99190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906126335760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b031680156126bb5760405163b07b709b60e01b81526001600160a01b03858116600483015282169063b07b709b906024016020604051808303816000875af1158015612695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b99190612cc1565b505b6001600160a01b038416600090815260026020526040902080548491906010906126f6908490600160801b90046001600160801b0316612d3a565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050565b6040516321f8a72160e01b81526a3937b632a6b0b730b3b2b960a91b60048201526000906001600160a01b038316906321f8a721906024015b602060405180830381865afa158015612776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061279a9190612ce3565b92915050565b900390565b6127fd846323b872dd60e01b8585856040516024016127c693929190612d00565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261291c565b50505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201526001600160a01b03848116602483015291909116906391d1485490604401602060405180830381865afa158015612881573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061279a9190612cc1565b6040516001600160a01b0383166024820152604481018290526128d590849063a9059cbb60e01b906064016127c6565b505050565b6040516321f8a72160e01b81526f34b7333630ba34b7b726b0b730b3b2b960811b60048201526000906001600160a01b038316906321f8a72190602401612759565b6000612971826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129ee9092919063ffffffff16565b8051909150156128d5578080602001905181019061298f9190612cc1565b6128d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610546565b60606129fd8484600085612a07565b90505b9392505050565b606082471015612a685760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610546565b6001600160a01b0385163b612abf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610546565b600080866001600160a01b03168587604051612adb9190612ef9565b60006040518083038185875af1925050503d8060008114612b18576040519150601f19603f3d011682016040523d82523d6000602084013e612b1d565b606091505b5091509150612b2d828286612b38565b979650505050505050565b60608315612b47575081612a00565b825115612b575782518084602001fd5b8160405162461bcd60e51b81526004016105469190612c8e565b6001600160a01b0381168114610b3257600080fd5b60008060408385031215612b9957600080fd5b8235612ba481612b71565b946020939093013593505050565b600080600060608486031215612bc757600080fd5b8335612bd281612b71565b92506020840135612be281612b71565b929592945050506040919091013590565b600060208284031215612c0557600080fd5b5035919050565b600060208284031215612c1e57600080fd5b8135612a0081612b71565b60008060408385031215612c3c57600080fd5b8235612c4781612b71565b91506020830135612c5781612b71565b809150509250929050565b60005b83811015612c7d578181015183820152602001612c65565b838111156127fd5750506000910152565b6020815260008251806020840152612cad816040850160208701612c62565b601f01601f19169190910160400192915050565b600060208284031215612cd357600080fd5b81518015158114612a0057600080fd5b600060208284031215612cf557600080fd5b8151612a0081612b71565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160801b03808316818516808303821115612d5c57612d5c612d24565b01949350505050565b600060208284031215612d7757600080fd5b5051919050565b600082821015612d9057612d90612d24565b500390565b60008219821115612da857612da8612d24565b500190565b600060208284031215612dbf57600080fd5b815160ff81168114612a0057600080fd5b60006001600160801b0383811690831681811015612df057612df0612d24565b039392505050565b634e487b7160e01b600052604160045260246000fd5b8051612e1981612b71565b919050565b60006020808385031215612e3157600080fd5b825167ffffffffffffffff80821115612e4957600080fd5b818501915085601f830112612e5d57600080fd5b815181811115612e6f57612e6f612df8565b8060051b604051601f19603f83011681018181108582111715612e9457612e94612df8565b604052918252848201925083810185019188831115612eb257600080fd5b938501935b82851015612ed757612ec885612e0e565b84529385019392850192612eb7565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008251612f0b818460208701612c62565b919091019291505056fe7a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000a2646970667358221220d48e66fac0273c735d793e3f99fdbb332375ede8bf3563d9c675c595a581ef2564736f6c634300080a0033", "bytecodeSha1": "fb10f59e1a650c334e66d221f7eeab66d2ed486d", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "StakerVault", "coverageMap": {"branches": {"0": {"StakerVault.initialize": {"134": [2369, 2382, true], "135": [2369, 2417, true]}}, "109": {"Pausable.pause": {"136": [315, 347, true]}}, "116": {}, "119": {}, "121": {}, "122": {}, "123": {}, "127": {}, "128": {}, "129": {}, "130": {}, "131": {}, "133": {}, "140": {}, "143": {}, "147": {}, "149": {}, "151": {}, "17": {}, "182": {}, "183": {}, "188": {}, "189": {}, "19": {"SafeERC20._callOptionalReturn": {"137": [3735, 3756, false], "138": [3819, 3849, true]}}, "190": {}, "191": {}, "20": {"Address.functionCallWithValue": {"129": [5145, 5175, true]}, "Address.verifyCallResult": {"130": [7735, 7742, false], "131": [7876, 7897, false]}}, "38": {"StakerVault.approve": {"94": [6104, 6125, true]}, "StakerVault.decreaseActionLockedBalance": {"120": [7291, 7313, false], "121": [7476, 7505, false]}, "StakerVault.increaseActionLockedBalance": {"128": [6699, 6721, false]}, "StakerVault.initializeLpGauge": {"123": [2249, 2270, true]}, "StakerVault.stakeFor": {"103": [10614, 10635, true], "104": [10725, 10763, true], "105": [10843, 10865, false], "106": [11007, 11028, false], "107": [11347, 11363, true]}, "StakerVault.transfer": {"124": [3105, 3126, true], "125": [3177, 3198, true], "126": [3317, 3347, true], "127": [3563, 3585, false]}, "StakerVault.transferFrom": {"95": [4423, 4440, false], "96": [4444, 4461, true], "97": [4555, 4565, true], "98": [4712, 4729, false], "99": [4889, 4916, true], "100": [5076, 5095, true], "101": [5175, 5197, false], "102": [5662, 5700, false]}, "StakerVault.unstakeFor": {"108": [11933, 11950, false], "109": [11954, 11971, true], "110": [12022, 12042, true], "111": [12347, 12364, true], "112": [12368, 12388, true], "113": [12392, 12419, true], "114": [12486, 12519, true], "115": [12598, 12620, false], "116": [12699, 12709, false], "117": [12794, 12811, false], "118": [12815, 12846, false], "119": [12850, 12877, false]}, "StakerVault.updateLpGauge": {"122": [2494, 2522, true]}}, "39": {}, "40": {"Authorization._roleManager": {"132": [666, 718, true], "133": [429, 469, true]}}}, "statements": {"0": {"Initializable._isConstructor": {"75": [3101, 3153]}}, "109": {"Pausable.pause": {"60": [507, 522]}, "Pausable.unpause": {"34": [648, 664]}}, "116": {}, "119": {}, "121": {}, "122": {}, "123": {}, "127": {}, "128": {}, "129": {}, "130": {}, "131": {}, "133": {}, "140": {}, "143": {}, "147": {}, "149": {}, "151": {}, "17": {}, "182": {"AddressProviderHelpers.getInflationManager": {"86": [3191, 3280]}, "AddressProviderHelpers.getRoleManager": {"82": [2679, 2758]}}, "183": {}, "188": {}, "189": {}, "19": {"SafeERC20._callOptionalReturn": {"87": [3811, 3896]}, "SafeERC20.safeTransfer": {"85": [813, 899]}, "SafeERC20.safeTransferFrom": {"83": [1050, 1146]}}, "190": {}, "191": {"UncheckedMath.uncheckedInc": {"73": [197, 209]}, "UncheckedMath.uncheckedSub": {"20": [487, 499]}}, "20": {"Address.functionCall": {"88": [4018, 4077]}, "Address.functionCallWithValue": {"89": [5137, 5218], "90": [5228, 5288], "91": [5382, 5440]}, "Address.verifyCallResult": {"92": [7758, 7775], "93": [8202, 8222]}}, "38": {"StakerVault._isAuthorizedToPause": {"84": [13251, 13307]}, "StakerVault.actionLockedBalanceOf": {"4": [9724, 9771]}, "StakerVault.allowance": {"5": [8819, 8853]}, "StakerVault.approve": {"7": [6096, 6158], "8": [6168, 6209], "9": [6219, 6261]}, "StakerVault.balanceOf": {"2": [8953, 8988]}, "StakerVault.decimals": {"33": [9853, 9888]}, "StakerVault.decreaseActionLockedBalance": {"49": [7329, 7371], "50": [7521, 7644], "51": [7675, 7719]}, "StakerVault.getPoolTotalStaked": {"3": [9082, 9105]}, "StakerVault.getStakedByActions": {"72": [8632, 8672], "74": [8692, 8704]}, "StakerVault.getToken": {"1": [9972, 9984]}, "StakerVault.increaseActionLockedBalance": {"80": [6737, 6779], "81": [6799, 6858]}, "StakerVault.initialize": {"76": [2126, 2140]}, "StakerVault.initializeLpGauge": {"57": [2241, 2290], "58": [2300, 2318], "59": [2328, 2389]}, "StakerVault.poolCheckpoint": {"46": [7875, 7887], "47": [7897, 7932], "48": [7942, 7953], "77": [8153, 8165], "78": [8175, 8222], "79": [8232, 8243]}, "StakerVault.stake": {"61": [10279, 10307]}, "StakerVault.stakeFor": {"24": [10606, 10668], "25": [10717, 10792], "26": [10881, 10923], "27": [11128, 11183], "28": [11204, 11262], "29": [11339, 11386], "30": [11396, 11443], "31": [11454, 11480], "32": [11490, 11518]}, "StakerVault.stakedAndActionLockedBalanceOf": {"62": [9550, 9612]}, "StakerVault.transfer": {"63": [3097, 3159], "64": [3169, 3232], "65": [3309, 3376], "66": [3457, 3512], "67": [3601, 3646], "68": [3660, 3702], "69": [3723, 3838], "70": [3848, 3895], "71": [3906, 3948]}, "StakerVault.transferFrom": {"10": [4415, 4494], "11": [4547, 4598], "12": [4813, 4861], "13": [4881, 4947], "14": [5068, 5124], "15": [5213, 5251], "16": [5265, 5303], "17": [5393, 5437], "18": [5484, 5550], "19": [5560, 5603], "21": [5716, 5785], "22": [5805, 5836]}, "StakerVault.unstake": {"23": [10056, 10098]}, "StakerVault.unstakeFor": {"35": [11925, 12004], "36": [12014, 12075], "37": [12326, 12468], "38": [12478, 12548], "39": [12636, 12674], "40": [12725, 12769], "41": [12925, 12963], "42": [12983, 13026], "43": [13037, 13063], "44": [13074, 13106], "45": [13117, 13143]}, "StakerVault.updateLpGauge": {"52": [2486, 2543], "53": [2553, 2577], "54": [2587, 2605], "55": [2615, 2676], "56": [2686, 2715]}}, "39": {"Authorization._roleManager": {"0": [375, 395]}}, "40": {"AuthorizationBase.roleManager": {"6": [1476, 1497]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.5.0/Address", "AddressProviderHelpers", "AddressProviderKeys", "Authorization", "AuthorizationBase", "Error", "IAction", "IAddressProvider", "IController", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20", "IERC20Full", "IFeeBurner", "IGasBank", "IInflationManager", "ILiquidityPool", "ILpGauge", "IOracleProvider", "IRoleManager", "IStakerVault", "IStrategy", "ISwapperRouter", "IVault", "IVaultReserve", "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable", "Pausable", "Roles", "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20", "ScaledMath", "UncheckedMath"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106101d95760003560e01c80638456cb5911610104578063ba4ac711116100a2578063dd62ed3e11610071578063dd62ed3e14610481578063e7945d00146104ba578063fc0c546a146104cd578063fcb70010146104e057600080fd5b8063ba4ac71114610413578063c4d66de81461041b578063c5ec78741461042e578063d828c9861461044857600080fd5b8063a7310b58116100de578063a7310b581461038c578063a853ba2f146103e0578063a9059cbb146103f3578063b187bd261461040657600080fd5b80638456cb59146103695780638aa01ea914610371578063a694fc3a1461037957600080fd5b8063313ce5671161017c5780636a278cd91161014b5780636a278cd9146102f057806370a0823114610303578063756b2693146103435780637aa497251461035657600080fd5b8063313ce567146102a35780633f4ba83a146102bd5780634974c679146102c55780635790a0c8146102d857600080fd5b806323b872dd116101b857806323b872dd146102435780632954018c146102565780632e17de781461027d5780632ee409081461029057600080fd5b8062435da5146101de578063095ea7b31461021d57806321df0da714610232575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b61023061022b366004612b86565b6104f8565b005b6001546001600160a01b0316610200565b610230610251366004612bb2565b6105f9565b6102007f000000000000000000000000000000000000000000000000000000000000000081565b61023061028b366004612bf3565b610b27565b61023061029e366004612b86565b610b35565b6102ab61100f565b60405160ff9091168152602001610214565b61023061107d565b6102306102d3366004612bb2565b6110e1565b6102e061158b565b6040519015158152602001610214565b6102306102fe366004612b86565b611607565b610335610311366004612c0c565b6001600160a01b03166000908152600260205260409020546001600160801b031690565b604051908152602001610214565b610230610351366004612c0c565b61180e565b610230610364366004612c0c565b611afd565b610230611cf3565b600454610335565b610230610387366004612bf3565b611d5a565b6103c061039a366004612c0c565b6002602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610214565b6103356103ee366004612c0c565b611d64565b610230610401366004612b86565b611dc0565b6000546102e09060ff1681565b6103356121f6565b610230610429366004612c0c565b6122ec565b60005461020090630100000090046001600160a01b031681565b610335610456366004612c0c565b6001600160a01b0316600090815260026020526040902054600160801b90046001600160801b031690565b61033561048f366004612c29565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6102e06104c8366004612bf3565b6123cb565b600154610200906001600160a01b031681565b6102306104ee366004612b86565b61254d565b905090565b60005460408051808201909152601281527118dbdb9d1c9858dd081a5cc81c185d5cd95960721b60208201529060ff161561054f5760405162461bcd60e51b81526004016105469190612c8e565b60405180910390fd5b506040805180820190915260188152600080516020612f1683398151915260208201526001600160a01b0383166105995760405162461bcd60e51b81526004016105469190612c8e565b503360008181526003602090815260408083206001600160a01b03871680855290835292819020859055518481529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050565b60005460408051808201909152601281527118dbdb9d1c9858dd081a5cc81c185d5cd95960721b60208201529060ff16156106475760405162461bcd60e51b81526004016105469190612c8e565b506001600160a01b0383161580159061066857506001600160a01b03821615155b604051806040016040528060188152602001600080516020612f16833981519152815250906106aa5760405162461bcd60e51b81526004016105469190612c8e565b50816001600160a01b0316836001600160a01b03161415604051806040016040528060188152602001771cd85b59481859191c995cdcc81b9bdd08185b1b1bddd95960421b815250906107105760405162461bcd60e51b81526004016105469190612c8e565b506000336001600160a01b038516141561072d5750600019610753565b506001600160a01b03831660009081526003602090815260408083203384529091529020545b604080518082019091526016815275696e73756666696369656e7420616c6c6f77616e636560501b6020820152828210156107a15760405162461bcd60e51b81526004016105469190612c8e565b506001600160a01b0384166000908152600260209081526040918290208251808401845290546001600160801b03808216808452600160801b909204168284015283518085019094526014845273696e73756666696369656e742062616c616e636560601b92840192909252918482101561082f5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b031680156109245760405163b07b709b60e01b81526001600160a01b03888116600483015282169063b07b709b906024016020604051808303816000875af1158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190612cc1565b5060405163b07b709b60e01b81526001600160a01b03878116600483015282169063b07b709b906024016020604051808303816000875af11580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190612cc1565b505b600154604051630956fef360e21b81526001600160a01b0391821660048201526000917f0000000000000000000000000000000000000000000000000000000000000000169063255bfbcc90602401602060405180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190612ce3565b604051631e36c19360e31b81529091506001600160a01b0382169063f1b60c98906109e7908b908b908b90600401612d00565b600060405180830381600087803b158015610a0157600080fd5b505af1158015610a15573d6000803e3d6000fd5b50505050610a2c86846127a090919063ffffffff16565b6001600160a01b0389811660009081526002602052604080822080546001600160801b0319166001600160801b03958616179055918a16815290812080548993919291610a7b91859116612d3a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000198514610ad0578585036001600160a01b03891660009081526003602090815260408083203384529091529020555b866001600160a01b0316886001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef88604051610b1591815260200190565b60405180910390a35050505050505050565b610b323333836110e1565b50565b60005460408051808201909152601281527118dbdb9d1c9858dd081a5cc81c185d5cd95960721b60208201529060ff1615610b835760405162461bcd60e51b81526004016105469190612c8e565b506040805180820190915260188152600080516020612f1683398151915260208201526001600160a01b038316610bcd5760405162461bcd60e51b81526004016105469190612c8e565b506001546040516370a0823160e01b81523360048201526001600160a01b0390911690829082906370a0823190602401602060405180830381865afa158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e9190612d65565b101560405180604001604052806014815260200173696e73756666696369656e742062616c616e636560601b81525090610c8b5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b03168015610d135760405163b07b709b60e01b81526001600160a01b03858116600483015282169063b07b709b906024016020604051808303816000875af1158015610ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d119190612cc1565b505b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e9190612d65565b9050336001600160a01b03861614610e8657604051630956fef360e21b81526001600160a01b0384811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063255bfbcc90602401602060405180830381865afa158015610dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1f9190612ce3565b604051631e36c19360e31b81529091506001600160a01b0382169063f1b60c9890610e529033908a908a90600401612d00565b600060405180830381600087803b158015610e6c57600080fd5b505af1158015610e80573d6000803e3d6000fd5b50505050505b610e9b6001600160a01b0384163330876127a5565b6040516370a0823160e01b815230600482015260009082906001600160a01b038616906370a0823190602401602060405180830381865afa158015610ee4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f089190612d65565b610f129190612d7e565b90508481146040518060400160405280600e81526020016d1a5b9d985b1a5908185b5bdd5b9d60921b81525090610f5c5760405162461bcd60e51b81526004016105469190612c8e565b506001600160a01b03861660009081526002602052604081208054839290610f8e9084906001600160801b0316612d3a565b92506101000a8154816001600160801b0302191690836001600160801b031602179055508060046000828254610fc49190612d95565b90915550506040518581526001600160a01b038716907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a2505050505050565b6001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015611059573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190612dad565b61108633612803565b604051806040016040528060178152602001766e6f7420617574686f72697a656420746f20706175736560481b815250906110d45760405162461bcd60e51b81526004016105469190612c8e565b506000805460ff19169055565b6001600160a01b0383161580159061110157506001600160a01b03821615155b604051806040016040528060188152602001600080516020612f16833981519152815250906111435760405162461bcd60e51b81526004016105469190612c8e565b506040805180820190915260188152771cd85b59481859191c995cdcc81b9bdd08185b1b1bddd95960421b60208201526001600160a01b03831630141561119d5760405162461bcd60e51b81526004016105469190612c8e565b50600154604051630956fef360e21b81526001600160a01b0391821660048201819052916000917f00000000000000000000000000000000000000000000000000000000000000009091169063255bfbcc90602401602060405180830381865afa15801561120f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112339190612ce3565b6001600160a01b03861660008181526002602090815260408083208151808301835290546001600160801b038082168352600160801b90910416818401528484526003835281842033808652935292205493945090929114806112965750848110155b806112a957506001600160a01b03831633145b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906112f35760405162461bcd60e51b81526004016105469190612c8e565b508151604080518082019091526014815273696e73756666696369656e742062616c616e636560601b6020820152906001600160801b031686111561134b5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b031680156113d35760405163b07b709b60e01b81526001600160a01b03898116600483015282169063b07b709b906024016020604051808303816000875af11580156113ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d19190612cc1565b505b866001600160a01b0316886001600160a01b03161461144f57604051631e36c19360e31b81526001600160a01b0385169063f1b60c989061141c908b908b908b90600401612d00565b600060405180830381600087803b15801561143657600080fd5b505af115801561144a573d6000803e3d6000fd5b505050505b6001600160a01b038816331480159061146a57506000198214155b801561147f57506001600160a01b0384163314155b156114bd576001600160a01b0388166000908152600360209081526040808320338452909152812080548892906114b7908490612d7e565b90915550505b6001600160a01b038816600090815260026020526040812080548892906114ee9084906001600160801b0316612dd0565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555085600460008282546115249190612d7e565b9091555061153e90506001600160a01b03861688886128a5565b876001600160a01b03167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758760405161157991815260200190565b60405180910390a25050505050505050565b60008054630100000090046001600160a01b0316806115ac57600091505090565b806001600160a01b0316635790a0c86040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156115e757600080fd5b505af11580156115fb573d6000803e3d6000fd5b50505050600191505090565b6530b1ba34b7b760d11b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b8152600481018390523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa15801561167f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a39190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906116ed5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b031680156117755760405163b07b709b60e01b81526001600160a01b03858116600483015282169063b07b709b906024016020604051808303816000875af115801561174f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117739190612cc1565b505b6001600160a01b038416600090815260026020526040902054600160801b90046001600160801b0316838111156117e1578381036001600160a01b038616600090815260026020526040902080546001600160801b03928316600160801b029216919091179055611807565b6001600160a01b038516600090815260026020526040902080546001600160801b031690555b5050505050565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015611888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ac9190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906118f65760405162461bcd60e51b81526004016105469190612c8e565b50806001600160a01b0316631f3a0e416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119599190612cc1565b156040518060400160405280600c81526020016b19d85d59d9481ada5b1b195960a21b8152509061199d5760405162461bcd60e51b81526004016105469190612c8e565b50600060039054906101000a90046001600160a01b03166001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119ee57600080fd5b505af1158015611a02573d6000803e3d6000fd5b5050505080600060036101000a8154816001600160a01b0302191690836001600160a01b03160217905550611a5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166128da565b60015460405163430e2e5760e01b81526001600160a01b03918216600482015291169063430e2e5790602401600060405180830381600087803b158015611aa557600080fd5b505af1158015611ab9573d6000803e3d6000fd5b50506040516001600160a01b03841681527fa22e3a1f87b5ab0d1453da4c21e9ea8a03efb6295f0eb8b98f9411514e15daf39250602001905060405180910390a150565b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015611b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9b9190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b81525090611be55760405162461bcd60e51b81526004016105469190612c8e565b50600054604080518082019091526013815272726f6c6520616c72656164792065786973747360681b602082015290630100000090046001600160a01b031615611c425760405162461bcd60e51b81526004016105469190612c8e565b50600080546001600160a01b038084166301000000026301000000600160b81b031990921691909117909155611c99907f0000000000000000000000000000000000000000000000000000000000000000166128da565b60015460405163430e2e5760e01b81526001600160a01b03918216600482015291169063430e2e5790602401600060405180830381600087803b158015611cdf57600080fd5b505af1158015611807573d6000803e3d6000fd5b611cfc33612803565b604051806040016040528060178152602001766e6f7420617574686f72697a656420746f20706175736560481b81525090611d4a5760405162461bcd60e51b81526004016105469190612c8e565b506000805460ff19166001179055565b610b323382610b35565b6001600160a01b03811660009081526002602090815260408083208151808301909252546001600160801b03808216808452600160801b909204169282018390529091611db091612d3a565b6001600160801b03169392505050565b60005460408051808201909152601281527118dbdb9d1c9858dd081a5cc81c185d5cd95960721b60208201529060ff1615611e0e5760405162461bcd60e51b81526004016105469190612c8e565b506040805180820190915260188152600080516020612f1683398151915260208201526001600160a01b038316611e585760405162461bcd60e51b81526004016105469190612c8e565b5060408051808201909152601981527f73656c662d7472616e73666572206e6f7420616c6c6f776564000000000000006020820152336001600160a01b0384161415611eb75760405162461bcd60e51b81526004016105469190612c8e565b50336000908152600260209081526040918290208251808401845290546001600160801b03808216808452600160801b909204168284015283518085019094526014845273696e73756666696369656e742062616c616e636560601b928401929092529190831115611f3c5760405162461bcd60e51b81526004016105469190612c8e565b50600154604051630956fef360e21b81526001600160a01b0391821660048201526000917f0000000000000000000000000000000000000000000000000000000000000000169063255bfbcc90602401602060405180830381865afa158015611fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fcd9190612ce3565b604051631e36c19360e31b81529091506001600160a01b0382169063f1b60c989061200090339088908890600401612d00565b600060405180830381600087803b15801561201a57600080fd5b505af115801561202e573d6000803e3d6000fd5b5050600054630100000090046001600160a01b031691505080156121255760405163b07b709b60e01b81523360048201526001600160a01b0382169063b07b709b906024016020604051808303816000875af1158015612092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b69190612cc1565b5060405163b07b709b60e01b81526001600160a01b03868116600483015282169063b07b709b906024016020604051808303816000875af11580156120ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121239190612cc1565b505b82516001600160801b03168490033360009081526002602052604080822080546001600160801b0319166001600160801b039485161790556001600160a01b038816825281208054879391929161217e91859116612d3a565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550846001600160a01b0316336001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516121e791815260200190565b60405180910390a35050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635d138a346040518163ffffffff1660e01b8152600401600060405180830381865afa158015612257573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261227f9190810190612e1e565b90506000805b82518110156122e557600260008483815181106122a4576122a4612ee3565b6020908102919091018101516001600160a01b03168252810191909152604001600020546122db906001600160801b031683612d95565b9150600101612285565b5092915050565b60005462010000900460ff1661230d57600054610100900460ff1615612311565b303b155b6123745760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610546565b60005462010000900460ff16158015612399576000805462ffff001916620101001790555b600180546001600160a01b0319166001600160a01b03841617905580156123c7576000805462ff0000191690555b5050565b60007034b7333630ba34b7b72fb6b0b730b3b2b960791b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b8152600481018390523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa158015612450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124749190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906124be5760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b03166124df5760009150612547565b60005460405162e7945d60e81b81526004810185905263010000009091046001600160a01b03169063e7945d0090602401600060405180830381600087803b15801561252a57600080fd5b505af115801561253e573d6000803e3d6000fd5b50505050600191505b50919050565b6530b1ba34b7b760d11b7f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b8152600481018390523360248201526001600160a01b0391909116906391d1485490604401602060405180830381865afa1580156125c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e99190612cc1565b60405180604001604052806013815260200172756e617574686f72697a65642061636365737360681b815250906126335760405162461bcd60e51b81526004016105469190612c8e565b50600054630100000090046001600160a01b031680156126bb5760405163b07b709b60e01b81526001600160a01b03858116600483015282169063b07b709b906024016020604051808303816000875af1158015612695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b99190612cc1565b505b6001600160a01b038416600090815260026020526040902080548491906010906126f6908490600160801b90046001600160801b0316612d3a565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050565b6040516321f8a72160e01b81526a3937b632a6b0b730b3b2b960a91b60048201526000906001600160a01b038316906321f8a721906024015b602060405180830381865afa158015612776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061279a9190612ce3565b92915050565b900390565b6127fd846323b872dd60e01b8585856040516024016127c693929190612d00565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261291c565b50505050565b60007f0000000000000000000000000000000000000000000000000000000000000000604051632474521560e21b815269676f7665726e616e636560b01b60048201526001600160a01b03848116602483015291909116906391d1485490604401602060405180830381865afa158015612881573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061279a9190612cc1565b6040516001600160a01b0383166024820152604481018290526128d590849063a9059cbb60e01b906064016127c6565b505050565b6040516321f8a72160e01b81526f34b7333630ba34b7b726b0b730b3b2b960811b60048201526000906001600160a01b038316906321f8a72190602401612759565b6000612971826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129ee9092919063ffffffff16565b8051909150156128d5578080602001905181019061298f9190612cc1565b6128d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610546565b60606129fd8484600085612a07565b90505b9392505050565b606082471015612a685760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610546565b6001600160a01b0385163b612abf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610546565b600080866001600160a01b03168587604051612adb9190612ef9565b60006040518083038185875af1925050503d8060008114612b18576040519150601f19603f3d011682016040523d82523d6000602084013e612b1d565b606091505b5091509150612b2d828286612b38565b979650505050505050565b60608315612b47575081612a00565b825115612b575782518084602001fd5b8160405162461bcd60e51b81526004016105469190612c8e565b6001600160a01b0381168114610b3257600080fd5b60008060408385031215612b9957600080fd5b8235612ba481612b71565b946020939093013593505050565b600080600060608486031215612bc757600080fd5b8335612bd281612b71565b92506020840135612be281612b71565b929592945050506040919091013590565b600060208284031215612c0557600080fd5b5035919050565b600060208284031215612c1e57600080fd5b8135612a0081612b71565b60008060408385031215612c3c57600080fd5b8235612c4781612b71565b91506020830135612c5781612b71565b809150509250929050565b60005b83811015612c7d578181015183820152602001612c65565b838111156127fd5750506000910152565b6020815260008251806020840152612cad816040850160208701612c62565b601f01601f19169190910160400192915050565b600060208284031215612cd357600080fd5b81518015158114612a0057600080fd5b600060208284031215612cf557600080fd5b8151612a0081612b71565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60006001600160801b03808316818516808303821115612d5c57612d5c612d24565b01949350505050565b600060208284031215612d7757600080fd5b5051919050565b600082821015612d9057612d90612d24565b500390565b60008219821115612da857612da8612d24565b500190565b600060208284031215612dbf57600080fd5b815160ff81168114612a0057600080fd5b60006001600160801b0383811690831681811015612df057612df0612d24565b039392505050565b634e487b7160e01b600052604160045260246000fd5b8051612e1981612b71565b919050565b60006020808385031215612e3157600080fd5b825167ffffffffffffffff80821115612e4957600080fd5b818501915085601f830112612e5d57600080fd5b815181811115612e6f57612e6f612df8565b8060051b604051601f19603f83011681018181108582111715612e9457612e94612df8565b604052918252848201925083810185019188831115612eb257600080fd5b938501935b82851015612ed757612ec885612e0e565b84529385019392850192612eb7565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008251612f0b818460208701612c62565b919091019291505056fe7a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000a2646970667358221220d48e66fac0273c735d793e3f99fdbb332375ede8bf3563d9c675c595a581ef2564736f6c634300080a0033", "deployedSourceMap": "1160:12156:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:106:40;382:13:39;1398:106:40;;;-1:-1:-1;;;;;200:32:203;;;182:51;;170:2;155:18;1398:106:40;;;;;;;;6008:260:38;;;;;;:::i;:::-;;:::i;:::-;;9901:90;9979:5;;-1:-1:-1;;;;;9979:5:38;9901:90;;4283:1560;;;;;;:::i;:::-;;:::i;1525:49::-;;;;;9997:108;;;;;;:::i;:::-;;:::i;10519:1006::-;;;;;;:::i;:::-;;:::i;9784:111::-;;;:::i;:::-;;;1960:4:203;1948:17;;;1930:36;;1918:2;1903:18;9784:111:38;1788:184:203;588:83:109;;;:::i;11807:1343:38:-;;;;;;:::i;:::-;;:::i;7742:218::-;;;:::i;:::-;;;2142:14:203;;2135:22;2117:41;;2105:2;2090:18;7742:218:38;1977:187:203;7102:634:38;;;;;;:::i;:::-;;:::i;8866:129::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8960:20:38;8934:7;8960:20;;;:11;:20;;;;;:28;-1:-1:-1;;;;;8960:28:38;;8866:129;;;;2567:25:203;;;2555:2;2540:18;8866:129:38;2421:177:203;2402:320:38;;;;;;:::i;:::-;;:::i;2153:243::-;;;;;;:::i;:::-;;:::i;449:80:109:-;;;:::i;9001:111:38:-;9089:16;;9001:111;;10222:92;;;;;;:::i;:::-;;:::i;1608:50::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1608:50:38;;;;-1:-1:-1;;;1608:50:38;;;;;;;;;-1:-1:-1;;;;;2848:15:203;;;2830:34;;2900:15;;;;2895:2;2880:18;;2873:43;2750:18;1608:50:38;2603:319:203;9342:277:38;;;;;;:::i;:::-;;:::i;3008:947::-;;;;;;:::i;:::-;;:::i;141:20:109:-;;;;;;;;;8391:320:38;;;:::i;2050:97::-;;;;;;:::i;:::-;;:::i;1496:22::-;;;;;;;;-1:-1:-1;;;;;1496:22:38;;;9625:153;;;;;;:::i;:::-;-1:-1:-1;;;;;9731:20:38;9705:7;9731:20;;;:11;:20;;;;;:40;-1:-1:-1;;;9731:40:38;;-1:-1:-1;;;;;9731:40:38;;9625:153;8717:143;;;;;;:::i;:::-;-1:-1:-1;;;;;8826:18:38;;;8800:7;8826:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8717:143;7966:284;;;;;;:::i;:::-;;:::i;1581:20::-;;;;;-1:-1:-1;;;;;1581:20:38;;;6510:355;;;;;;:::i;:::-;;:::i;1483:14:40:-;1476:21;;1398:106;:::o;6008:260:38:-;208:8:109;;218:21;;;;;;;;;;;;-1:-1:-1;;;218:21:109;;;;;208:8;;207:9;199:41;;;;-1:-1:-1;;;199:41:109;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;6127:30:38::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;;;;;;6127:30:38::1;::::0;::::1;::::0;-1:-1:-1;;;;;6104:21:38;::::1;6096:62;;;;-1:-1:-1::0;;;6096:62:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;6180:10:38::1;6168:23;::::0;;;:11:::1;:23;::::0;;;;;;;-1:-1:-1;;;;;6168:32:38;::::1;::::0;;;;;;;;;;:41;;;6224:37;2567:25:203;;;6168:32:38;;6180:10;6224:37:::1;::::0;2540:18:203;6224:37:38::1;;;;;;;6008:260:::0;;:::o;4283:1560::-;208:8:109;;218:21;;;;;;;;;;;;-1:-1:-1;;;218:21:109;;;;;208:8;;207:9;199:41;;;;-1:-1:-1;;;199:41:109;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4423:17:38;::::1;::::0;;::::1;::::0;:38:::1;;-1:-1:-1::0;;;;;;4444:17:38;::::1;::::0;::::1;4423:38;4463:30;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;4463:30:38::1;;::::0;4415:79:::1;;;;;-1:-1:-1::0;;;4415:79:38::1;;;;;;;;:::i;:::-;;4562:3;-1:-1:-1::0;;;;;4555:10:38::1;:3;-1:-1:-1::0;;;;;4555:10:38::1;;;4567:30;;;;;;;;;;;;;-1:-1:-1::0;;;4567:30:38::1;;::::0;4547:51:::1;;;;;-1:-1:-1::0;;;4547:51:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4673:25:38::1;4712:10;-1:-1:-1::0;;;;;4712:17:38;::::1;;4708:164;;;-1:-1:-1::0;;;4708:164:38::1;;;-1:-1:-1::0;;;;;;4833:16:38;::::1;;::::0;;;:11:::1;:16;::::0;;;;;;;4850:10:::1;4833:28:::0;;;;;;;;4708:164:::1;4918:28;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4918:28:38::1;::::0;::::1;::::0;4889:27;;::::1;;4881:66;;;;-1:-1:-1::0;;;4881:66:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;4992:16:38;::::1;4958:31;4992:16:::0;;;:11:::1;:16;::::0;;;;;;;;4958:50;;;;::::1;::::0;;;;-1:-1:-1;;;;;4958:50:38;;::::1;::::0;;;-1:-1:-1;;;4958:50:38;;::::1;;::::0;;::::1;::::0;5097:26;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5097:26:38;;::::1;::::0;;;;4958:50;5076:19;;::::1;;5068:56;;;;-1:-1:-1::0;;;5068:56:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;5135:16:38::1;5154:7:::0;;;::::1;-1:-1:-1::0;;;;;5154:7:38::1;5175:22:::0;;5171:143:::1;;5213:38;::::0;-1:-1:-1;;;5213:38:38;;-1:-1:-1;;;;;200:32:203;;;5213:38:38::1;::::0;::::1;182:51:203::0;5213:33:38;::::1;::::0;::::1;::::0;155:18:203;;5213:38:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5265:38:38::1;::::0;-1:-1:-1;;;5265:38:38;;-1:-1:-1;;;;;200:32:203;;;5265:38:38::1;::::0;::::1;182:51:203::0;5265:33:38;::::1;::::0;::::1;::::0;155:18:203;;5265:38:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5171:143;5377:5;::::0;5345:38:::1;::::0;-1:-1:-1;;;5345:38:38;;-1:-1:-1;;;;;5377:5:38;;::::1;5345:38;::::0;::::1;182:51:203::0;5323:19:38::1;::::0;5345:15:::1;:31;::::0;::::1;::::0;155:18:203;;5345:38:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5393:44;::::0;-1:-1:-1;;;5393:44:38;;5323:60;;-1:-1:-1;;;;;;5393:26:38;::::1;::::0;::::1;::::0;:44:::1;::::0;5420:3;;5425;;5430:6;;5393:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5519:30;5542:6;5519:9;:22;;:30;;;;:::i;:::-;-1:-1:-1::0;;;;;5484:16:38;;::::1;;::::0;;;:11:::1;:16;::::0;;;;;:66;;-1:-1:-1;;;;;;5484:66:38::1;-1:-1:-1::0;;;;;5484:66:38;;::::1;;::::0;;5560:16;;::::1;::::0;;;;;:43;;5596:6;;5560:16;;5484;5560:43:::1;::::0;5596:6;;5560:43:::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;5560:43:38::1;;;;;-1:-1:-1::0;;;;;5560:43:38::1;;;;;;-1:-1:-1::0;;5662:17:38::1;:38;5658:138;;494:5:191::0;;;-1:-1:-1;;;;;5716:16:38;::::1;;::::0;;;:11:::1;:16;::::0;;;;;;;5733:10:::1;5716:28:::0;;;;;;;:69;5658:138:::1;5824:3;-1:-1:-1::0;;;;;5810:26:38::1;5819:3;-1:-1:-1::0;;;;;5810:26:38::1;;5829:6;5810:26;;;;2567:25:203::0;;2555:2;2540:18;;2421:177;5810:26:38::1;;;;;;;;4405:1438;;;;;4283:1560:::0;;;:::o;9997:108::-;10056:42;10067:10;10079;10091:6;10056:10;:42::i;:::-;9997:108;:::o;10519:1006::-;208:8:109;;218:21;;;;;;;;;;;;-1:-1:-1;;;218:21:109;;;;;208:8;;207:9;199:41;;;;-1:-1:-1;;;199:41:109;;;;;;;;:::i;:::-;-1:-1:-1;10637:30:38::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;;;;;;10637:30:38::1;::::0;::::1;::::0;-1:-1:-1;;;;;10614:21:38;::::1;10606:62;;;;-1:-1:-1::0;;;10606:62:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;10701:5:38::1;::::0;10725:28:::1;::::0;-1:-1:-1;;;10725:28:38;;10742:10:::1;10725:28;::::0;::::1;182:51:203::0;-1:-1:-1;;;;;10701:5:38;;::::1;::::0;10757:6;;10701:5;;10725:16:::1;::::0;155:18:203;;10725:28:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;10765:26;;;;;;;;;;;;;-1:-1:-1::0;;;10765:26:38::1;;::::0;10717:75:::1;;;;;-1:-1:-1::0;;;10717:75:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;10803:16:38::1;10822:7:::0;;;::::1;-1:-1:-1::0;;;;;10822:7:38::1;10843:22:::0;;10839:95:::1;;10881:42;::::0;-1:-1:-1;;;10881:42:38;;-1:-1:-1;;;;;200:32:203;;;10881:42:38::1;::::0;::::1;182:51:203::0;10881:33:38;::::1;::::0;::::1;::::0;155:18:203;;10881:42:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10839:95;10961:31;::::0;-1:-1:-1;;;10961:31:38;;10986:4:::1;10961:31;::::0;::::1;182:51:203::0;10944:14:38::1;::::0;-1:-1:-1;;;;;10961:16:38;::::1;::::0;::::1;::::0;155:18:203;;10961:31:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10944:48:::0;-1:-1:-1;11007:10:38::1;-1:-1:-1::0;;;;;11007:21:38;::::1;;11003:191;;11066:48;::::0;-1:-1:-1;;;11066:48:38;;-1:-1:-1;;;;;200:32:203;;;11066:48:38::1;::::0;::::1;182:51:203::0;11044:19:38::1;::::0;11066:15:::1;:31:::0;;::::1;::::0;::::1;::::0;155:18:203;;11066:48:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11128:55;::::0;-1:-1:-1;;;11128:55:38;;11044:70;;-1:-1:-1;;;;;;11128:26:38;::::1;::::0;::::1;::::0;:55:::1;::::0;11155:10:::1;::::0;11167:7;;11176:6;;11128:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11030:164;11003:191;11204:58;-1:-1:-1::0;;;;;11204:23:38;::::1;11228:10;11248:4;11255:6:::0;11204:23:::1;:58::i;:::-;11289:31;::::0;-1:-1:-1;;;11289:31:38;;11314:4:::1;11289:31;::::0;::::1;182:51:203::0;11272:14:38::1;::::0;11323:6;;-1:-1:-1;;;;;11289:16:38;::::1;::::0;::::1;::::0;155:18:203;;11289:31:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;11272:57;;11357:6;11347;:16;11365:20;;;;;;;;;;;;;-1:-1:-1::0;;;11365:20:38::1;;::::0;11339:47:::1;;;;;-1:-1:-1::0;;;11339:47:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;11396:20:38;::::1;;::::0;;;:11:::1;:20;::::0;;;;:47;;11436:6;;11396:20;:47:::1;::::0;11436:6;;-1:-1:-1;;;;;11396:47:38::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;11396:47:38::1;;;;;-1:-1:-1::0;;;;;11396:47:38::1;;;;;;11474:6;11454:16;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;11495:23:38::1;::::0;2567:25:203;;;-1:-1:-1;;;;;11495:23:38;::::1;::::0;::::1;::::0;2555:2:203;2540:18;11495:23:38::1;;;;;;;10596:929;;;;10519:1006:::0;;:::o;9784:111::-;9871:5;;9860:28;;;-1:-1:-1;;;9860:28:38;;;;9836:5;;-1:-1:-1;;;;;9871:5:38;;9860:26;;:28;;;;;;;;;;;;;;9871:5;9860:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;588:83:109:-;315:32;336:10;315:20;:32::i;:::-;349:24;;;;;;;;;;;;;-1:-1:-1;;;349:24:109;;;307:67;;;;;-1:-1:-1;;;307:67:109;;;;;;;;:::i;:::-;-1:-1:-1;659:5:109::1;648:16:::0;;-1:-1:-1;;648:16:109::1;::::0;;588:83::o;11807:1343:38:-;-1:-1:-1;;;;;11933:17:38;;;;;;:38;;-1:-1:-1;;;;;;11954:17:38;;;;11933:38;11973:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11973:30:38;;;11925:79;;;;;-1:-1:-1;;;11925:79:38;;;;;;;;:::i;:::-;-1:-1:-1;12044:30:38;;;;;;;;;;;;-1:-1:-1;;;12044:30:38;;;;-1:-1:-1;;;;;12022:20:38;;12037:4;12022:20;;12014:61;;;;-1:-1:-1;;;12014:61:38;;;;;;;;:::i;:::-;-1:-1:-1;12108:5:38;;12146:48;;-1:-1:-1;;;12146:48:38;;-1:-1:-1;;;;;12108:5:38;;;12146:48;;;182:51:203;;;12108:5:38;12085:13;;12146:15;:31;;;;;;155:18:203;;12146:48:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12241:16:38;;12204:34;12241:16;;;:11;:16;;;;;;;;12204:53;;;;;;;;;-1:-1:-1;;;;;12204:53:38;;;;;-1:-1:-1;;;12204:53:38;;;;;;;;12288:16;;;:11;:16;;;;;12305:10;12288:28;;;;;;;;12124:70;;-1:-1:-1;12204:53:38;;12288:28;12347:17;;:41;;;12382:6;12368:10;:20;;12347:41;:72;;;-1:-1:-1;;;;;;12392:27:38;;12409:10;12392:27;12347:72;12433:25;;;;;;;;;;;;;-1:-1:-1;;;12433:25:38;;;12326:142;;;;;-1:-1:-1;;;12326:142:38;;;;;;;;:::i;:::-;-1:-1:-1;12486:23:38;;12521:26;;;;;;;;;;;;-1:-1:-1;;;12521:26:38;;;;;-1:-1:-1;;;;;12486:33:38;;-1:-1:-1;12486:33:38;12478:70;;;;-1:-1:-1;;;12478:70:38;;;;;;;;:::i;:::-;-1:-1:-1;12558:16:38;12577:7;;;;-1:-1:-1;;;;;12577:7:38;12598:22;;12594:91;;12636:38;;-1:-1:-1;;;12636:38:38;;-1:-1:-1;;;;;200:32:203;;;12636:38:38;;;182:51:203;12636:33:38;;;;;155:18:203;;12636:38:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12594:91;12706:3;-1:-1:-1;;;;;12699:10:38;:3;-1:-1:-1;;;;;12699:10:38;;12695:85;;12725:44;;-1:-1:-1;;;12725:44:38;;-1:-1:-1;;;;;12725:26:38;;;;;:44;;12752:3;;12757;;12762:6;;12725:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12695:85;-1:-1:-1;;;;;12794:17:38;;12801:10;12794:17;;;;:52;;;-1:-1:-1;;12815:10:38;:31;;12794:52;:83;;;;-1:-1:-1;;;;;;12850:27:38;;12867:10;12850:27;;12794:83;12790:184;;;-1:-1:-1;;;;;12925:16:38;;;;;;:11;:16;;;;;;;;12942:10;12925:28;;;;;;;:38;;12957:6;;12925:16;:38;;12957:6;;12925:38;:::i;:::-;;;;-1:-1:-1;;12790:184:38;-1:-1:-1;;;;;12983:16:38;;;;;;:11;:16;;;;;:43;;13019:6;;12983:16;:43;;13019:6;;-1:-1:-1;;;;;12983:43:38;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;12983:43:38;;;;;-1:-1:-1;;;;;12983:43:38;;;;;;13057:6;13037:16;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;13074:32:38;;-1:-1:-1;;;;;;13074:19:38;;13094:3;13099:6;13074:19;:32::i;:::-;13131:3;-1:-1:-1;;;;;13122:21:38;;13136:6;13122:21;;;;2567:25:203;;2555:2;2540:18;;2421:177;13122:21:38;;;;;;;;11915:1235;;;;;11807:1343;;;:::o;7742:218::-;7795:4;7830:7;;;;;-1:-1:-1;;;;;7830:7:38;;7847:40;;7882:5;7875:12;;;7742:218;:::o;7847:40::-;7906:8;-1:-1:-1;;;;;7897:33:38;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7949:4;7942:11;;;7742:218;:::o;7102:634::-;-1:-1:-1;;;382:13:39;429:40:40;;-1:-1:-1;;;429:40:40;;;;;6458:25:203;;;458:10:40;6499:18:203;;;6492:60;-1:-1:-1;;;;;429:22:40;;;;;;;6431:18:203;;429:40:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;471:25;;;;;;;;;;;;;-1:-1:-1;;;471:25:40;;;421:76;;;;;-1:-1:-1;;;421:76:40;;;;;;;;:::i;:::-;-1:-1:-1;7251:16:38::1;7270:7:::0;;;::::1;-1:-1:-1::0;;;;;7270:7:38::1;7291:22:::0;;7287:95:::1;;7329:42;::::0;-1:-1:-1;;;7329:42:38;;-1:-1:-1;;;;;200:32:203;;;7329:42:38::1;::::0;::::1;182:51:203::0;7329:33:38;::::1;::::0;::::1;::::0;155:18:203;;7329:42:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7287:95;-1:-1:-1::0;;;;;7422:20:38;::::1;7391:28;7422:20:::0;;;:11:::1;:20;::::0;;;;:40;-1:-1:-1;;;7422:40:38;::::1;-1:-1:-1::0;;;;;7422:40:38::1;7476:29:::0;;::::1;7472:258;;;494:5:191::0;;;-1:-1:-1;;;;;7521:20:38;::::1;;::::0;;;:11:::1;:20;::::0;;;;:123;;-1:-1:-1;;;;;7521:123:38;;::::1;-1:-1:-1::0;;;7521:123:38::1;::::0;::::1;::::0;;;::::1;::::0;;7472:258:::1;;;-1:-1:-1::0;;;;;7675:20:38;::::1;7718:1;7675:20:::0;;;:11:::1;:20;::::0;;;;:44;;-1:-1:-1;;;;;7675:44:38::1;::::0;;7472:258:::1;7241:495;;7102:634:::0;;;:::o;2402:320::-;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;6458:25:203;707:10:40;6499:18:203;;;6492:60;-1:-1:-1;;;;;666:22:40;;;;;;;6431:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;;2504:8:38::1;-1:-1:-1::0;;;;;2495:25:38::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2494:28;2524:18;;;;;;;;;;;;;-1:-1:-1::0;;;2524:18:38::1;;::::0;2486:57:::1;;;;;-1:-1:-1::0;;;2486:57:38::1;;;;;;;;:::i;:::-;;2562:7;;;;;;;;;-1:-1:-1::0;;;;;2562:7:38::1;-1:-1:-1::0;;;;;2553:22:38::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2597:8;2587:7;;:18;;;;;-1:-1:-1::0;;;;;2587:18:38::1;;;;;-1:-1:-1::0;;;;;2587:18:38::1;;;;;;2615:37;:15;-1:-1:-1::0;;;;;2615:35:38::1;;:37::i;:::-;2670:5;::::0;2615:61:::1;::::0;-1:-1:-1;;;2615:61:38;;-1:-1:-1;;;;;2670:5:38;;::::1;2615:61;::::0;::::1;182:51:203::0;2615:54:38;::::1;::::0;::::1;::::0;155:18:203;;2615:61:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2691:24:38::1;::::0;-1:-1:-1;;;;;200:32:203;;182:51;;2691:24:38::1;::::0;-1:-1:-1;170:2:203;155:18;;-1:-1:-1;2691:24:38::1;;;;;;;2402:320:::0;:::o;2153:243::-;382:13:39;666:52:40;;-1:-1:-1;;;666:52:40;;-1:-1:-1;;;666:52:40;;;6458:25:203;707:10:40;6499:18:203;;;6492:60;-1:-1:-1;;;;;666:22:40;;;;;;;6431:18:203;;666:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;720:25;;;;;;;;;;;;;-1:-1:-1;;;720:25:40;;;658:88;;;;;-1:-1:-1;;;658:88:40;;;;;;;;:::i;:::-;-1:-1:-1;2268:1:38::1;2249:7:::0;2272:17:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2272:17:38::1;::::0;::::1;::::0;;2249:7;;::::1;-1:-1:-1::0;;;;;2249:7:38::1;:21:::0;2241:49:::1;;;;-1:-1:-1::0;;;2241:49:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2300:7:38::1;:18:::0;;-1:-1:-1;;;;;2300:18:38;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;2300:18:38;;::::1;::::0;;;::::1;::::0;;;2328:37:::1;::::0;:15:::1;:35;;:37::i;:::-;2383:5;::::0;2328:61:::1;::::0;-1:-1:-1;;;2328:61:38;;-1:-1:-1;;;;;2383:5:38;;::::1;2328:61;::::0;::::1;182:51:203::0;2328:54:38;::::1;::::0;::::1;::::0;155:18:203;;2328:61:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;449:80:109::0;315:32;336:10;315:20;:32::i;:::-;349:24;;;;;;;;;;;;;-1:-1:-1;;;349:24:109;;;307:67;;;;;-1:-1:-1;;;307:67:109;;;;;;;;:::i;:::-;-1:-1:-1;507:8:109::1;:15:::0;;-1:-1:-1;;507:15:109::1;518:4;507:15;::::0;;449:80::o;10222:92:38:-;10279:28;10288:10;10300:6;10279:8;:28::i;9342:277::-;-1:-1:-1;;;;;9520:20:38;;9463:7;9520:20;;;:11;:20;;;;;;;;9486:54;;;;;;;;;-1:-1:-1;;;;;9486:54:38;;;;;;-1:-1:-1;;;9486:54:38;;;;;;;;;;;;9557:55;;;:::i;:::-;-1:-1:-1;;;;;9550:62:38;;9342:277;-1:-1:-1;;;9342:277:38:o;3008:947::-;208:8:109;;218:21;;;;;;;;;;;;-1:-1:-1;;;218:21:109;;;;;208:8;;207:9;199:41;;;;-1:-1:-1;;;199:41:109;;;;;;;;:::i;:::-;-1:-1:-1;3128:30:38::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;;;;;;3128:30:38::1;::::0;::::1;::::0;-1:-1:-1;;;;;3105:21:38;::::1;3097:62;;;;-1:-1:-1::0;;;3097:62:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;3200:31:38::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;3177:10:::1;-1:-1:-1::0;;;;;3177:21:38;::::1;;;3169:63;;;;-1:-1:-1::0;;;3169:63:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;3288:10:38::1;3242:31;3276:23:::0;;;:11:::1;:23;::::0;;;;;;;;3242:57;;;;::::1;::::0;;;;-1:-1:-1;;;;;3242:57:38;;::::1;::::0;;;-1:-1:-1;;;3242:57:38;;::::1;;::::0;;::::1;::::0;3349:26;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;3349:26:38;;::::1;::::0;;;;3242:57;3349:26;3317:30;-1:-1:-1;3317:30:38::1;3309:67;;;;-1:-1:-1::0;;;3309:67:38::1;;;;;;;;:::i;:::-;-1:-1:-1::0;3441:5:38::1;::::0;3409:38:::1;::::0;-1:-1:-1;;;3409:38:38;;-1:-1:-1;;;;;3441:5:38;;::::1;3409:38;::::0;::::1;182:51:203::0;3387:19:38::1;::::0;3409:15:::1;:31;::::0;::::1;::::0;155:18:203;;3409:38:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3457:55;::::0;-1:-1:-1;;;3457:55:38;;3387:60;;-1:-1:-1;;;;;;3457:26:38;::::1;::::0;::::1;::::0;:55:::1;::::0;3484:10:::1;::::0;3496:7;;3505:6;;3457:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3523:16:38::1;3542:7:::0;;;::::1;-1:-1:-1::0;;;;;3542:7:38::1;::::0;-1:-1:-1;;3563:22:38;;3559:154:::1;;3601:45;::::0;-1:-1:-1;;;3601:45:38;;3635:10:::1;3601:45;::::0;::::1;182:51:203::0;-1:-1:-1;;;;;3601:33:38;::::1;::::0;::::1;::::0;155:18:203;;3601:45:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3660:42:38::1;::::0;-1:-1:-1;;;3660:42:38;;-1:-1:-1;;;;;200:32:203;;;3660:42:38::1;::::0;::::1;182:51:203::0;3660:33:38;::::1;::::0;::::1;::::0;155:18:203;;3660:42:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3559:154;3786:20:::0;;-1:-1:-1;;;;;3778:29:38::1;494:5:191::0;;;3735:10:38::1;3723:23;::::0;;;:11:::1;:23;::::0;;;;;:115;;-1:-1:-1;;;;;;3723:115:38::1;-1:-1:-1::0;;;;;3723:115:38;;::::1;;::::0;;-1:-1:-1;;;;;3848:20:38;::::1;::::0;;;;:47;;3888:6;;3848:20;;3723:23;3848:47:::1;::::0;3888:6;;3848:47:::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;3848:47:38::1;;;;;-1:-1:-1::0;;;;;3848:47:38::1;;;;;;3932:7;-1:-1:-1::0;;;;;3911:37:38::1;3920:10;-1:-1:-1::0;;;;;3911:37:38::1;;3941:6;3911:37;;;;2567:25:203::0;;2555:2;2540:18;;2421:177;3911:37:38::1;;;;;;;;3087:868;;;3008:947:::0;;:::o;8391:320::-;8453:7;8472:24;8499:15;-1:-1:-1;;;;;8499:26:38;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8499:28:38;;;;;;;;;;;;:::i;:::-;8472:55;;8537:13;8565:9;8560:123;8580:7;:14;8576:1;:18;8560:123;;;8641:11;:23;8653:7;8661:1;8653:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;8641:23:38;;;;;;;;;;;-1:-1:-1;8641:23:38;:31;8632:40;;-1:-1:-1;;;;;8641:31:38;8632:40;;:::i;:::-;;-1:-1:-1;208:1:191;204:5;8560:123:38;;;-1:-1:-1;8699:5:38;8391:320;-1:-1:-1;;8391:320:38:o;2050:97::-;2369:13:0;;;;;;;:48;;2405:12;;;;;;;2404:13;2369:48;;;3147:4;1476:19:5;:23;2385:16:0;2361:107;;;;-1:-1:-1;;;2361:107:0;;8306:2:203;2361:107:0;;;8288:21:203;8345:2;8325:18;;;8318:30;8384:34;8364:18;;;8357:62;-1:-1:-1;;;8435:18:203;;;8428:44;8489:19;;2361:107:0;8104:410:203;2361:107:0;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:0;;;;;2525:98;2126:5:38::1;:14:::0;;-1:-1:-1;;;;;;2126:14:38::1;-1:-1:-1::0;;;;;2126:14:38;::::1;;::::0;;2645:66:0;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:0;;;2645:66;2080:637;2050:97:38;:::o;7966:284::-;8106:4;-1:-1:-1;;;382:13:39;429:40:40;;-1:-1:-1;;;429:40:40;;;;;6458:25:203;;;458:10:40;6499:18:203;;;6492:60;-1:-1:-1;;;;;429:22:40;;;;;;;6431:18:203;;429:40:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;471:25;;;;;;;;;;;;;-1:-1:-1;;;471:25:40;;;421:76;;;;;-1:-1:-1;;;421:76:40;;;;;;;;:::i;:::-;-1:-1:-1;8149:1:38::1;8130:7:::0;;;::::1;-1:-1:-1::0;;;;;8130:7:38::1;8126:39;;8160:5;8153:12;;;;8126:39;8184:7;::::0;8175:47:::1;::::0;-1:-1:-1;;;8175:47:38;;::::1;::::0;::::1;2567:25:203::0;;;8184:7:38;;;::::1;-1:-1:-1::0;;;;;8184:7:38::1;::::0;8175:32:::1;::::0;2540:18:203;;8175:47:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8239:4;8232:11;;507:1:40;7966:284:38::0;;;;:::o;6510:355::-;-1:-1:-1;;;382:13:39;429:40:40;;-1:-1:-1;;;429:40:40;;;;;6458:25:203;;;458:10:40;6499:18:203;;;6492:60;-1:-1:-1;;;;;429:22:40;;;;;;;6431:18:203;;429:40:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;471:25;;;;;;;;;;;;;-1:-1:-1;;;471:25:40;;;421:76;;;;;-1:-1:-1;;;421:76:40;;;;;;;;:::i;:::-;-1:-1:-1;6659:16:38::1;6678:7:::0;;;::::1;-1:-1:-1::0;;;;;6678:7:38::1;6699:22:::0;;6695:95:::1;;6737:42;::::0;-1:-1:-1;;;6737:42:38;;-1:-1:-1;;;;;200:32:203;;;6737:42:38::1;::::0;::::1;182:51:203::0;6737:33:38;::::1;::::0;::::1;::::0;155:18:203;;6737:42:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6695:95;-1:-1:-1::0;;;;;6799:20:38;::::1;;::::0;;;:11:::1;:20;::::0;;;;:59;;6851:6;;6799:20;:40:::1;::::0;:59:::1;::::0;6851:6;;-1:-1:-1;;;6799:59:38;::::1;-1:-1:-1::0;;;;;6799:59:38::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;6799:59:38::1;;;;;-1:-1:-1::0;;;;;6799:59:38::1;;;;;;6649:216;6510:355:::0;;;:::o;2581:184:182:-;2699:58;;-1:-1:-1;;;2699:58:182;;-1:-1:-1;;;2699:58:182;;;2567:25:203;2655:12:182;;-1:-1:-1;;;;;2699:19:182;;;;;2540:18:203;;2699:58:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2679:79;2581:184;-1:-1:-1;;2581:184:182:o;377:139:191:-;494:5;;;377:139::o;912:241:19:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1077:68:19;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:19;-1:-1:-1;;;;;;1077:68:19;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;13156:158:38:-;13235:4;382:13:39;13258:49:38;;-1:-1:-1;;;13258:49:38;;-1:-1:-1;;;13258:49:38;;;6458:25:203;-1:-1:-1;;;;;6519:32:203;;;6499:18;;;6492:60;13258:22:38;;;;;;;6431:18:203;;13258:49:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;701:205:19:-;840:58;;-1:-1:-1;;;;;9149:32:203;;840:58:19;;;9131:51:203;9198:18;;;9191:34;;;813:86:19;;833:5;;-1:-1:-1;;;863:23:19;9104:18:203;;840:58:19;8957:274:203;813:86:19;701:205;;;:::o;3055:232:182:-;3216:63;;-1:-1:-1;;;3216:63:182;;-1:-1:-1;;;3216:63:182;;;2567:25:203;3158:17:182;;-1:-1:-1;;;;;3216:19:182;;;;;2540:18:203;;3216:63:182;2421:177:203;3207:706:19;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:19;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:19;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:19;;9438:2:203;3811:85:19;;;9420:21:203;9477:2;9457:18;;;9450:30;9516:34;9496:18;;;9489:62;-1:-1:-1;;;9567:18:203;;;9560:40;9617:19;;3811:85:19;9236:406:203;3861:223:20;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:20;;9849:2:203;5137:81:20;;;9831:21:203;9888:2;9868:18;;;9861:30;9927:34;9907:18;;;9900:62;-1:-1:-1;;;9978:18:203;;;9971:36;10024:19;;5137:81:20;9647:402:203;5137:81:20;-1:-1:-1;;;;;1476:19:5;;;5228:60:20;;;;-1:-1:-1;;;5228:60:20;;10256:2:203;5228:60:20;;;10238:21:203;10295:2;10275:18;;;10268:30;10334:31;10314:18;;;10307:59;10383:18;;5228:60:20;10054:353:203;5228:60:20;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:20;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:20:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:20;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:20;;;;;;;;:::i;244:131:203:-;-1:-1:-1;;;;;319:31:203;;309:42;;299:70;;365:1;362;355:12;380:315;448:6;456;509:2;497:9;488:7;484:23;480:32;477:52;;;525:1;522;515:12;477:52;564:9;551:23;583:31;608:5;583:31;:::i;:::-;633:5;685:2;670:18;;;;657:32;;-1:-1:-1;;;380:315:203:o;908:456::-;985:6;993;1001;1054:2;1042:9;1033:7;1029:23;1025:32;1022:52;;;1070:1;1067;1060:12;1022:52;1109:9;1096:23;1128:31;1153:5;1128:31;:::i;:::-;1178:5;-1:-1:-1;1235:2:203;1220:18;;1207:32;1248:33;1207:32;1248:33;:::i;:::-;908:456;;1300:7;;-1:-1:-1;;;1354:2:203;1339:18;;;;1326:32;;908:456::o;1603:180::-;1662:6;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;-1:-1:-1;1754:23:203;;1603:180;-1:-1:-1;1603:180:203:o;2169:247::-;2228:6;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;2336:9;2323:23;2355:31;2380:5;2355:31;:::i;2927:388::-;2995:6;3003;3056:2;3044:9;3035:7;3031:23;3027:32;3024:52;;;3072:1;3069;3062:12;3024:52;3111:9;3098:23;3130:31;3155:5;3130:31;:::i;:::-;3180:5;-1:-1:-1;3237:2:203;3222:18;;3209:32;3250:33;3209:32;3250:33;:::i;:::-;3302:7;3292:17;;;2927:388;;;;;:::o;3320:258::-;3392:1;3402:113;3416:6;3413:1;3410:13;3402:113;;;3492:11;;;3486:18;3473:11;;;3466:39;3438:2;3431:10;3402:113;;;3533:6;3530:1;3527:13;3524:48;;;-1:-1:-1;;3568:1:203;3550:16;;3543:27;3320:258::o;3583:383::-;3732:2;3721:9;3714:21;3695:4;3764:6;3758:13;3807:6;3802:2;3791:9;3787:18;3780:34;3823:66;3882:6;3877:2;3866:9;3862:18;3857:2;3849:6;3845:15;3823:66;:::i;:::-;3950:2;3929:15;-1:-1:-1;;3925:29:203;3910:45;;;;3957:2;3906:54;;3583:383;-1:-1:-1;;3583:383:203:o;3971:277::-;4038:6;4091:2;4079:9;4070:7;4066:23;4062:32;4059:52;;;4107:1;4104;4097:12;4059:52;4139:9;4133:16;4192:5;4185:13;4178:21;4171:5;4168:32;4158:60;;4214:1;4211;4204:12;4253:275;4347:6;4400:2;4388:9;4379:7;4375:23;4371:32;4368:52;;;4416:1;4413;4406:12;4368:52;4448:9;4442:16;4467:31;4492:5;4467:31;:::i;4533:375::-;-1:-1:-1;;;;;4791:15:203;;;4773:34;;4843:15;;;;4838:2;4823:18;;4816:43;4890:2;4875:18;;4868:34;;;;4723:2;4708:18;;4533:375::o;4913:127::-;4974:10;4969:3;4965:20;4962:1;4955:31;5005:4;5002:1;4995:15;5029:4;5026:1;5019:15;5045:253;5085:3;-1:-1:-1;;;;;5174:2:203;5171:1;5167:10;5204:2;5201:1;5197:10;5235:3;5231:2;5227:12;5222:3;5219:21;5216:47;;;5243:18;;:::i;:::-;5279:13;;5045:253;-1:-1:-1;;;;5045:253:203:o;5303:184::-;5373:6;5426:2;5414:9;5405:7;5401:23;5397:32;5394:52;;;5442:1;5439;5432:12;5394:52;-1:-1:-1;5465:16:203;;5303:184;-1:-1:-1;5303:184:203:o;5492:125::-;5532:4;5560:1;5557;5554:8;5551:34;;;5565:18;;:::i;:::-;-1:-1:-1;5602:9:203;;5492:125::o;5622:128::-;5662:3;5693:1;5689:6;5686:1;5683:13;5680:39;;;5699:18;;:::i;:::-;-1:-1:-1;5735:9:203;;5622:128::o;5755:273::-;5823:6;5876:2;5864:9;5855:7;5851:23;5847:32;5844:52;;;5892:1;5889;5882:12;5844:52;5924:9;5918:16;5974:4;5967:5;5963:16;5956:5;5953:27;5943:55;;5994:1;5991;5984:12;6033:246;6073:4;-1:-1:-1;;;;;6186:10:203;;;;6156;;6208:12;;;6205:38;;;6223:18;;:::i;:::-;6260:13;;6033:246;-1:-1:-1;;;6033:246:203:o;6563:127::-;6624:10;6619:3;6615:20;6612:1;6605:31;6655:4;6652:1;6645:15;6679:4;6676:1;6669:15;6695:138;6774:13;;6796:31;6774:13;6796:31;:::i;:::-;6695:138;;;:::o;6838:1129::-;6933:6;6964:2;7007;6995:9;6986:7;6982:23;6978:32;6975:52;;;7023:1;7020;7013:12;6975:52;7056:9;7050:16;7085:18;7126:2;7118:6;7115:14;7112:34;;;7142:1;7139;7132:12;7112:34;7180:6;7169:9;7165:22;7155:32;;7225:7;7218:4;7214:2;7210:13;7206:27;7196:55;;7247:1;7244;7237:12;7196:55;7276:2;7270:9;7298:2;7294;7291:10;7288:36;;;7304:18;;:::i;:::-;7350:2;7347:1;7343:10;7382:2;7376:9;7445:2;7441:7;7436:2;7432;7428:11;7424:25;7416:6;7412:38;7500:6;7488:10;7485:22;7480:2;7468:10;7465:18;7462:46;7459:72;;;7511:18;;:::i;:::-;7547:2;7540:22;7597:18;;;7631:15;;;;-1:-1:-1;7673:11:203;;;7669:20;;;7701:19;;;7698:39;;;7733:1;7730;7723:12;7698:39;7757:11;;;;7777:159;7793:6;7788:3;7785:15;7777:159;;;7859:34;7889:3;7859:34;:::i;:::-;7847:47;;7810:12;;;;7914;;;;7777:159;;;7955:6;6838:1129;-1:-1:-1;;;;;;;;6838:1129:203:o;7972:127::-;8033:10;8028:3;8024:20;8021:1;8014:31;8064:4;8061:1;8054:15;8088:4;8085:1;8078:15;10412:274;10541:3;10579:6;10573:13;10595:53;10641:6;10636:3;10629:4;10621:6;10617:17;10595:53;:::i;:::-;10664:16;;;;;10412:274;-1:-1:-1;;10412:274:203:o", "language": "Solidity", "natspec": {"details": "When paused, allows only withdraw/unstake", "kind": "dev", "methods": {"approve(address,uint256)": {"notice": "Approve staked tokens for spender.", "params": {"amount": "Amount to approve.", "spender": "Address to approve tokens for."}}, "decreaseActionLockedBalance(address,uint256)": {"notice": "If an action is executed/reset, this updates the actionLockedBalances for the user.", "params": {"account": "Address that registered the action.", "amount": "Amount executed/reset by the action."}}, "getStakedByActions()": {"notice": "Get the total amount of tokens that are staked by actions", "returns": {"_0": "Total amount staked by actions"}}, "increaseActionLockedBalance(address,uint256)": {"notice": "If an action is registered and stakes funds, this updates the actionLockedBalances for the user.", "params": {"account": "Address that registered the action.", "amount": "Amount staked by the action."}}, "pause()": {"notice": "Pause the contract."}, "stake(uint256)": {"notice": "Stake an amount of vault tokens.", "params": {"amount": "Amount of token to stake."}}, "stakeFor(address,uint256)": {"notice": "Stake amount of vault token on behalf of another account.", "params": {"account": "Account for which tokens will be staked.", "amount": "Amount of token to stake."}}, "stakedAndActionLockedBalanceOf(address)": {"notice": "Returns the total balance in the staker vault, including that locked in positions.", "params": {"account": "Account to query balance for."}, "returns": {"_0": "Total balance in staker vault for account."}}, "transfer(address,uint256)": {"details": "This is not an ERC20 transfer, as tokens are still owned by this contract, but fees get updated in the LP pool.", "notice": "Transfer staked tokens to an account.", "params": {"account": "Address to transfer to.", "amount": "Amount to transfer."}}, "transferFrom(address,address,uint256)": {"details": "This is not an ERC20 transfer, as tokens are still owned by this contract, but fees get updated in the LP pool.", "notice": "Transfer staked tokens from src to dst.", "params": {"amount": "Amount to transfer.", "dst": "Address to transfer to.", "src": "Address to transfer from."}}, "unpause()": {"notice": "Unpause the contract."}, "unstakeFor(address,address,uint256)": {"details": "Needs to be approved.", "notice": "Unstake tokens on behalf of another account.", "params": {"amount": "Amount of token to unstake/receive.", "dst": "Account receiving the tokens.", "src": "Account for which tokens will be unstaked."}}}, "notice": "This contract handles staked tokens from Mero pools However, note that this is NOT an ERC-20 compliant contract and these tokens should never be integrated with any protocol assuming ERC-20 compliant tokens", "version": 1}, "offset": [1160, 13316], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xBA4AC711 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xE7945D00 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xFCB70010 EQ PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA4AC711 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xC5EC7874 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xD828C986 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7310B58 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA7310B58 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xA853BA2F EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x8AA01EA9 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x6A278CD9 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x6A278CD9 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x756B2693 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x7AA49725 EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x4974C679 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x5790A0C8 EQ PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x2954018C EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x2EE40908 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x435DA5 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x232 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x2B86 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x200 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB2 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x200 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B86 JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x230 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB2 JUMP JUMPDEST PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2B86 JUMP JUMPDEST PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x335 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0C JUMP JUMPDEST PUSH2 0x180E JUMP JUMPDEST PUSH2 0x230 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0C JUMP JUMPDEST PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x230 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x335 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x3C0 PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x335 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0C JUMP JUMPDEST PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B86 JUMP JUMPDEST PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2E0 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x335 PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0C JUMP JUMPDEST PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x200 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x335 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x335 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BF3 JUMP JUMPDEST PUSH2 0x23CB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2B86 JUMP JUMPDEST PUSH2 0x254D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x18DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x18DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x668 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH24 0x1CD85B59481859191C995CDCC81B9BDD08185B1B1BDDD959 PUSH1 0x42 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ ISZERO PUSH2 0x72D JUMPI POP PUSH1 0x0 NOT PUSH2 0x753 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH22 0x696E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP3 LT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND DUP3 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x14 DUP5 MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP5 DUP3 LT ISZERO PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB07B709B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB07B709B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xB07B709B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB07B709B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x956FEF3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x255BFBCC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E36C193 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF1B60C98 SWAP1 PUSH2 0x9E7 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA2C DUP7 DUP5 PUSH2 0x27A0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP6 DUP7 AND OR SWAP1 SSTORE SWAP2 DUP11 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP10 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0xA7B SWAP2 DUP6 SWAP2 AND PUSH2 0x2D3A JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 NOT DUP6 EQ PUSH2 0xAD0 JUMPI DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP9 PUSH1 0x40 MLOAD PUSH2 0xB15 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB32 CALLER CALLER DUP4 PUSH2 0x10E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x18DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x2D65 JUMP JUMPDEST LT ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB07B709B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB07B709B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD11 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x2D65 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH4 0x956FEF3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x255BFBCC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE1F SWAP2 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E36C193 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF1B60C98 SWAP1 PUSH2 0xE52 SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0xE9B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP8 PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x2D65 JUMP JUMPDEST PUSH2 0xF12 SWAP2 SWAP1 PUSH2 0x2D7E JUMP JUMPDEST SWAP1 POP DUP5 DUP2 EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF8E SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2D3A JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x2D95 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1059 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x2DAD JUMP JUMPDEST PUSH2 0x1086 CALLER PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH23 0x6E6F7420617574686F72697A656420746F207061757365 PUSH1 0x48 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x10D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1101 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE POP SWAP1 PUSH2 0x1143 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH24 0x1CD85B59481859191C995CDCC81B9BDD08185B1B1BDDD959 PUSH1 0x42 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO PUSH2 0x119D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x956FEF3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x255BFBCC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND DUP2 DUP5 ADD MSTORE DUP5 DUP5 MSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP5 KECCAK256 CALLER DUP1 DUP7 MSTORE SWAP4 MSTORE SWAP3 KECCAK256 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 SWAP2 EQ DUP1 PUSH2 0x1296 JUMPI POP DUP5 DUP2 LT ISZERO JUMPDEST DUP1 PUSH2 0x12A9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x756E617574686F72697A656420616363657373 PUSH1 0x68 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x12F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP7 GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x13D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB07B709B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB07B709B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D1 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST POP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E36C193 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF1B60C98 SWAP1 PUSH2 0x141C SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x144A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x146A JUMPI POP PUSH1 0x0 NOT DUP3 EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x147F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x14BD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x14B7 SWAP1 DUP5 SWAP1 PUSH2 0x2D7E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x14EE SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2DD0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1524 SWAP2 SWAP1 PUSH2 0x2D7E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x153E SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP9 DUP9 PUSH2 0x28A5 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1579 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x15AC JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5790A0C8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH6 0x30B1BA34B7B7 PUSH1 0xD1 SHL PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x167F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A3 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x756E617574686F72697A656420616363657373 PUSH1 0x68 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x16ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1775 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB07B709B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB07B709B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x174F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 DUP2 GT ISZERO PUSH2 0x17E1 JUMPI DUP4 DUP2 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1888 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18AC SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x756E617574686F72697A656420616363657373 PUSH1 0x68 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F3A0E41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1935 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1959 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x19D85D59D9481ADA5B1B1959 PUSH1 0xA2 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x199D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41C0E1B5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x0 PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1A5F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28DA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x430E2E57 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x430E2E57 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0xA22E3A1F87B5AB0D1453DA4C21E9EA8A03EFB6295F0EB8B98F9411514E15DAF3 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9B SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x756E617574686F72697A656420616363657373 PUSH1 0x68 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x1BE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x726F6C6520616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1C42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x1C99 SWAP1 PUSH32 0x0 AND PUSH2 0x28DA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x430E2E57 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x430E2E57 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1807 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1CFC CALLER PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH23 0x6E6F7420617574686F72697A656420746F207061757365 PUSH1 0x48 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x1D4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB32 CALLER DUP3 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP2 PUSH2 0x1DB0 SWAP2 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x18DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1E58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x73656C662D7472616E73666572206E6F7420616C6C6F77656400000000000000 PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x1EB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND DUP3 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x14 DUP5 MSTORE PUSH20 0x696E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 DUP4 GT ISZERO PUSH2 0x1F3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x956FEF3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x255BFBCC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FCD SWAP2 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E36C193 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF1B60C98 SWAP1 PUSH2 0x2000 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x201A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x202E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP POP DUP1 ISZERO PUSH2 0x2125 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB07B709B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xB07B709B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2092 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20B6 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xB07B709B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB07B709B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2123 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST POP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP5 SWAP1 SUB CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x217E SWAP2 DUP6 SWAP2 AND PUSH2 0x2D3A JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x21E7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5D138A34 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2257 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x227F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2E1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x22E5 JUMPI PUSH1 0x2 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x22A4 JUMPI PUSH2 0x22A4 PUSH2 0x2EE3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x22DB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0x2D95 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2285 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x230D JUMPI PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2311 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2399 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH3 0xFFFF00 NOT AND PUSH3 0x10100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x23C7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH17 0x34B7333630BA34B7B72FB6B0B730B3B2B9 PUSH1 0x79 SHL PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2474 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x756E617574686F72697A656420616363657373 PUSH1 0x68 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x24BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24DF JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH3 0xE7945D PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH4 0x1000000 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE7945D00 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x252A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x253E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH6 0x30B1BA34B7B7 PUSH1 0xD1 SHL PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E9 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x756E617574686F72697A656420616363657373 PUSH1 0x68 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x2633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x26BB JUMPI PUSH1 0x40 MLOAD PUSH4 0xB07B709B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB07B709B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2695 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26B9 SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP2 SWAP1 PUSH1 0x10 SWAP1 PUSH2 0x26F6 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2D3A JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH11 0x3937B632A6B0B730B3B2B9 PUSH1 0xA9 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2776 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x279A SWAP2 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x27FD DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x27C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x291C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x24745215 PUSH1 0xE2 SHL DUP2 MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x91D14854 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x279A SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x28D5 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x27C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH16 0x34B7333630BA34B7B726B0B730B3B2B9 PUSH1 0x81 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2971 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29EE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x28D5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x298F SWAP2 SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x28D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x29FD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2A07 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2A68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2ABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2ADB SWAP2 SWAP1 PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B18 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2B2D DUP3 DUP3 DUP7 PUSH2 0x2B38 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2B47 JUMPI POP DUP2 PUSH2 0x2A00 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2B57 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2BA4 DUP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2BD2 DUP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2BE2 DUP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A00 DUP2 PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C47 DUP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C57 DUP2 PUSH2 0x2B71 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C7D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C65 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x27FD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2CAD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2C62 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A00 DUP2 PUSH2 0x2B71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x2D5C JUMPI PUSH2 0x2D5C PUSH2 0x2D24 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2D90 JUMPI PUSH2 0x2D90 PUSH2 0x2D24 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2DA8 JUMPI PUSH2 0x2DA8 PUSH2 0x2D24 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x2DF0 JUMPI PUSH2 0x2DF0 PUSH2 0x2D24 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2E19 DUP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2E6F JUMPI PUSH2 0x2E6F PUSH2 0x2DF8 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2E94 JUMPI PUSH2 0x2E94 PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x2EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2ED7 JUMPI PUSH2 0x2EC8 DUP6 PUSH2 0x2E0E JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x2EB7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2F0B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2C62 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH27 0x65726F2061646472657373206E6F7420616C6C6F77656400000000 STOP STOP STOP STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DUP15 PUSH7 0xFAC0273C735D79 RETURNDATACOPY EXTCODEHASH SWAP10 REVERT 0xBB CALLER 0x23 PUSH22 0xEDE8BF3563D9C675C595A581EF2564736F6C63430008 EXP STOP CALLER ", "sha1": "56916b17f3414b43c39f17d54dd2f6ddf7dba253", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\nimport \"../libraries/ScaledMath.sol\";\nimport \"../libraries/Errors.sol\";\nimport \"../libraries/AddressProviderHelpers.sol\";\nimport \"../libraries/UncheckedMath.sol\";\n\nimport \"../interfaces/IStakerVault.sol\";\nimport \"../interfaces/IAddressProvider.sol\";\nimport \"../interfaces/IVault.sol\";\nimport \"../interfaces/tokenomics/IRewardsGauge.sol\";\nimport \"../interfaces/pool/ILiquidityPool.sol\";\nimport \"../interfaces/tokenomics/ILpGauge.sol\";\nimport \"../interfaces/IERC20Full.sol\";\n\nimport \"./Controller.sol\";\nimport \"./pool/LiquidityPool.sol\";\nimport \"./access/Authorization.sol\";\nimport \"./utils/Pausable.sol\";\n\n/**\n * @notice This contract handles staked tokens from Mero pools\n * However, note that this is NOT an ERC-20 compliant contract and these\n * tokens should never be integrated with any protocol assuming ERC-20 compliant\n * tokens\n * @dev When paused, allows only withdraw/unstake\n */\ncontract StakerVault is IStakerVault, Authorization, Pausable, Initializable {\n    using AddressProviderHelpers for IAddressProvider;\n    using SafeERC20 for IERC20;\n    using ScaledMath for uint256;\n    using UncheckedMath for uint256;\n\n    struct AccountInfo {\n        uint128 balance;\n        uint128 actionLockedBalance;\n    }\n\n    address public lpGauge;\n\n    IAddressProvider public immutable addressProvider;\n\n    address public token;\n\n    mapping(address => AccountInfo) public accountInfo;\n\n    mapping(address => mapping(address => uint256)) internal _allowances;\n\n    // All the data fields required for the staking tracking\n    uint256 private _poolTotalStaked;\n\n    event LpGaugeUpdated(address lpGauge_);\n\n    constructor(IAddressProvider _addressProvider)\n        Authorization(_addressProvider.getRoleManager())\n    {\n        addressProvider = _addressProvider;\n    }\n\n    function initialize(address _token) external override initializer {\n        token = _token;\n    }\n\n    function initializeLpGauge(address lpGauge_) external override onlyGovernance {\n        require(lpGauge == address(0), Error.ROLE_EXISTS);\n        lpGauge = lpGauge_;\n        addressProvider.getInflationManager().addGaugeForVault(token);\n    }\n\n    function updateLpGauge(address lpGauge_) external override onlyGovernance {\n        require(!ILpGauge(lpGauge_).killed(), Error.GAUGE_KILLED);\n        ILpGauge(lpGauge).kill();\n        lpGauge = lpGauge_;\n        addressProvider.getInflationManager().addGaugeForVault(token);\n        emit LpGaugeUpdated(lpGauge_);\n    }\n\n    /**\n     * @notice Transfer staked tokens to an account.\n     * @dev This is not an ERC20 transfer, as tokens are still owned by this contract, but fees get updated in the LP pool.\n     * @param account Address to transfer to.\n     * @param amount Amount to transfer.\n     */\n    function transfer(address account, uint256 amount) external override notPaused {\n        require(account != address(0), Error.ZERO_ADDRESS_NOT_ALLOWED);\n        require(msg.sender != account, Error.SELF_TRANSFER_NOT_ALLOWED);\n        AccountInfo memory accountInfo_ = accountInfo[msg.sender];\n        require(accountInfo_.balance >= amount, Error.INSUFFICIENT_BALANCE);\n\n        ILiquidityPool pool = addressProvider.getPoolForToken(token);\n        pool.handleLpTokenTransfer(msg.sender, account, amount);\n\n        address lpGauge_ = lpGauge;\n        if (lpGauge_ != address(0)) {\n            ILpGauge(lpGauge_).userCheckpoint(msg.sender);\n            ILpGauge(lpGauge_).userCheckpoint(account);\n        }\n\n        accountInfo[msg.sender].balance = uint128(\n            uint256(accountInfo_.balance).uncheckedSub(amount)\n        );\n        accountInfo[account].balance += uint128(amount);\n\n        emit Transfer(msg.sender, account, amount);\n    }\n\n    /**\n     * @notice Transfer staked tokens from src to dst.\n     * @dev This is not an ERC20 transfer, as tokens are still owned by this contract, but fees get updated in the LP pool.\n     * @param src Address to transfer from.\n     * @param dst Address to transfer to.\n     * @param amount Amount to transfer.\n     */\n    function transferFrom(\n        address src,\n        address dst,\n        uint256 amount\n    ) external override notPaused {\n        require(src != address(0) && dst != address(0), Error.ZERO_ADDRESS_NOT_ALLOWED);\n\n        /* Do not allow self transfers */\n        require(src != dst, Error.SAME_ADDRESS_NOT_ALLOWED);\n\n        /* Get the allowance, infinite for the account owner */\n        uint256 startingAllowance;\n        if (msg.sender == src) {\n            startingAllowance = type(uint256).max;\n        } else {\n            startingAllowance = _allowances[src][msg.sender];\n        }\n        require(startingAllowance >= amount, Error.INSUFFICIENT_ALLOWANCE);\n\n        AccountInfo memory accountInfo_ = accountInfo[src];\n        uint256 srcTokens = accountInfo_.balance;\n        require(srcTokens >= amount, Error.INSUFFICIENT_BALANCE);\n\n        address lpGauge_ = lpGauge;\n        if (lpGauge_ != address(0)) {\n            ILpGauge(lpGauge_).userCheckpoint(src);\n            ILpGauge(lpGauge_).userCheckpoint(dst);\n        }\n        ILiquidityPool pool = addressProvider.getPoolForToken(token);\n        pool.handleLpTokenTransfer(src, dst, amount);\n\n        /* Update token balances */\n        accountInfo[src].balance = uint128(srcTokens.uncheckedSub(amount));\n        accountInfo[dst].balance += uint128(amount);\n\n        /* Update allowance if necessary */\n        if (startingAllowance != type(uint256).max) {\n            _allowances[src][msg.sender] = startingAllowance.uncheckedSub(amount);\n        }\n        emit Transfer(src, dst, amount);\n    }\n\n    /**\n     * @notice Approve staked tokens for spender.\n     * @param spender Address to approve tokens for.\n     * @param amount Amount to approve.\n     */\n    function approve(address spender, uint256 amount) external override notPaused {\n        require(spender != address(0), Error.ZERO_ADDRESS_NOT_ALLOWED);\n        _allowances[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n    }\n\n    /**\n     * @notice If an action is registered and stakes funds, this updates the actionLockedBalances for the user.\n     * @param account Address that registered the action.\n     * @param amount Amount staked by the action.\n     */\n    function increaseActionLockedBalance(address account, uint256 amount)\n        external\n        override\n        onlyRole(Roles.ACTION)\n    {\n        address lpGauge_ = lpGauge;\n        if (lpGauge_ != address(0)) {\n            ILpGauge(lpGauge_).userCheckpoint(account);\n        }\n        accountInfo[account].actionLockedBalance += uint128(amount);\n    }\n\n    /**\n     * @notice If an action is executed/reset, this updates the actionLockedBalances for the user.\n     * @param account Address that registered the action.\n     * @param amount Amount executed/reset by the action.\n     */\n    function decreaseActionLockedBalance(address account, uint256 amount)\n        external\n        override\n        onlyRole(Roles.ACTION)\n    {\n        address lpGauge_ = lpGauge;\n        if (lpGauge_ != address(0)) {\n            ILpGauge(lpGauge_).userCheckpoint(account);\n        }\n        uint256 actionLockedBalance_ = accountInfo[account].actionLockedBalance;\n        if (actionLockedBalance_ > amount) {\n            accountInfo[account].actionLockedBalance = uint128(\n                actionLockedBalance_.uncheckedSub(amount)\n            );\n        } else {\n            accountInfo[account].actionLockedBalance = 0;\n        }\n    }\n\n    function poolCheckpoint() external override returns (bool) {\n        address lpGauge_ = lpGauge;\n        if (lpGauge_ == address(0)) return false;\n        ILpGauge(lpGauge_).poolCheckpoint();\n        return true;\n    }\n\n    function poolCheckpoint(uint256 updateEndTime)\n        external\n        override\n        onlyRole(Roles.INFLATION_MANAGER)\n        returns (bool)\n    {\n        if (lpGauge == address(0)) return false;\n        ILpGauge(lpGauge).poolCheckpoint(updateEndTime);\n        return true;\n    }\n\n    /**\n     * @notice Get the total amount of tokens that are staked by actions\n     * @return Total amount staked by actions\n     */\n    function getStakedByActions() external view override returns (uint256) {\n        address[] memory actions = addressProvider.allActions();\n        uint256 total;\n        for (uint256 i; i < actions.length; i = i.uncheckedInc()) {\n            total += accountInfo[actions[i]].balance;\n        }\n        return total;\n    }\n\n    function allowance(address owner, address spender) external view override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function balanceOf(address account) external view override returns (uint256) {\n        return accountInfo[account].balance;\n    }\n\n    function getPoolTotalStaked() external view override returns (uint256) {\n        return _poolTotalStaked;\n    }\n\n    /**\n     * @notice Returns the total balance in the staker vault, including that locked in positions.\n     * @param account Account to query balance for.\n     * @return Total balance in staker vault for account.\n     */\n    function stakedAndActionLockedBalanceOf(address account)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        AccountInfo memory accountInfo_ = accountInfo[account];\n        return accountInfo_.balance + accountInfo_.actionLockedBalance;\n    }\n\n    function actionLockedBalanceOf(address account) external view override returns (uint256) {\n        return accountInfo[account].actionLockedBalance;\n    }\n\n    function decimals() external view override returns (uint8) {\n        return IERC20Full(token).decimals();\n    }\n\n    function getToken() external view override returns (address) {\n        return token;\n    }\n\n    function unstake(uint256 amount) public override {\n        unstakeFor(msg.sender, msg.sender, amount);\n    }\n\n    /**\n     * @notice Stake an amount of vault tokens.\n     * @param amount Amount of token to stake.\n     */\n    function stake(uint256 amount) public override {\n        stakeFor(msg.sender, amount);\n    }\n\n    /**\n     * @notice Stake amount of vault token on behalf of another account.\n     * @param account Account for which tokens will be staked.\n     * @param amount Amount of token to stake.\n     */\n    function stakeFor(address account, uint256 amount) public override notPaused {\n        require(account != address(0), Error.ZERO_ADDRESS_NOT_ALLOWED);\n        IERC20 token_ = IERC20(token);\n        require(token_.balanceOf(msg.sender) >= amount, Error.INSUFFICIENT_BALANCE);\n\n        address lpGauge_ = lpGauge;\n        if (lpGauge_ != address(0)) {\n            ILpGauge(lpGauge_).userCheckpoint(account);\n        }\n\n        uint256 oldBal = token_.balanceOf(address(this));\n\n        if (msg.sender != account) {\n            ILiquidityPool pool = addressProvider.getPoolForToken(address(token_));\n            pool.handleLpTokenTransfer(msg.sender, account, amount);\n        }\n\n        token_.safeTransferFrom(msg.sender, address(this), amount);\n        uint256 staked = token_.balanceOf(address(this)) - oldBal;\n        require(staked == amount, Error.INVALID_AMOUNT);\n        accountInfo[account].balance += uint128(staked);\n\n        _poolTotalStaked += staked;\n        emit Staked(account, amount);\n    }\n\n    /**\n     * @notice Unstake tokens on behalf of another account.\n     * @dev Needs to be approved.\n     * @param src Account for which tokens will be unstaked.\n     * @param dst Account receiving the tokens.\n     * @param amount Amount of token to unstake/receive.\n     */\n    function unstakeFor(\n        address src,\n        address dst,\n        uint256 amount\n    ) public override {\n        require(src != address(0) && dst != address(0), Error.ZERO_ADDRESS_NOT_ALLOWED);\n        require(dst != address(this), Error.SAME_ADDRESS_NOT_ALLOWED);\n        IERC20 token_ = IERC20(token);\n        ILiquidityPool pool = addressProvider.getPoolForToken(address(token_));\n        AccountInfo memory srcAccountInfo_ = accountInfo[src];\n        uint256 allowance_ = _allowances[src][msg.sender];\n        require(\n            src == msg.sender || allowance_ >= amount || address(pool) == msg.sender,\n            Error.UNAUTHORIZED_ACCESS\n        );\n        require(srcAccountInfo_.balance >= amount, Error.INSUFFICIENT_BALANCE);\n        address lpGauge_ = lpGauge;\n        if (lpGauge_ != address(0)) {\n            ILpGauge(lpGauge_).userCheckpoint(src);\n        }\n\n        if (src != dst) {\n            pool.handleLpTokenTransfer(src, dst, amount);\n        }\n\n        if (src != msg.sender && allowance_ != type(uint256).max && address(pool) != msg.sender) {\n            // update allowance\n            _allowances[src][msg.sender] -= amount;\n        }\n        accountInfo[src].balance -= uint128(amount);\n\n        _poolTotalStaked -= amount;\n\n        token_.safeTransfer(dst, amount);\n\n        emit Unstaked(src, amount);\n    }\n\n    function _isAuthorizedToPause(address account) internal view override returns (bool) {\n        return _roleManager().hasRole(Roles.GOVERNANCE, account);\n    }\n}\n", "sourceMap": "1160:12156:38:-:0;;;1885:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:33;:16;-1:-1:-1;;;;;1954:31:38;;;;;;:33;;:::i;:::-;-1:-1:-1;;;;;255:27:39;;;;;2003:34:38::1;;::::0;1160:12156;;2581:184:182;2699:58;;-1:-1:-1;;;2699:58:182;;-1:-1:-1;;;2699:58:182;;;614:25:203;2655:12:182;;-1:-1:-1;;;;;2699:19:182;;;;;587:18:203;;2699:58:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2679:79;2581:184;-1:-1:-1;;2581:184:182:o;14:149:203:-;-1:-1:-1;;;;;107:31:203;;97:42;;87:70;;153:1;150;143:12;87:70;14:149;:::o;168:295::-;264:6;317:2;305:9;296:7;292:23;288:32;285:52;;;333:1;330;323:12;285:52;365:9;359:16;384:49;427:5;384:49;:::i;:::-;452:5;168:295;-1:-1:-1;;;168:295:203:o;650:269::-;1160:12156:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/StakerVault.sol", "type": "contract", "deployment": {"address": "0x14A4AEFF0FfC9378aE8157f170d141C3582e61Fc", "chainid": "1", "blockHeight": 15323665}}